{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"../ExponentAV","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"./Sound","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Recording = exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@unimodules/core\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[6], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../ExponentAV\"));\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[8], \"./AudioAvailability\");\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[9], \"./Sound\");\n\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = 1;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = 2;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = 3;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = 4;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = 5;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = 6;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = 7;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = 8;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = 9;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = 1;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = 2;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = 3;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = 4;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = 5;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = 'lpcm';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = 'ac-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = 'cac3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = 'ima4';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = 'aac ';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = 'celp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = 'hvxc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = 'twvq';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = 'MAC3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = 'MAC6';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = 'ulaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = 'alaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = 'QDMC';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = 'QDM2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = 'Qclp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = '.mp1';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = '.mp2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = '.mp3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = 'alac';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = 'aach';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = 'aacl';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = 'aace';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = 'aacf';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = 'aacg';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = 'aacp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = 'aacs';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = 'samr';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = 'sawb';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = 'AUDB';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = 'ilbc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = 0x6d730011;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = 0x6d730031;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = 'aes3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = 'ec-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = 0;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = 0x20;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = 0x40;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = 0x60;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = 0x7f;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = 0;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = 1;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = 2;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = 3;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE;\n  var RECORDING_OPTIONS_PRESET_HIGH_QUALITY = {\n    android: {\n      extension: '.m4a',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = RECORDING_OPTIONS_PRESET_HIGH_QUALITY;\n  var RECORDING_OPTIONS_PRESET_LOW_QUALITY = {\n    android: {\n      extension: '.3gp',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n  var _recorderExists = false;\n  var eventEmitter = _core.Platform.OS === 'android' ? new _core.EventEmitter(_ExponentAV.default) : null;\n\n  var Recording = function () {\n    function Recording() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Recording);\n      this._subscription = null;\n      this._canRecord = false;\n      this._isDoneRecording = false;\n      this._finalDurationMillis = 0;\n      this._uri = null;\n      this._onRecordingStatusUpdate = null;\n      this._progressUpdateTimeoutVariable = null;\n      this._progressUpdateIntervalMillis = _AV._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n      this._options = null;\n\n      this._cleanupForUnloadedRecorder = function _callee(finalStatus) {\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this._canRecord = false;\n                _this._isDoneRecording = true;\n                _this._finalDurationMillis = finalStatus.durationMillis;\n                _recorderExists = false;\n\n                if (_this._subscription) {\n                  _this._subscription.remove();\n\n                  _this._subscription = null;\n                }\n\n                _this._disablePolling();\n\n                _context.next = 8;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n\n      this._pollingLoop = function _callee2() {\n        return _regenerator.default.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, _AudioAvailability.isAudioEnabled)() && _this._canRecord && _this._onRecordingStatusUpdate != null)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _this._progressUpdateTimeoutVariable = setTimeout(_this._pollingLoop, _this._progressUpdateIntervalMillis);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this._disablePolling();\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[2, 7]]);\n      };\n\n      this.getStatusAsync = function _callee3() {\n        var status;\n        return _regenerator.default.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!_this._canRecord) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getAudioRecordingStatus();\n                }));\n\n              case 2:\n                status = {\n                  canRecord: false,\n                  isRecording: false,\n                  isDoneRecording: _this._isDoneRecording,\n                  durationMillis: _this._finalDurationMillis\n                };\n\n                _this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context3.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      };\n    }\n\n    (0, _createClass2.default)(Recording, [{\n      key: \"_disablePolling\",\n      value: function _disablePolling() {\n        if (this._progressUpdateTimeoutVariable != null) {\n          clearTimeout(this._progressUpdateTimeoutVariable);\n          this._progressUpdateTimeoutVariable = null;\n        }\n      }\n    }, {\n      key: \"_enablePollingIfNecessaryAndPossible\",\n      value: function _enablePollingIfNecessaryAndPossible() {\n        if ((0, _AudioAvailability.isAudioEnabled)() && this._canRecord && this._onRecordingStatusUpdate != null) {\n          this._disablePolling();\n\n          this._pollingLoop();\n        }\n      }\n    }, {\n      key: \"_callOnRecordingStatusUpdateForNewStatus\",\n      value: function _callOnRecordingStatusUpdateForNewStatus(status) {\n        if (this._onRecordingStatusUpdate != null) {\n          this._onRecordingStatusUpdate(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var _status;\n\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._canRecord) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                _context4.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                _status = _context4.sent;\n\n                this._callOnRecordingStatusUpdateForNewStatus(_status);\n\n                return _context4.abrupt(\"return\", _status);\n\n              case 9:\n                throw new Error('Cannot complete operation because this recorder is not ready to record.');\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setOnRecordingStatusUpdate\",\n      value: function setOnRecordingStatusUpdate(onRecordingStatusUpdate) {\n        this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n\n        if (onRecordingStatusUpdate == null) {\n          this._disablePolling();\n        } else {\n          this._enablePollingIfNecessaryAndPossible();\n        }\n\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"setProgressUpdateInterval\",\n      value: function setProgressUpdateInterval(progressUpdateIntervalMillis) {\n        this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"prepareToRecordAsync\",\n      value: function prepareToRecordAsync() {\n        var options,\n            extensionRegex,\n            _ref,\n            uri,\n            _status2,\n            currentStatus,\n            _args5 = arguments;\n\n        return _regenerator.default.async(function prepareToRecordAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                options = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!_recorderExists) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('Only one Recording object can be prepared at a given time.');\n\n              case 4:\n                if (!this._isDoneRecording) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                throw new Error('This Recording object is done recording; you must make a new one.');\n\n              case 6:\n                if (!(!options || !options.android || !options.ios)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw new Error('You must provide recording options for android and ios in order to prepare to record.');\n\n              case 8:\n                extensionRegex = /^\\.\\w+$/;\n\n                if (!(!options.android.extension || !options.ios.extension || !extensionRegex.test(options.android.extension) || !extensionRegex.test(options.ios.extension))) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                throw new Error(\"Your file extensions must match \" + extensionRegex.toString() + \".\");\n\n              case 11:\n                if (this._canRecord) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                if (eventEmitter) {\n                  this._subscription = eventEmitter.addListener('Expo.Recording.recorderUnloaded', this._cleanupForUnloadedRecorder);\n                }\n\n                _context5.next = 15;\n                return _regenerator.default.awrap(_ExponentAV.default.prepareAudioRecorder(options));\n\n              case 15:\n                _ref = _context5.sent;\n                uri = _ref.uri;\n                _status2 = _ref.status;\n                _recorderExists = true;\n                this._uri = uri;\n                this._options = options;\n                this._canRecord = true;\n                currentStatus = (0, _objectSpread2.default)({}, _status2, {\n                  canRecord: true\n                });\n\n                this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n\n                this._enablePollingIfNecessaryAndPossible();\n\n                return _context5.abrupt(\"return\", currentStatus);\n\n              case 28:\n                throw new Error('This Recording object is already prepared to record.');\n\n              case 29:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"startAsync\",\n      value: function startAsync() {\n        return _regenerator.default.async(function startAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.startAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"pauseAsync\",\n      value: function pauseAsync() {\n        return _regenerator.default.async(function pauseAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.pauseAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"stopAndUnloadAsync\",\n      value: function stopAndUnloadAsync() {\n        var finalStatus;\n        return _regenerator.default.async(function stopAndUnloadAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this._canRecord) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                if (!this._isDoneRecording) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                throw new Error('Cannot unload a Recording that has already been unloaded.');\n\n              case 5:\n                throw new Error('Cannot unload a Recording that has not been prepared.');\n\n              case 6:\n                _context8.next = 8;\n                return _regenerator.default.awrap(_ExponentAV.default.stopAudioRecording());\n\n              case 8:\n                finalStatus = _context8.sent;\n                _context8.next = 11;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadAudioRecorder());\n\n              case 11:\n                return _context8.abrupt(\"return\", this._cleanupForUnloadedRecorder(finalStatus));\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"getURI\",\n      value: function getURI() {\n        return this._uri;\n      }\n    }, {\n      key: \"createNewLoadedSound\",\n      value: function createNewLoadedSound() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args9 = arguments;\n        return _regenerator.default.async(function createNewLoadedSound$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                initialStatus = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n                onPlaybackStatusUpdate = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : null;\n                console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");\n                return _context9.abrupt(\"return\", this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"createNewLoadedSoundAsync\",\n      value: function createNewLoadedSoundAsync() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args10 = arguments;\n        return _regenerator.default.async(function createNewLoadedSoundAsync$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                initialStatus = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};\n                onPlaybackStatusUpdate = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : null;\n\n                if (!(this._uri == null || !this._isDoneRecording)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot create sound when the Recording has not finished!');\n\n              case 4:\n                return _context10.abrupt(\"return\", _Sound.Sound.createAsync({\n                  uri: this._uri\n                }, initialStatus, onPlaybackStatusUpdate, false));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Recording;\n  }();\n\n  exports.Recording = Recording;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,4,0],[25,0,5,0],[27,0,7,7],[27,6,7,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT"],[27,52,7,59],[27,55,7,62],[27,56,7,7],[29,0,8,7],[29,6,8,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[29,54,8,61],[29,57,8,64],[29,58,8,7],[31,0,9,7],[31,6,9,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[31,51,9,58],[31,54,9,61],[31,55,9,7],[33,0,10,7],[33,6,10,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB"],[33,51,10,58],[33,54,10,61],[33,55,10,7],[35,0,11,7],[35,6,11,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB"],[35,51,11,58],[35,54,11,61],[35,55,11,7],[37,0,12,7],[37,6,12,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF"],[37,53,12,60],[37,56,12,63],[37,57,12,7],[39,0,13,7],[39,6,13,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS"],[39,53,13,60],[39,56,13,63],[39,57,13,7],[41,0,14,7],[41,6,14,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP"],[41,52,14,59],[41,55,14,62],[41,56,14,7],[43,0,15,7],[43,6,15,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS"],[43,52,15,59],[43,55,15,62],[43,56,15,7],[45,0,16,7],[45,6,16,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM"],[45,49,16,56],[45,52,16,59],[45,53,16,7],[47,0,17,7],[47,6,17,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT"],[47,52,17,59],[47,55,17,62],[47,56,17,7],[49,0,18,7],[49,6,18,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[49,51,18,58],[49,54,18,61],[49,55,18,7],[51,0,19,7],[51,6,19,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB"],[51,51,19,58],[51,54,19,61],[51,55,19,7],[53,0,20,7],[53,6,20,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[53,48,20,55],[53,51,20,58],[53,52,20,7],[55,0,21,7],[55,6,21,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC"],[55,51,21,58],[55,54,21,61],[55,55,21,7],[57,0,22,7],[57,6,22,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD"],[57,52,22,59],[57,55,22,62],[57,56,22,7],[59,0,23,7],[59,6,23,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM"],[59,50,23,57],[59,53,23,60],[59,59,23,7],[61,0,24,7],[61,6,24,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3"],[61,44,24,51],[61,47,24,54],[61,53,24,7],[63,0,25,7],[63,6,25,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3"],[63,49,25,56],[63,52,25,59],[63,58,25,7],[65,0,26,7],[65,6,26,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4"],[65,50,26,57],[65,53,26,60],[65,59,26,7],[67,0,27,7],[67,6,27,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC"],[67,49,27,56],[67,52,27,59],[67,58,27,7],[69,0,28,7],[69,6,28,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP"],[69,50,28,57],[69,53,28,60],[69,59,28,7],[71,0,29,7],[71,6,29,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC"],[71,50,29,57],[71,53,29,60],[71,59,29,7],[73,0,30,7],[73,6,30,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ"],[73,52,30,59],[73,55,30,62],[73,61,30,7],[75,0,31,7],[75,6,31,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3"],[75,46,31,53],[75,49,31,56],[75,55,31,7],[77,0,32,7],[77,6,32,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6"],[77,46,32,53],[77,49,32,56],[77,55,32,7],[79,0,33,7],[79,6,33,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW"],[79,45,33,52],[79,48,33,55],[79,54,33,7],[81,0,34,7],[81,6,34,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW"],[81,45,34,52],[81,48,34,55],[81,54,34,7],[83,0,35,7],[83,6,35,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN"],[83,48,35,55],[83,51,35,58],[83,57,35,7],[85,0,36,7],[85,6,36,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2"],[85,49,36,56],[85,52,36,59],[85,58,36,7],[87,0,37,7],[87,6,37,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM"],[87,49,37,56],[87,52,37,59],[87,58,37,7],[89,0,38,7],[89,6,38,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1"],[89,51,38,58],[89,54,38,61],[89,60,38,7],[91,0,39,7],[91,6,39,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2"],[91,51,39,58],[91,54,39,61],[91,60,39,7],[93,0,40,7],[93,6,40,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3"],[93,51,40,58],[93,54,40,61],[93,60,40,7],[95,0,41,7],[95,6,41,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS"],[95,54,41,61],[95,57,41,64],[95,63,41,7],[97,0,42,7],[97,6,42,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE"],[97,52,42,59],[97,55,42,62],[97,61,42,7],[99,0,43,7],[99,6,43,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD"],[99,52,43,59],[99,55,43,62],[99,61,43,7],[101,0,44,7],[101,6,44,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD"],[101,53,44,60],[101,56,44,63],[101,62,44,7],[103,0,45,7],[103,6,45,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR"],[103,57,45,64],[103,60,45,67],[103,66,45,7],[105,0,46,7],[105,6,46,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2"],[105,56,46,63],[105,59,46,66],[105,65,46,7],[107,0,47,7],[107,6,47,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2"],[107,55,47,62],[107,58,47,65],[107,64,47,7],[109,0,48,7],[109,6,48,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL"],[109,57,48,64],[109,60,48,67],[109,66,48,7],[111,0,49,7],[111,6,49,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR"],[111,44,49,51],[111,47,49,54],[111,53,49,7],[113,0,50,7],[113,6,50,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB"],[113,47,50,54],[113,50,50,57],[113,56,50,7],[115,0,51,7],[115,6,51,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE"],[115,48,51,55],[115,51,51,58],[115,57,51,7],[117,0,52,7],[117,6,52,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC"],[117,45,52,52],[117,48,52,55],[117,54,52,7],[119,0,53,7],[119,6,53,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA"],[119,52,53,59],[119,55,53,62],[119,65,53,7],[121,0,54,7],[121,6,54,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM"],[121,53,54,60],[121,56,54,63],[121,66,54,7],[123,0,55,7],[123,6,55,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3"],[123,45,55,52],[123,48,55,55],[123,54,55,7],[125,0,56,7],[125,6,56,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3"],[125,52,56,59],[125,55,56,62],[125,61,56,7],[127,0,57,7],[127,6,57,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[127,44,57,51],[127,47,57,54],[127,48,57,7],[129,0,58,7],[129,6,58,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW"],[129,44,58,51],[129,47,58,54],[129,51,58,7],[131,0,59,7],[131,6,59,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM"],[131,47,59,54],[131,50,59,57],[131,54,59,7],[133,0,60,7],[133,6,60,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH"],[133,45,60,52],[133,48,60,55],[133,52,60,7],[135,0,61,7],[135,6,61,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[135,44,61,51],[135,47,61,54],[135,51,61,7],[137,0,62,7],[137,6,62,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT"],[137,53,62,60],[137,56,62,63],[137,57,62,7],[139,0,63,7],[139,6,63,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE"],[139,62,63,69],[139,65,63,72],[139,66,63,7],[141,0,64,7],[141,6,64,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED"],[141,65,64,72],[141,68,64,75],[141,69,64,7],[143,0,65,7],[143,6,65,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE"],[143,53,65,60],[143,56,65,63],[143,57,65,7],[145,0,67,7],[145,6,67,13,"RECORDING_OPTIONS_PRESET_HIGH_QUALITY"],[145,43,67,50],[145,46,67,53],[146,0,68,4,"android"],[146,4,68,4,"android"],[146,11,68,11],[146,13,68,13],[147,0,69,8,"extension"],[147,6,69,8,"extension"],[147,15,69,17],[147,17,69,19],[147,23,68,13],[148,0,70,8,"outputFormat"],[148,6,70,8,"outputFormat"],[148,18,70,20],[148,20,70,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[148,65,68,13],[149,0,71,8,"audioEncoder"],[149,6,71,8,"audioEncoder"],[149,18,71,20],[149,20,71,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[149,62,68,13],[150,0,72,8,"sampleRate"],[150,6,72,8,"sampleRate"],[150,16,72,18],[150,18,72,20],[150,23,68,13],[151,0,73,8,"numberOfChannels"],[151,6,73,8,"numberOfChannels"],[151,22,73,24],[151,24,73,26],[151,25,68,13],[152,0,74,8,"bitRate"],[152,6,74,8,"bitRate"],[152,13,74,15],[152,15,74,17],[153,0,68,13],[153,5,67,53],[154,0,76,4,"ios"],[154,4,76,4,"ios"],[154,7,76,7],[154,9,76,9],[155,0,77,8,"extension"],[155,6,77,8,"extension"],[155,15,77,17],[155,17,77,19],[155,23,76,9],[156,0,78,8,"audioQuality"],[156,6,78,8,"audioQuality"],[156,18,78,20],[156,20,78,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[156,58,76,9],[157,0,79,8,"sampleRate"],[157,6,79,8,"sampleRate"],[157,16,79,18],[157,18,79,20],[157,23,76,9],[158,0,80,8,"numberOfChannels"],[158,6,80,8,"numberOfChannels"],[158,22,80,24],[158,24,80,26],[158,25,76,9],[159,0,81,8,"bitRate"],[159,6,81,8,"bitRate"],[159,13,81,15],[159,15,81,17],[159,21,76,9],[160,0,82,8,"linearPCMBitDepth"],[160,6,82,8,"linearPCMBitDepth"],[160,23,82,25],[160,25,82,27],[160,27,76,9],[161,0,83,8,"linearPCMIsBigEndian"],[161,6,83,8,"linearPCMIsBigEndian"],[161,26,83,28],[161,28,83,30],[161,33,76,9],[162,0,84,8,"linearPCMIsFloat"],[162,6,84,8,"linearPCMIsFloat"],[162,22,84,24],[162,24,84,26],[163,0,76,9],[164,0,67,53],[164,3,67,7],[166,0,87,7],[166,6,87,13,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[166,42,87,49],[166,45,87,52],[167,0,88,4,"android"],[167,4,88,4,"android"],[167,11,88,11],[167,13,88,13],[168,0,89,8,"extension"],[168,6,89,8,"extension"],[168,15,89,17],[168,17,89,19],[168,23,88,13],[169,0,90,8,"outputFormat"],[169,6,90,8,"outputFormat"],[169,18,90,20],[169,20,90,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[169,68,88,13],[170,0,91,8,"audioEncoder"],[170,6,91,8,"audioEncoder"],[170,18,91,20],[170,20,91,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[170,65,88,13],[171,0,92,8,"sampleRate"],[171,6,92,8,"sampleRate"],[171,16,92,18],[171,18,92,20],[171,23,88,13],[172,0,93,8,"numberOfChannels"],[172,6,93,8,"numberOfChannels"],[172,22,93,24],[172,24,93,26],[172,25,88,13],[173,0,94,8,"bitRate"],[173,6,94,8,"bitRate"],[173,13,94,15],[173,15,94,17],[174,0,88,13],[174,5,87,52],[175,0,96,4,"ios"],[175,4,96,4,"ios"],[175,7,96,7],[175,9,96,9],[176,0,97,8,"extension"],[176,6,97,8,"extension"],[176,15,97,17],[176,17,97,19],[176,23,96,9],[177,0,98,8,"audioQuality"],[177,6,98,8,"audioQuality"],[177,18,98,20],[177,20,98,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[177,58,96,9],[178,0,99,8,"sampleRate"],[178,6,99,8,"sampleRate"],[178,16,99,18],[178,18,99,20],[178,23,96,9],[179,0,100,8,"numberOfChannels"],[179,6,100,8,"numberOfChannels"],[179,22,100,24],[179,24,100,26],[179,25,96,9],[180,0,101,8,"bitRate"],[180,6,101,8,"bitRate"],[180,13,101,15],[180,15,101,17],[180,21,96,9],[181,0,102,8,"linearPCMBitDepth"],[181,6,102,8,"linearPCMBitDepth"],[181,23,102,25],[181,25,102,27],[181,27,96,9],[182,0,103,8,"linearPCMIsBigEndian"],[182,6,103,8,"linearPCMIsBigEndian"],[182,26,103,28],[182,28,103,30],[182,33,96,9],[183,0,104,8,"linearPCMIsFloat"],[183,6,104,8,"linearPCMIsFloat"],[183,22,104,24],[183,24,104,26],[184,0,96,9],[185,0,87,52],[185,3,87,7],[187,0,107,0],[187,6,107,4,"_recorderExists"],[187,21,107,19],[187,24,107,22],[187,29,107,0],[188,0,108,0],[188,6,108,6,"eventEmitter"],[188,18,108,18],[188,21,108,21,"Platform"],[188,36,108,30,"OS"],[188,38,108,21],[188,43,108,37],[188,52,108,21],[188,55,108,49],[188,59,108,53,"EventEmitter"],[188,77,108,49],[188,78,108,66,"ExponentAV"],[188,97,108,49],[188,98,108,21],[188,101,108,80],[188,105,108,0],[190,6,109,13,"Recording"],[190,15],[191,0,110,4],[191,25,110,18],[192,0,110,18],[194,0,110,18],[195,0,111,8],[195,11,111,13,"_subscription"],[195,24,111,8],[195,27,111,29],[195,31,111,8],[196,0,112,8],[196,11,112,13,"_canRecord"],[196,21,112,8],[196,24,112,26],[196,29,112,8],[197,0,113,8],[197,11,113,13,"_isDoneRecording"],[197,27,113,8],[197,30,113,32],[197,35,113,8],[198,0,114,8],[198,11,114,13,"_finalDurationMillis"],[198,31,114,8],[198,34,114,36],[198,35,114,8],[199,0,115,8],[199,11,115,13,"_uri"],[199,15,115,8],[199,18,115,20],[199,22,115,8],[200,0,116,8],[200,11,116,13,"_onRecordingStatusUpdate"],[200,35,116,8],[200,38,116,40],[200,42,116,8],[201,0,117,8],[201,11,117,13,"_progressUpdateTimeoutVariable"],[201,41,117,8],[201,44,117,46],[201,48,117,8],[202,0,118,8],[202,11,118,13,"_progressUpdateIntervalMillis"],[202,40,118,8],[202,43,118,45,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[202,87,118,8],[203,0,119,8],[203,11,119,13,"_options"],[203,19,119,8],[203,22,119,24],[203,26,119,8],[205,0,121,8],[205,11,121,13,"_cleanupForUnloadedRecorder"],[205,38,121,8],[205,41,121,43],[205,58,121,50,"finalStatus"],[205,69,121,43],[206,0,121,43],[207,0,121,43],[208,0,121,43],[209,0,121,43],[210,0,122,12],[210,16,122,12],[210,21,122,16],[210,22,122,17,"_canRecord"],[210,32,122,12],[210,35,122,30],[210,40,122,12],[211,0,123,12],[211,16,123,12],[211,21,123,16],[211,22,123,17,"_isDoneRecording"],[211,38,123,12],[211,41,123,36],[211,45,123,12],[212,0,125,12],[212,16,125,12],[212,21,125,16],[212,22,125,17,"_finalDurationMillis"],[212,42,125,12],[212,45,125,40,"finalStatus"],[212,56,125,51],[212,57,125,52,"durationMillis"],[212,71,125,12],[213,0,126,12,"_recorderExists"],[213,16,126,12,"_recorderExists"],[213,31,126,27],[213,34,126,30],[213,39,126,12],[215,0,127,12],[215,20,127,16],[215,25,127,20],[215,26,127,21,"_subscription"],[215,39,127,12],[215,41,127,36],[216,0,128,16],[216,18,128,16],[216,23,128,20],[216,24,128,21,"_subscription"],[216,37,128,16],[216,38,128,35,"remove"],[216,44,128,16],[218,0,129,16],[218,18,129,16],[218,23,129,20],[218,24,129,21,"_subscription"],[218,37,129,16],[218,40,129,37],[218,44,129,16],[219,0,130,13],[221,0,131,12],[221,16,131,12],[221,21,131,16],[221,22,131,17,"_disablePolling"],[221,37,131,12],[223,0,121,43],[224,0,121,43],[224,50,132,25],[224,55,132,29],[224,56,132,30,"getStatusAsync"],[224,70,132,25],[224,72,121,43],[226,0,121,43],[227,0,121,43],[229,0,121,43],[230,0,121,43],[231,0,121,43],[232,0,121,43],[233,0,121,43],[234,0,121,43],[235,0,121,43],[235,7,121,8],[237,0,134,8],[237,11,134,13,"_pollingLoop"],[237,23,134,8],[237,26,134,28],[238,0,134,28],[239,0,134,28],[240,0,134,28],[241,0,134,28],[242,0,134,28],[242,22,135,16],[242,66,135,36],[242,71,135,40],[242,72,135,41,"_canRecord"],[242,82,135,16],[242,86,135,55],[242,91,135,59],[242,92,135,60,"_onRecordingStatusUpdate"],[242,116,135,55],[242,120,135,88],[242,124,134,28],[243,0,134,28],[244,0,134,28],[245,0,134,28],[247,0,136,16],[247,16,136,16],[247,21,136,20],[247,22,136,21,"_progressUpdateTimeoutVariable"],[247,52,136,16],[247,55,136,54,"setTimeout"],[247,65,136,64],[247,66,136,65],[247,71,136,69],[247,72,136,70,"_pollingLoop"],[247,84,136,64],[247,86,136,84],[247,91,136,88],[247,92,136,89,"_progressUpdateIntervalMillis"],[247,121,136,64],[247,122,136,16],[248,0,134,28],[249,0,134,28],[250,0,134,28],[250,50,138,26],[250,55,138,30],[250,56,138,31,"getStatusAsync"],[250,70,138,26],[250,72,134,28],[252,0,134,28],[253,0,134,28],[254,0,134,28],[256,0,134,28],[257,0,134,28],[258,0,134,28],[260,0,141,20],[260,16,141,20],[260,21,141,24],[260,22,141,25,"_disablePolling"],[260,37,141,20],[262,0,134,28],[263,0,134,28],[264,0,134,28],[265,0,134,28],[266,0,134,28],[267,0,134,28],[268,0,134,28],[268,7,134,8],[270,0,147,8],[270,11,147,13,"getStatusAsync"],[270,25,147,8],[270,28,147,30],[271,0,147,30],[272,0,147,30],[273,0,147,30],[274,0,147,30],[275,0,147,30],[276,0,147,30],[276,21,149,16],[276,26,149,20],[276,27,149,21,"_canRecord"],[276,37,147,30],[277,0,147,30],[278,0,147,30],[279,0,147,30],[281,0,147,30],[281,50,150,23],[281,55,150,27],[281,56,150,28,"_performOperationAndHandleStatusAsync"],[281,93,150,23],[281,94,150,66],[282,0,150,66],[282,25,150,72,"ExponentAV"],[282,45,150,83,"getAudioRecordingStatus"],[282,68,150,72],[282,70,150,66],[283,0,150,66],[283,17,150,23],[283,18,147,30],[285,0,147,30],[286,0,152,18,"status"],[286,16,152,18,"status"],[286,22,147,30],[286,25,152,27],[287,0,153,16,"canRecord"],[287,18,153,16,"canRecord"],[287,27,153,25],[287,29,153,27],[287,34,152,27],[288,0,154,16,"isRecording"],[288,18,154,16,"isRecording"],[288,29,154,27],[288,31,154,29],[288,36,152,27],[289,0,155,16,"isDoneRecording"],[289,18,155,16,"isDoneRecording"],[289,33,155,31],[289,35,155,33],[289,40,155,37],[289,41,155,38,"_isDoneRecording"],[289,57,152,27],[290,0,156,16,"durationMillis"],[290,18,156,16,"durationMillis"],[290,32,156,30],[290,34,156,32],[290,39,156,36],[290,40,156,37,"_finalDurationMillis"],[291,0,152,27],[291,17,147,30],[293,0,158,12],[293,16,158,12],[293,21,158,16],[293,22,158,17,"_callOnRecordingStatusUpdateForNewStatus"],[293,62,158,12],[293,63,158,58,"status"],[293,69,158,12],[295,0,147,30],[295,50,159,19,"status"],[295,56,147,30],[297,0,147,30],[298,0,147,30],[299,0,147,30],[300,0,147,30],[301,0,147,30],[302,0,147,30],[303,0,147,30],[303,7,147,8],[304,0,161,5],[308,40,162,22],[309,0,163,8],[309,12,163,12],[309,17,163,17,"_progressUpdateTimeoutVariable"],[309,47,163,12],[309,51,163,51],[309,55,163,8],[309,57,163,57],[310,0,164,12,"clearTimeout"],[310,10,164,12,"clearTimeout"],[310,22,164,24],[310,23,164,25],[310,28,164,30,"_progressUpdateTimeoutVariable"],[310,58,164,24],[310,59,164,12],[311,0,165,12],[311,15,165,17,"_progressUpdateTimeoutVariable"],[311,45,165,12],[311,48,165,50],[311,52,165,12],[312,0,166,9],[313,0,167,5],[316,61,168,43],[317,0,169,8],[317,12,169,12],[317,56,169,32],[317,61,169,37,"_canRecord"],[317,71,169,12],[317,75,169,51],[317,80,169,56,"_onRecordingStatusUpdate"],[317,104,169,51],[317,108,169,84],[317,112,169,8],[317,114,169,90],[318,0,170,12],[318,15,170,17,"_disablePolling"],[318,30,170,12],[320,0,171,12],[320,15,171,17,"_pollingLoop"],[320,27,171,12],[321,0,172,9],[322,0,173,5],[325,63,174,45,"status"],[325,69],[325,71,174,53],[326,0,175,8],[326,12,175,12],[326,17,175,17,"_onRecordingStatusUpdate"],[326,41,175,12],[326,45,175,45],[326,49,175,8],[326,51,175,51],[327,0,176,12],[327,15,176,17,"_onRecordingStatusUpdate"],[327,39,176,12],[327,40,176,42,"status"],[327,46,176,12],[328,0,177,9],[329,0,178,5],[332,60,179,48,"operation"],[332,69],[339,0,180,8],[341,21,181,12],[341,26,181,17,"_canRecord"],[341,36],[347,50,182,33,"operation"],[347,59,182,42],[347,61],[350,0,182,18,"status"],[350,16,182,18,"status"],[350,23],[352,0,183,12],[352,21,183,17,"_callOnRecordingStatusUpdateForNewStatus"],[352,61,183,12],[352,62,183,58,"status"],[352,69,183,12],[354,50,184,19,"status"],[354,57],[357,22,187,18],[357,26,187,22,"Error"],[357,31,187,18],[357,32,187,28],[357,105,187,18],[357,106],[368,49,190,31,"onRecordingStatusUpdate"],[368,72],[368,74,190,56],[369,0,191,8],[369,13,191,13,"_onRecordingStatusUpdate"],[369,37,191,8],[369,40,191,40,"onRecordingStatusUpdate"],[369,63,191,8],[371,0,192,8],[371,12,192,12,"onRecordingStatusUpdate"],[371,35,192,35],[371,39,192,39],[371,43,192,8],[371,45,192,45],[372,0,193,12],[372,15,193,17,"_disablePolling"],[372,30,193,12],[373,0,194,9],[373,9,192,8],[373,15,195,13],[374,0,196,12],[374,15,196,17,"_enablePollingIfNecessaryAndPossible"],[374,51,196,12],[375,0,197,9],[377,0,198,8],[377,13,198,13,"getStatusAsync"],[377,27,198,8],[378,0,199,5],[381,48,200,30,"progressUpdateIntervalMillis"],[381,76],[381,78,200,60],[382,0,201,8],[382,13,201,13,"_progressUpdateIntervalMillis"],[382,42,201,8],[382,45,201,45,"progressUpdateIntervalMillis"],[382,73,201,8],[383,0,202,8],[383,13,202,13,"getStatusAsync"],[383,27,202,8],[384,0,203,5],[400,0,205,31,"options"],[400,16,205,31,"options"],[400,23],[400,85,205,41,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[400,121],[401,0,206,8],[403,21,207,12,"_recorderExists"],[403,36],[408,22,208,18],[408,26,208,22,"Error"],[408,31,208,18],[408,32,208,28],[408,92,208,18],[408,93],[411,21,210,12],[411,26,210,17,"_isDoneRecording"],[411,42],[416,22,211,18],[416,26,211,22,"Error"],[416,31,211,18],[416,32,211,28],[416,99,211,18],[416,100],[419,22,213,12],[419,23,213,13,"options"],[419,30,213,12],[419,34,213,24],[419,35,213,25,"options"],[419,42,213,32],[419,43,213,33,"android"],[419,50,213,12],[419,54,213,44],[419,55,213,45,"options"],[419,62,213,52],[419,63,213,53,"ios"],[419,66],[424,22,214,18],[424,26,214,22,"Error"],[424,31,214,18],[424,32,214,28],[424,119,214,18],[424,120],[427,0,216,14,"extensionRegex"],[427,16,216,14,"extensionRegex"],[427,30],[427,33,216,31],[427,42],[429,22,217,12],[429,23,217,13,"options"],[429,30,217,20],[429,31,217,21,"android"],[429,38,217,13],[429,39,217,29,"extension"],[429,48,217,12],[429,52,218,12],[429,53,218,13,"options"],[429,60,218,20],[429,61,218,21,"ios"],[429,64,218,13],[429,65,218,25,"extension"],[429,74,217,12],[429,78,219,12],[429,79,219,13,"extensionRegex"],[429,93,219,27],[429,94,219,28,"test"],[429,98,219,13],[429,99,219,33,"options"],[429,106,219,40],[429,107,219,41,"android"],[429,114,219,33],[429,115,219,49,"extension"],[429,124,219,13],[429,125,217,12],[429,129,220,12],[429,130,220,13,"extensionRegex"],[429,144,220,27],[429,145,220,28,"test"],[429,149,220,13],[429,150,220,33,"options"],[429,157,220,40],[429,158,220,41,"ios"],[429,161,220,33],[429,162,220,45,"extension"],[429,171,220,13],[429,172],[434,22,221,18],[434,26,221,22,"Error"],[434,31,221,18],[434,69,221,63,"extensionRegex"],[434,83,221,77],[434,84,221,78,"toString"],[434,92,221,63],[434,94,221,18],[434,101],[437,20,223,13],[437,25,223,18,"_canRecord"],[437,35],[442,0,224,12],[442,20,224,16,"eventEmitter"],[442,32,224,12],[442,34,224,30],[443,0,225,16],[443,23,225,21,"_subscription"],[443,36,225,16],[443,39,225,37,"eventEmitter"],[443,51,225,49],[443,52,225,50,"addListener"],[443,63,225,37],[443,64,225,62],[443,97,225,37],[443,99,225,97],[443,104,225,102,"_cleanupForUnloadedRecorder"],[443,131,225,37],[443,132,225,16],[444,0,226,13],[447,50,227,43,"ExponentAV"],[447,70,227,54,"prepareAudioRecorder"],[447,90,227,43],[447,91,227,75,"options"],[447,98,227,43],[447,99],[451,0,227,20,"uri"],[451,16,227,20,"uri"],[451,19],[451,27,227,20,"uri"],[451,30],[452,0,227,25,"status"],[452,16,227,25,"status"],[452,24],[452,32,227,25,"status"],[452,38],[453,0,228,12,"_recorderExists"],[453,16,228,12,"_recorderExists"],[453,31,228,27],[453,34,228,30],[453,38,228,12],[454,0,229,12],[454,21,229,17,"_uri"],[454,25,229,12],[454,28,229,24,"uri"],[454,31,229,12],[455,0,230,12],[455,21,230,17,"_options"],[455,29,230,12],[455,32,230,28,"options"],[455,39,230,12],[456,0,231,12],[456,21,231,17,"_canRecord"],[456,31,231,12],[456,34,231,30],[456,38,231,12],[457,0,232,18,"currentStatus"],[457,16,232,18,"currentStatus"],[457,29],[457,64,232,39,"status"],[457,72],[458,0,232,47,"canRecord"],[458,18,232,47,"canRecord"],[458,27,232,56],[458,29,232,58],[461,0,233,12],[461,21,233,17,"_callOnRecordingStatusUpdateForNewStatus"],[461,61,233,12],[461,62,233,58,"currentStatus"],[461,75,233,12],[463,0,234,12],[463,21,234,17,"_enablePollingIfNecessaryAndPossible"],[463,57,234,12],[465,50,235,19,"currentStatus"],[465,63],[468,22,238,18],[468,26,238,22,"Error"],[468,31,238,18],[468,32,238,28],[468,86,238,18],[468,87],[484,50,242,15],[484,55,242,20,"_performOperationAndHandleStatusAsync"],[484,92,242,15],[484,93,242,58],[485,0,242,58],[485,25,242,64,"ExponentAV"],[485,45,242,75,"startAudioRecording"],[485,64,242,64],[485,66,242,58],[486,0,242,58],[486,17,242,15],[486,18],[502,50,245,15],[502,55,245,20,"_performOperationAndHandleStatusAsync"],[502,92,245,15],[502,93,245,58],[503,0,245,58],[503,25,245,64,"ExponentAV"],[503,45,245,75,"pauseAudioRecording"],[503,64,245,64],[503,66,245,58],[504,0,245,58],[504,17,245,15],[504,18],[521,20,248,13],[521,25,248,18,"_canRecord"],[521,35],[526,21,249,16],[526,26,249,21,"_isDoneRecording"],[526,42],[531,22,250,22],[531,26,250,26,"Error"],[531,31,250,22],[531,32,250,32],[531,91,250,22],[531,92],[534,22,253,22],[534,26,253,26,"Error"],[534,31,253,22],[534,32,253,32],[534,87,253,22],[534,88],[538,50,258,34,"ExponentAV"],[538,70,258,45,"stopAudioRecording"],[538,88,258,34],[538,90],[541,0,258,14,"finalStatus"],[541,16,258,14,"finalStatus"],[541,27],[543,50,259,14,"ExponentAV"],[543,70,259,25,"unloadAudioRecorder"],[543,89,259,14],[543,91],[546,50,260,15],[546,55,260,20,"_cleanupForUnloadedRecorder"],[546,82,260,15],[546,83,260,48,"finalStatus"],[546,94,260,15],[546,95],[557,31,263,13],[558,0,264,8],[558,15,264,15],[558,20,264,20,"_uri"],[558,24,264,8],[559,0,265,5],[570,0,266,31,"initialStatus"],[570,16,266,31,"initialStatus"],[570,29],[570,91,266,47],[570,93],[571,0,266,51,"onPlaybackStatusUpdate"],[571,16,266,51,"onPlaybackStatusUpdate"],[571,38],[571,100,266,76],[571,104],[572,0,267,8,"console"],[572,16,267,8,"console"],[572,23,267,15],[572,24,267,16,"warn"],[572,28,267,8],[573,50,268,15],[573,55,268,20,"createNewLoadedSoundAsync"],[573,80,268,15],[573,81,268,46,"initialStatus"],[573,94,268,15],[573,96,268,61,"onPlaybackStatusUpdate"],[573,118,268,15],[573,119],[592,0,270,36,"initialStatus"],[592,16,270,36,"initialStatus"],[592,29],[592,94,270,52],[592,96],[593,0,270,56,"onPlaybackStatusUpdate"],[593,16,270,56,"onPlaybackStatusUpdate"],[593,38],[593,103,270,81],[593,107],[595,22,271,12],[595,27,271,17,"_uri"],[595,31,271,12],[595,35,271,25],[595,39,271,12],[595,43,271,33],[595,44,271,34],[595,49,271,39,"_isDoneRecording"],[595,65],[600,22,272,18],[600,26,272,22,"Error"],[600,31,272,18],[600,32,272,28],[600,90,272,18],[600,91],[603,51,274,15,"Sound"],[603,64,274,21,"createAsync"],[603,75,274,15],[603,76,276,8],[604,0,276,10,"uri"],[604,18,276,10,"uri"],[604,21,276,13],[604,23,276,15],[604,28,276,20,"_uri"],[605,0,276,8],[605,17,274,15],[605,19,276,28,"initialStatus"],[605,32,274,15],[605,34,276,43,"onPlaybackStatusUpdate"],[605,56,274,15],[605,58,276,67],[605,63,274,15],[605,64]]},"type":"js/module"}]}