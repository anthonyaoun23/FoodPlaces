{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../utils","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[7], \"../utils\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"fbjs/lib/invariant\"));\n\n  function reduce(fn) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      });\n    };\n  }\n\n  function reduceFrom(fn, initialValue) {\n    return function (input) {\n      return input.reduce(function (a, b) {\n        return fn((0, _utils.val)(a), (0, _utils.val)(b));\n      }, initialValue);\n    };\n  }\n\n  function infix(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]), (0, _utils.val)(input[1]));\n    };\n  }\n\n  function single(fn) {\n    return function (input) {\n      return fn((0, _utils.val)(input[0]));\n    };\n  }\n\n  var OPERATIONS = {\n    add: reduce(function (a, b) {\n      return a + b;\n    }),\n    sub: reduce(function (a, b) {\n      return a - b;\n    }),\n    multiply: reduce(function (a, b) {\n      return a * b;\n    }),\n    divide: reduce(function (a, b) {\n      return a / b;\n    }),\n    pow: reduce(function (a, b) {\n      return Math.pow(a, b);\n    }),\n    modulo: reduce(function (a, b) {\n      return (a % b + b) % b;\n    }),\n    sqrt: single(function (a) {\n      return Math.sqrt(a);\n    }),\n    sin: single(function (a) {\n      return Math.sin(a);\n    }),\n    cos: single(function (a) {\n      return Math.cos(a);\n    }),\n    tan: single(function (a) {\n      return Math.tan(a);\n    }),\n    acos: single(function (a) {\n      return Math.acos(a);\n    }),\n    asin: single(function (a) {\n      return Math.asin(a);\n    }),\n    atan: single(function (a) {\n      return Math.atan(a);\n    }),\n    exp: single(function (a) {\n      return Math.exp(a);\n    }),\n    and: reduceFrom(function (a, b) {\n      return a && b;\n    }, true),\n    or: reduceFrom(function (a, b) {\n      return a || b;\n    }, false),\n    not: single(function (a) {\n      return !a;\n    }),\n    defined: single(function (a) {\n      return a !== null && a !== undefined && !isNaN(a);\n    }),\n    lessThan: infix(function (a, b) {\n      return a < b;\n    }),\n    eq: infix(function (a, b) {\n      return a == b;\n    }),\n    greaterThan: infix(function (a, b) {\n      return a > b;\n    }),\n    lessOrEq: infix(function (a, b) {\n      return a <= b;\n    }),\n    greaterOrEq: infix(function (a, b) {\n      return a >= b;\n    }),\n    neq: infix(function (a, b) {\n      return a != b;\n    })\n  };\n\n  var AnimatedOperator = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedOperator, _AnimatedNode);\n\n    function AnimatedOperator(operator, input) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedOperator);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedOperator).call(this, {\n        type: 'op',\n        op: operator,\n        input: input.map(function (n) {\n          return n.__nodeID;\n        })\n      }, input));\n      _this._op = operator;\n      _this._input = input;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedOperator, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        if (!this._operation) {\n          this._operation = OPERATIONS[this._op];\n          (0, _invariant.default)(this._operation, \"Illegal operator '%s'\", this._op);\n        }\n\n        return this._operation(this._input);\n      }\n    }]);\n    return AnimatedOperator;\n  }(_AnimatedNode2.default);\n\n  exports.default = AnimatedOperator;\n});","map":[[19,0,1,0],[21,0,2,0],[23,0,4,0],[25,0,6,0],[25,11,6,9,"reduce"],[25,17,6,0],[25,18,6,16,"fn"],[25,20,6,0],[25,22,6,20],[26,0,7,2],[26,11,7,9],[26,21,7,9,"input"],[26,26,7,14],[27,0,7,14],[27,13,7,18,"input"],[27,18,7,23],[27,19,7,24,"reduce"],[27,25,7,18],[27,26,7,31],[27,36,7,32,"a"],[27,37,7,31],[27,39,7,35,"b"],[27,40,7,31],[28,0,7,31],[28,15,7,41,"fn"],[28,17,7,43],[28,18,7,44],[28,34,7,48,"a"],[28,35,7,44],[28,36,7,43],[28,38,7,52],[28,54,7,56,"b"],[28,55,7,52],[28,56,7,43],[28,57,7,31],[29,0,7,31],[29,7,7,18],[29,8,7,14],[30,0,7,14],[30,5,7,2],[31,0,8,1],[33,0,10,0],[33,11,10,9,"reduceFrom"],[33,21,10,0],[33,22,10,20,"fn"],[33,24,10,0],[33,26,10,24,"initialValue"],[33,38,10,0],[33,40,10,38],[34,0,11,2],[34,11,11,9],[34,21,11,9,"input"],[34,26,11,14],[35,0,11,14],[35,13,11,18,"input"],[35,18,11,23],[35,19,11,24,"reduce"],[35,25,11,18],[35,26,11,31],[35,36,11,32,"a"],[35,37,11,31],[35,39,11,35,"b"],[35,40,11,31],[36,0,11,31],[36,15,11,41,"fn"],[36,17,11,43],[36,18,11,44],[36,34,11,48,"a"],[36,35,11,44],[36,36,11,43],[36,38,11,52],[36,54,11,56,"b"],[36,55,11,52],[36,56,11,43],[36,57,11,31],[37,0,11,31],[37,7,11,18],[37,9,11,61,"initialValue"],[37,21,11,18],[37,22,11,14],[38,0,11,14],[38,5,11,2],[39,0,12,1],[41,0,14,0],[41,11,14,9,"infix"],[41,16,14,0],[41,17,14,15,"fn"],[41,19,14,0],[41,21,14,19],[42,0,15,2],[42,11,15,9],[42,21,15,9,"input"],[42,26,15,14],[43,0,15,14],[43,13,15,18,"fn"],[43,15,15,20],[43,16,15,21],[43,32,15,25,"input"],[43,37,15,30],[43,38,15,31],[43,39,15,30],[43,40,15,21],[43,41,15,20],[43,43,15,36],[43,59,15,40,"input"],[43,64,15,45],[43,65,15,46],[43,66,15,45],[43,67,15,36],[43,68,15,20],[43,69,15,14],[44,0,15,14],[44,5,15,2],[45,0,16,1],[47,0,18,0],[47,11,18,9,"single"],[47,17,18,0],[47,18,18,16,"fn"],[47,20,18,0],[47,22,18,20],[48,0,19,2],[48,11,19,9],[48,21,19,9,"input"],[48,26,19,14],[49,0,19,14],[49,13,19,18,"fn"],[49,15,19,20],[49,16,19,21],[49,32,19,25,"input"],[49,37,19,30],[49,38,19,31],[49,39,19,30],[49,40,19,21],[49,41,19,20],[49,42,19,14],[50,0,19,14],[50,5,19,2],[51,0,20,1],[53,0,22,0],[53,6,22,6,"OPERATIONS"],[53,16,22,16],[53,19,22,19],[54,0,24,2,"add"],[54,4,24,2,"add"],[54,7,24,5],[54,9,24,7,"reduce"],[54,15,24,13],[54,16,24,14],[54,26,24,15,"a"],[54,27,24,14],[54,29,24,18,"b"],[54,30,24,14],[55,0,24,14],[55,13,24,24,"a"],[55,14,24,25],[55,17,24,28,"b"],[55,18,24,14],[56,0,24,14],[56,5,24,13],[56,6,22,19],[57,0,25,2,"sub"],[57,4,25,2,"sub"],[57,7,25,5],[57,9,25,7,"reduce"],[57,15,25,13],[57,16,25,14],[57,26,25,15,"a"],[57,27,25,14],[57,29,25,18,"b"],[57,30,25,14],[58,0,25,14],[58,13,25,24,"a"],[58,14,25,25],[58,17,25,28,"b"],[58,18,25,14],[59,0,25,14],[59,5,25,13],[59,6,22,19],[60,0,26,2,"multiply"],[60,4,26,2,"multiply"],[60,12,26,10],[60,14,26,12,"reduce"],[60,20,26,18],[60,21,26,19],[60,31,26,20,"a"],[60,32,26,19],[60,34,26,23,"b"],[60,35,26,19],[61,0,26,19],[61,13,26,29,"a"],[61,14,26,30],[61,17,26,33,"b"],[61,18,26,19],[62,0,26,19],[62,5,26,18],[62,6,22,19],[63,0,27,2,"divide"],[63,4,27,2,"divide"],[63,10,27,8],[63,12,27,10,"reduce"],[63,18,27,16],[63,19,27,17],[63,29,27,18,"a"],[63,30,27,17],[63,32,27,21,"b"],[63,33,27,17],[64,0,27,17],[64,13,27,27,"a"],[64,14,27,28],[64,17,27,31,"b"],[64,18,27,17],[65,0,27,17],[65,5,27,16],[65,6,22,19],[66,0,28,2,"pow"],[66,4,28,2,"pow"],[66,7,28,5],[66,9,28,7,"reduce"],[66,15,28,13],[66,16,28,14],[66,26,28,15,"a"],[66,27,28,14],[66,29,28,18,"b"],[66,30,28,14],[67,0,28,14],[67,13,28,24,"Math"],[67,17,28,28],[67,18,28,29,"pow"],[67,21,28,24],[67,22,28,33,"a"],[67,23,28,24],[67,25,28,36,"b"],[67,26,28,24],[67,27,28,14],[68,0,28,14],[68,5,28,13],[68,6,22,19],[69,0,29,2,"modulo"],[69,4,29,2,"modulo"],[69,10,29,8],[69,12,29,10,"reduce"],[69,18,29,16],[69,19,29,17],[69,29,29,18,"a"],[69,30,29,17],[69,32,29,21,"b"],[69,33,29,17],[70,0,29,17],[70,13,29,27],[70,14,29,29,"a"],[70,15,29,30],[70,18,29,33,"b"],[70,19,29,28],[70,22,29,38,"b"],[70,23,29,27],[70,27,29,43,"b"],[70,28,29,17],[71,0,29,17],[71,5,29,16],[71,6,22,19],[72,0,30,2,"sqrt"],[72,4,30,2,"sqrt"],[72,8,30,6],[72,10,30,8,"single"],[72,16,30,14],[72,17,30,15],[72,27,30,15,"a"],[72,28,30,16],[73,0,30,16],[73,13,30,20,"Math"],[73,17,30,24],[73,18,30,25,"sqrt"],[73,22,30,20],[73,23,30,30,"a"],[73,24,30,20],[73,25,30,16],[74,0,30,16],[74,5,30,14],[74,6,22,19],[75,0,31,2,"sin"],[75,4,31,2,"sin"],[75,7,31,5],[75,9,31,7,"single"],[75,15,31,13],[75,16,31,14],[75,26,31,14,"a"],[75,27,31,15],[76,0,31,15],[76,13,31,19,"Math"],[76,17,31,23],[76,18,31,24,"sin"],[76,21,31,19],[76,22,31,28,"a"],[76,23,31,19],[76,24,31,15],[77,0,31,15],[77,5,31,13],[77,6,22,19],[78,0,32,2,"cos"],[78,4,32,2,"cos"],[78,7,32,5],[78,9,32,7,"single"],[78,15,32,13],[78,16,32,14],[78,26,32,14,"a"],[78,27,32,15],[79,0,32,15],[79,13,32,19,"Math"],[79,17,32,23],[79,18,32,24,"cos"],[79,21,32,19],[79,22,32,28,"a"],[79,23,32,19],[79,24,32,15],[80,0,32,15],[80,5,32,13],[80,6,22,19],[81,0,33,2,"tan"],[81,4,33,2,"tan"],[81,7,33,5],[81,9,33,7,"single"],[81,15,33,13],[81,16,33,14],[81,26,33,14,"a"],[81,27,33,15],[82,0,33,15],[82,13,33,19,"Math"],[82,17,33,23],[82,18,33,24,"tan"],[82,21,33,19],[82,22,33,28,"a"],[82,23,33,19],[82,24,33,15],[83,0,33,15],[83,5,33,13],[83,6,22,19],[84,0,34,2,"acos"],[84,4,34,2,"acos"],[84,8,34,6],[84,10,34,8,"single"],[84,16,34,14],[84,17,34,15],[84,27,34,15,"a"],[84,28,34,16],[85,0,34,16],[85,13,34,20,"Math"],[85,17,34,24],[85,18,34,25,"acos"],[85,22,34,20],[85,23,34,30,"a"],[85,24,34,20],[85,25,34,16],[86,0,34,16],[86,5,34,14],[86,6,22,19],[87,0,35,2,"asin"],[87,4,35,2,"asin"],[87,8,35,6],[87,10,35,8,"single"],[87,16,35,14],[87,17,35,15],[87,27,35,15,"a"],[87,28,35,16],[88,0,35,16],[88,13,35,20,"Math"],[88,17,35,24],[88,18,35,25,"asin"],[88,22,35,20],[88,23,35,30,"a"],[88,24,35,20],[88,25,35,16],[89,0,35,16],[89,5,35,14],[89,6,22,19],[90,0,36,2,"atan"],[90,4,36,2,"atan"],[90,8,36,6],[90,10,36,8,"single"],[90,16,36,14],[90,17,36,15],[90,27,36,15,"a"],[90,28,36,16],[91,0,36,16],[91,13,36,20,"Math"],[91,17,36,24],[91,18,36,25,"atan"],[91,22,36,20],[91,23,36,30,"a"],[91,24,36,20],[91,25,36,16],[92,0,36,16],[92,5,36,14],[92,6,22,19],[93,0,37,2,"exp"],[93,4,37,2,"exp"],[93,7,37,5],[93,9,37,7,"single"],[93,15,37,13],[93,16,37,14],[93,26,37,14,"a"],[93,27,37,15],[94,0,37,15],[94,13,37,19,"Math"],[94,17,37,23],[94,18,37,24,"exp"],[94,21,37,19],[94,22,37,28,"a"],[94,23,37,19],[94,24,37,15],[95,0,37,15],[95,5,37,13],[95,6,22,19],[96,0,40,2,"and"],[96,4,40,2,"and"],[96,7,40,5],[96,9,40,7,"reduceFrom"],[96,19,40,17],[96,20,40,18],[96,30,40,19,"a"],[96,31,40,18],[96,33,40,22,"b"],[96,34,40,18],[97,0,40,18],[97,13,40,28,"a"],[97,14,40,29],[97,18,40,33,"b"],[97,19,40,18],[98,0,40,18],[98,5,40,17],[98,7,40,36],[98,11,40,17],[98,12,22,19],[99,0,41,2,"or"],[99,4,41,2,"or"],[99,6,41,4],[99,8,41,6,"reduceFrom"],[99,18,41,16],[99,19,41,17],[99,29,41,18,"a"],[99,30,41,17],[99,32,41,21,"b"],[99,33,41,17],[100,0,41,17],[100,13,41,27,"a"],[100,14,41,28],[100,18,41,32,"b"],[100,19,41,17],[101,0,41,17],[101,5,41,16],[101,7,41,35],[101,12,41,16],[101,13,22,19],[102,0,42,2,"not"],[102,4,42,2,"not"],[102,7,42,5],[102,9,42,7,"single"],[102,15,42,13],[102,16,42,14],[102,26,42,14,"a"],[102,27,42,15],[103,0,42,15],[103,13,42,19],[103,14,42,20,"a"],[103,15,42,15],[104,0,42,15],[104,5,42,13],[104,6,22,19],[105,0,43,2,"defined"],[105,4,43,2,"defined"],[105,11,43,9],[105,13,43,11,"single"],[105,19,43,17],[105,20,43,18],[105,30,43,18,"a"],[105,31,43,19],[106,0,43,19],[106,13,43,23,"a"],[106,14,43,24],[106,19,43,29],[106,23,43,23],[106,27,43,37,"a"],[106,28,43,38],[106,33,43,43,"undefined"],[106,42,43,23],[106,46,43,56],[106,47,43,57,"isNaN"],[106,52,43,62],[106,53,43,63,"a"],[106,54,43,62],[106,55,43,19],[107,0,43,19],[107,5,43,17],[107,6,22,19],[108,0,46,2,"lessThan"],[108,4,46,2,"lessThan"],[108,12,46,10],[108,14,46,12,"infix"],[108,19,46,17],[108,20,46,18],[108,30,46,19,"a"],[108,31,46,18],[108,33,46,22,"b"],[108,34,46,18],[109,0,46,18],[109,13,46,28,"a"],[109,14,46,29],[109,17,46,32,"b"],[109,18,46,18],[110,0,46,18],[110,5,46,17],[110,6,22,19],[111,0,48,2,"eq"],[111,4,48,2,"eq"],[111,6,48,4],[111,8,48,6,"infix"],[111,13,48,11],[111,14,48,12],[111,24,48,13,"a"],[111,25,48,12],[111,27,48,16,"b"],[111,28,48,12],[112,0,48,12],[112,13,48,22,"a"],[112,14,48,23],[112,18,48,27,"b"],[112,19,48,12],[113,0,48,12],[113,5,48,11],[113,6,22,19],[114,0,49,2,"greaterThan"],[114,4,49,2,"greaterThan"],[114,15,49,13],[114,17,49,15,"infix"],[114,22,49,20],[114,23,49,21],[114,33,49,22,"a"],[114,34,49,21],[114,36,49,25,"b"],[114,37,49,21],[115,0,49,21],[115,13,49,31,"a"],[115,14,49,32],[115,17,49,35,"b"],[115,18,49,21],[116,0,49,21],[116,5,49,20],[116,6,22,19],[117,0,50,2,"lessOrEq"],[117,4,50,2,"lessOrEq"],[117,12,50,10],[117,14,50,12,"infix"],[117,19,50,17],[117,20,50,18],[117,30,50,19,"a"],[117,31,50,18],[117,33,50,22,"b"],[117,34,50,18],[118,0,50,18],[118,13,50,28,"a"],[118,14,50,29],[118,18,50,33,"b"],[118,19,50,18],[119,0,50,18],[119,5,50,17],[119,6,22,19],[120,0,51,2,"greaterOrEq"],[120,4,51,2,"greaterOrEq"],[120,15,51,13],[120,17,51,15,"infix"],[120,22,51,20],[120,23,51,21],[120,33,51,22,"a"],[120,34,51,21],[120,36,51,25,"b"],[120,37,51,21],[121,0,51,21],[121,13,51,31,"a"],[121,14,51,32],[121,18,51,36,"b"],[121,19,51,21],[122,0,51,21],[122,5,51,20],[122,6,22,19],[123,0,53,2,"neq"],[123,4,53,2,"neq"],[123,7,53,5],[123,9,53,7,"infix"],[123,14,53,12],[123,15,53,13],[123,25,53,14,"a"],[123,26,53,13],[123,28,53,17,"b"],[123,29,53,13],[124,0,53,13],[124,13,53,23,"a"],[124,14,53,24],[124,18,53,28,"b"],[124,19,53,13],[125,0,53,13],[125,5,53,12],[126,0,22,19],[126,3,22,0],[128,6,56,21,"AnimatedOperator"],[128,22],[131,0,61,2],[131,30,61,14,"operator"],[131,38,61,2],[131,40,61,24,"input"],[131,45,61,2],[131,47,61,31],[132,0,61,31],[134,0,61,31],[135,0,62,4],[135,120,63,6],[136,0,63,8,"type"],[136,8,63,8,"type"],[136,12,63,12],[136,14,63,14],[136,18,63,6],[137,0,63,20,"op"],[137,8,63,20,"op"],[137,10,63,22],[137,12,63,24,"operator"],[137,20,63,6],[138,0,63,34,"input"],[138,8,63,34,"input"],[138,13,63,39],[138,15,63,41,"input"],[138,20,63,46],[138,21,63,47,"map"],[138,24,63,41],[138,25,63,51],[138,35,63,51,"n"],[138,36,63,52],[139,0,63,52],[139,17,63,56,"n"],[139,18,63,57],[139,19,63,58,"__nodeID"],[139,27,63,52],[140,0,63,52],[140,9,63,41],[141,0,63,6],[141,7,62,4],[141,9,64,6,"input"],[141,14,62,4],[142,0,66,4],[142,12,66,9,"_op"],[142,15,66,4],[142,18,66,15,"operator"],[142,26,66,4],[143,0,67,4],[143,12,67,9,"_input"],[143,18,67,4],[143,21,67,18,"input"],[143,26,67,4],[144,0,61,31],[145,0,68,3],[149,37,70,17],[150,0,71,4],[150,12,71,8],[150,13,71,9],[150,18,71,14,"_operation"],[150,28,71,4],[150,30,71,26],[151,0,72,6],[151,15,72,11,"_operation"],[151,25,72,6],[151,28,72,24,"OPERATIONS"],[151,38,72,34],[151,39,72,35],[151,44,72,40,"_op"],[151,47,72,34],[151,48,72,6],[152,0,73,6],[152,34,73,16],[152,39,73,21,"_operation"],[152,49,73,6],[152,76,73,58],[152,81,73,63,"_op"],[152,84,73,6],[153,0,74,5],[155,0,75,4],[155,15,75,11],[155,20,75,16,"_operation"],[155,30,75,11],[155,31,75,27],[155,36,75,32,"_input"],[155,42,75,11],[155,43,75,4],[156,0,76,3],[159,4,56,46,"AnimatedNode"],[159,26]]},"type":"js/module"}]}