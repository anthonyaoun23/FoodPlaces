{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"../ExponentAV","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Sound = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[7], \"@unimodules/core\");\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[8], \"./AudioAvailability\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[9], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../ExponentAV\"));\n\n  var Sound = function () {\n    function Sound() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Sound);\n      this._loaded = false;\n      this._loading = false;\n      this._key = null;\n      this._lastStatusUpdate = null;\n      this._lastStatusUpdateTime = null;\n      this._subscriptions = [];\n      this._eventEmitter = new _core.EventEmitter(_ExponentAV.default);\n      this._coalesceStatusUpdatesInMillis = 100;\n      this._onPlaybackStatusUpdate = null;\n\n      this._internalStatusUpdateCallback = function (_ref) {\n        var key = _ref.key,\n            status = _ref.status;\n\n        if (_this._key === key) {\n          _this._callOnPlaybackStatusUpdateForNewStatus(status);\n        }\n      };\n\n      this._internalErrorCallback = function (_ref2) {\n        var key = _ref2.key,\n            error = _ref2.error;\n\n        if (_this._key === key) {\n          _this._errorCallback(error);\n        }\n      };\n\n      this._errorCallback = function (error) {\n        _this._clearSubscriptions();\n\n        _this._loaded = false;\n        _this._key = null;\n\n        _this._callOnPlaybackStatusUpdateForNewStatus((0, _AV.getUnloadedStatus)(error));\n      };\n\n      this.getStatusAsync = function _callee() {\n        var status;\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this._loaded) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getStatusForSound(_this._key);\n                }));\n\n              case 2:\n                status = (0, _AV.getUnloadedStatus)();\n\n                _this._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                return _context.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n    }\n\n    (0, _createClass2.default)(Sound, [{\n      key: \"_callOnPlaybackStatusUpdateForNewStatus\",\n      value: function _callOnPlaybackStatusUpdateForNewStatus(status) {\n        var shouldDismissBasedOnCoalescing = this._lastStatusUpdateTime && JSON.stringify(status) === this._lastStatusUpdate && Date.now() - this._lastStatusUpdateTime.getTime() < this._coalesceStatusUpdatesInMillis;\n\n        if (this._onPlaybackStatusUpdate != null && !shouldDismissBasedOnCoalescing) {\n          this._onPlaybackStatusUpdate(status);\n\n          this._lastStatusUpdateTime = new Date();\n          this._lastStatusUpdate = JSON.stringify(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var _status;\n\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loaded) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                _status = _context2.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(_status);\n\n                return _context2.abrupt(\"return\", _status);\n\n              case 9:\n                throw new Error('Cannot complete operation because sound is not loaded.');\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"_subscribeToNativeEvents\",\n      value: function _subscribeToNativeEvents() {\n        if (this._loaded) {\n          this._subscriptions.push(this._eventEmitter.addListener('didUpdatePlaybackStatus', this._internalStatusUpdateCallback));\n\n          this._subscriptions.push(this._eventEmitter.addListener('ExponentAV.onError', this._internalErrorCallback));\n        }\n      }\n    }, {\n      key: \"_clearSubscriptions\",\n      value: function _clearSubscriptions() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"setOnPlaybackStatusUpdate\",\n      value: function setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n        this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"loadAsync\",\n      value: function loadAsync(source) {\n        var _this2 = this;\n\n        var initialStatus,\n            downloadFirst,\n            _ref3,\n            nativeSource,\n            fullInitialStatus,\n            _args3 = arguments;\n\n        return _regenerator.default.async(function loadAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                initialStatus = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                downloadFirst = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : true;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loading) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error('The Sound is already loading.');\n\n              case 5:\n                if (this._loaded) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                this._loading = true;\n                _context3.next = 9;\n                return _regenerator.default.awrap((0, _AV.getNativeSourceAndFullInitialStatusForLoadAsync)(source, initialStatus, downloadFirst));\n\n              case 9:\n                _ref3 = _context3.sent;\n                nativeSource = _ref3.nativeSource;\n                fullInitialStatus = _ref3.fullInitialStatus;\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var loadSuccess = function loadSuccess(result) {\n                    var _result = (0, _slicedToArray2.default)(result, 2),\n                        key = _result[0],\n                        status = _result[1];\n\n                    _this2._key = key;\n                    _this2._loaded = true;\n                    _this2._loading = false;\n\n                    _this2._subscribeToNativeEvents();\n\n                    _this2._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                    resolve(status);\n                  };\n\n                  var loadError = function loadError(error) {\n                    _this2._loading = false;\n                    reject(error);\n                  };\n\n                  _ExponentAV.default.loadForSound(nativeSource, fullInitialStatus).then(loadSuccess).catch(loadError);\n                }));\n\n              case 15:\n                throw new Error('The Sound is already loaded.');\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"unloadAsync\",\n      value: function unloadAsync() {\n        var key, _status2;\n\n        return _regenerator.default.async(function unloadAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._loaded) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this._loaded = false;\n                key = this._key;\n                this._key = null;\n                _context4.next = 6;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadForSound(key));\n\n              case 6:\n                _status2 = _context4.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(_status2);\n\n                this._clearSubscriptions();\n\n                return _context4.abrupt(\"return\", _status2);\n\n              case 12:\n                return _context4.abrupt(\"return\", this.getStatusAsync());\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setStatusAsync\",\n      value: function setStatusAsync(status) {\n        var _this3 = this;\n\n        return _regenerator.default.async(function setStatusAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                (0, _AV.assertStatusValuesInBounds)(status);\n                return _context5.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.setStatusForSound(_this3._key, status);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"replayAsync\",\n      value: function replayAsync() {\n        var _this4 = this;\n\n        var status,\n            _args6 = arguments;\n        return _regenerator.default.async(function replayAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                status = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n\n                if (!(status.positionMillis && status.positionMillis !== 0)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                throw new Error('Requested position after replay has to be 0.');\n\n              case 3:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.replaySound(_this4._key, (0, _objectSpread2.default)({}, status, {\n                    positionMillis: 0,\n                    shouldPlay: true\n                  }));\n                }));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Sound;\n  }();\n\n  exports.Sound = Sound;\n\n  Sound.create = function _callee2(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        _args7 = arguments;\n    return _regenerator.default.async(function _callee2$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            initialStatus = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n            onPlaybackStatusUpdate = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : null;\n            downloadFirst = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : true;\n            console.warn(\"Sound.create is deprecated in favor of Sound.createAsync with the same API except for the new method name\");\n            return _context7.abrupt(\"return\", Sound.createAsync(source, initialStatus, onPlaybackStatusUpdate, downloadFirst));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  };\n\n  Sound.createAsync = function _callee3(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        sound,\n        status,\n        _args8 = arguments;\n    return _regenerator.default.async(function _callee3$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            initialStatus = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            onPlaybackStatusUpdate = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : null;\n            downloadFirst = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : true;\n            sound = new Sound();\n            sound.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n            _context8.next = 7;\n            return _regenerator.default.awrap(sound.loadAsync(source, initialStatus, downloadFirst));\n\n          case 7:\n            status = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              sound: sound,\n              status: status\n            });\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  };\n\n  (0, _extends2.default)(Sound.prototype, _AV.PlaybackMixin);\n});","map":[[21,0,1,0],[23,0,2,0],[25,0,3,0],[27,0,4,0],[29,6,5,13,"Sound"],[29,11],[30,0,6,4],[30,21,6,18],[31,0,6,18],[33,0,6,18],[34,0,7,8],[34,11,7,13,"_loaded"],[34,18,7,8],[34,21,7,23],[34,26,7,8],[35,0,8,8],[35,11,8,13,"_loading"],[35,19,8,8],[35,22,8,24],[35,27,8,8],[36,0,9,8],[36,11,9,13,"_key"],[36,15,9,8],[36,18,9,20],[36,22,9,8],[37,0,10,8],[37,11,10,13,"_lastStatusUpdate"],[37,28,10,8],[37,31,10,33],[37,35,10,8],[38,0,11,8],[38,11,11,13,"_lastStatusUpdateTime"],[38,32,11,8],[38,35,11,37],[38,39,11,8],[39,0,12,8],[39,11,12,13,"_subscriptions"],[39,25,12,8],[39,28,12,30],[39,30,12,8],[40,0,13,8],[40,11,13,13,"_eventEmitter"],[40,24,13,8],[40,27,13,29],[40,31,13,33,"EventEmitter"],[40,49,13,29],[40,50,13,46,"ExponentAV"],[40,69,13,29],[40,70,13,8],[41,0,14,8],[41,11,14,13,"_coalesceStatusUpdatesInMillis"],[41,41,14,8],[41,44,14,46],[41,47,14,8],[42,0,15,8],[42,11,15,13,"_onPlaybackStatusUpdate"],[42,34,15,8],[42,37,15,39],[42,41,15,8],[44,0,16,8],[44,11,16,13,"_internalStatusUpdateCallback"],[44,40,16,8],[44,43,16,45],[44,59,16,67],[45,0,16,67],[45,12,16,48,"key"],[45,15,16,67],[45,23,16,48,"key"],[45,26,16,67],[46,0,16,67],[46,12,16,53,"status"],[46,18,16,67],[46,26,16,53,"status"],[46,32,16,67],[48,0,17,12],[48,12,17,16],[48,17,17,20],[48,18,17,21,"_key"],[48,22,17,16],[48,27,17,30,"key"],[48,30,17,12],[48,32,17,35],[49,0,18,16],[49,10,18,16],[49,15,18,20],[49,16,18,21,"_callOnPlaybackStatusUpdateForNewStatus"],[49,55,18,16],[49,56,18,61,"status"],[49,62,18,16],[50,0,19,13],[51,0,20,9],[51,7,16,8],[53,0,21,8],[53,11,21,13,"_internalErrorCallback"],[53,33,21,8],[53,36,21,38],[53,53,21,58],[54,0,21,58],[54,12,21,41,"key"],[54,15,21,58],[54,24,21,41,"key"],[54,27,21,58],[55,0,21,58],[55,12,21,46,"error"],[55,17,21,58],[55,26,21,46,"error"],[55,31,21,58],[57,0,22,12],[57,12,22,16],[57,17,22,20],[57,18,22,21,"_key"],[57,22,22,16],[57,27,22,30,"key"],[57,30,22,12],[57,32,22,35],[58,0,23,16],[58,10,23,16],[58,15,23,20],[58,16,23,21,"_errorCallback"],[58,30,23,16],[58,31,23,36,"error"],[58,36,23,16],[59,0,24,13],[60,0,25,9],[60,7,21,8],[62,0,26,8],[62,11,26,13,"_errorCallback"],[62,25,26,8],[62,28,26,30],[62,38,26,31,"error"],[62,43,26,30],[62,45,26,41],[63,0,27,12],[63,8,27,12],[63,13,27,16],[63,14,27,17,"_clearSubscriptions"],[63,33,27,12],[65,0,28,12],[65,8,28,12],[65,13,28,16],[65,14,28,17,"_loaded"],[65,21,28,12],[65,24,28,27],[65,29,28,12],[66,0,29,12],[66,8,29,12],[66,13,29,16],[66,14,29,17,"_key"],[66,18,29,12],[66,21,29,24],[66,25,29,12],[68,0,30,12],[68,8,30,12],[68,13,30,16],[68,14,30,17,"_callOnPlaybackStatusUpdateForNewStatus"],[68,53,30,12],[68,54,30,57],[68,81,30,75,"error"],[68,86,30,57],[68,87,30,12],[69,0,31,9],[69,7,26,8],[71,0,35,8],[71,11,35,13,"getStatusAsync"],[71,25,35,8],[71,28,35,30],[72,0,35,30],[73,0,35,30],[74,0,35,30],[75,0,35,30],[76,0,35,30],[77,0,35,30],[77,21,36,16],[77,26,36,20],[77,27,36,21,"_loaded"],[77,34,35,30],[78,0,35,30],[79,0,35,30],[80,0,35,30],[82,0,35,30],[82,49,37,23],[82,54,37,27],[82,55,37,28,"_performOperationAndHandleStatusAsync"],[82,92,37,23],[82,93,37,66],[83,0,37,66],[83,25,37,72,"ExponentAV"],[83,45,37,83,"getStatusForSound"],[83,62,37,72],[83,63,37,101],[83,68,37,105],[83,69,37,106,"_key"],[83,73,37,72],[83,74,37,66],[84,0,37,66],[84,17,37,23],[84,18,35,30],[86,0,35,30],[87,0,39,18,"status"],[87,16,39,18,"status"],[87,22,35,30],[87,25,39,27],[87,53,35,30],[89,0,40,12],[89,16,40,12],[89,21,40,16],[89,22,40,17,"_callOnPlaybackStatusUpdateForNewStatus"],[89,61,40,12],[89,62,40,57,"status"],[89,68,40,12],[91,0,35,30],[91,49,41,19,"status"],[91,55,35,30],[93,0,35,30],[94,0,35,30],[95,0,35,30],[96,0,35,30],[97,0,35,30],[98,0,35,30],[99,0,35,30],[99,7,35,8],[100,0,43,5],[104,62,45,44,"status"],[104,68],[104,70,45,52],[105,0,46,8],[105,12,46,14,"shouldDismissBasedOnCoalescing"],[105,42,46,44],[105,45,46,47],[105,50,46,52,"_lastStatusUpdateTime"],[105,71,46,47],[105,75,47,12,"JSON"],[105,79,47,16],[105,80,47,17,"stringify"],[105,89,47,12],[105,90,47,27,"status"],[105,96,47,12],[105,102,47,39],[105,107,47,44,"_lastStatusUpdate"],[105,124,46,47],[105,128,48,12,"Date"],[105,132,48,16],[105,133,48,17,"now"],[105,136,48,12],[105,141,48,25],[105,146,48,30,"_lastStatusUpdateTime"],[105,167,48,25],[105,168,48,52,"getTime"],[105,175,48,25],[105,177,48,12],[105,180,48,64],[105,185,48,69,"_coalesceStatusUpdatesInMillis"],[105,215,46,8],[107,0,49,8],[107,12,49,12],[107,17,49,17,"_onPlaybackStatusUpdate"],[107,40,49,12],[107,44,49,44],[107,48,49,12],[107,52,49,52],[107,53,49,53,"shouldDismissBasedOnCoalescing"],[107,83,49,8],[107,85,49,85],[108,0,50,12],[108,15,50,17,"_onPlaybackStatusUpdate"],[108,38,50,12],[108,39,50,41,"status"],[108,45,50,12],[110,0,51,12],[110,15,51,17,"_lastStatusUpdateTime"],[110,36,51,12],[110,39,51,41],[110,43,51,45,"Date"],[110,47,51,41],[110,49,51,12],[111,0,52,12],[111,15,52,17,"_lastStatusUpdate"],[111,32,52,12],[111,35,52,37,"JSON"],[111,39,52,41],[111,40,52,42,"stringify"],[111,49,52,37],[111,50,52,52,"status"],[111,56,52,37],[111,57,52,12],[112,0,53,9],[113,0,54,5],[116,60,55,48,"operation"],[116,69],[123,0,56,8],[125,21,57,12],[125,26,57,17,"_loaded"],[125,33],[131,50,58,33,"operation"],[131,59,58,42],[131,61],[134,0,58,18,"status"],[134,16,58,18,"status"],[134,23],[136,0,59,12],[136,21,59,17,"_callOnPlaybackStatusUpdateForNewStatus"],[136,60,59,12],[136,61,59,57,"status"],[136,68,59,12],[138,50,60,19,"status"],[138,57],[141,22,63,18],[141,26,63,22,"Error"],[141,31,63,18],[141,32,63,28],[141,88,63,18],[141,89],[152,49,67,31],[153,0,68,8],[153,12,68,12],[153,17,68,17,"_loaded"],[153,24,68,8],[153,26,68,26],[154,0,69,12],[154,15,69,17,"_subscriptions"],[154,29,69,12],[154,30,69,32,"push"],[154,34,69,12],[154,35,69,37],[154,40,69,42,"_eventEmitter"],[154,53,69,37],[154,54,69,56,"addListener"],[154,65,69,37],[154,66,69,68],[154,91,69,37],[154,93,69,95],[154,98,69,100,"_internalStatusUpdateCallback"],[154,127,69,37],[154,128,69,12],[156,0,70,12],[156,15,70,17,"_subscriptions"],[156,29,70,12],[156,30,70,32,"push"],[156,34,70,12],[156,35,70,37],[156,40,70,42,"_eventEmitter"],[156,53,70,37],[156,54,70,56,"addListener"],[156,65,70,37],[156,66,70,68],[156,86,70,37],[156,88,70,90],[156,93,70,95,"_internalErrorCallback"],[156,115,70,37],[156,116,70,12],[157,0,71,9],[158,0,72,5],[161,44,73,26],[162,0,74,8],[162,13,74,13,"_subscriptions"],[162,27,74,8],[162,28,74,28,"forEach"],[162,35,74,8],[162,36,74,36],[162,46,74,36,"e"],[162,47,74,37],[163,0,74,37],[163,17,74,41,"e"],[163,18,74,42],[163,19,74,43,"remove"],[163,25,74,41],[163,27,74,37],[164,0,74,37],[164,9,74,8],[166,0,75,8],[166,13,75,13,"_subscriptions"],[166,27,75,8],[166,30,75,30],[166,32,75,8],[167,0,76,5],[170,48,77,30,"onPlaybackStatusUpdate"],[170,70],[170,72,77,54],[171,0,78,8],[171,13,78,13,"_onPlaybackStatusUpdate"],[171,36,78,8],[171,39,78,39,"onPlaybackStatusUpdate"],[171,61,78,8],[172,0,79,8],[172,13,79,13,"getStatusAsync"],[172,27,79,8],[173,0,80,5],[176,32,82,20,"source"],[176,38],[190,0,82,28,"initialStatus"],[190,16,82,28,"initialStatus"],[190,29],[190,91,82,44],[190,93],[191,0,82,48,"downloadFirst"],[191,16,82,48,"downloadFirst"],[191,29],[191,91,82,64],[191,95],[192,0,83,8],[194,21,84,12],[194,26,84,17,"_loading"],[194,34],[199,22,85,18],[199,26,85,22,"Error"],[199,31,85,18],[199,32,85,28],[199,63,85,18],[199,64],[202,20,87,13],[202,25,87,18,"_loaded"],[202,32],[207,0,88,12],[207,21,88,17,"_loading"],[207,29,88,12],[207,32,88,28],[207,36,88,12],[209,50,89,63],[209,107,89,111,"source"],[209,113,89,63],[209,115,89,119,"initialStatus"],[209,128,89,63],[209,130,89,134,"downloadFirst"],[209,143,89,63],[209,144],[213,0,89,20,"nativeSource"],[213,16,89,20,"nativeSource"],[213,28],[213,37,89,20,"nativeSource"],[213,49],[214,0,89,34,"fullInitialStatus"],[214,16,89,34,"fullInitialStatus"],[214,33],[214,42,89,34,"fullInitialStatus"],[214,59],[215,50,91,19],[215,54,91,23,"Promise"],[215,61,91,19],[215,62,91,31],[215,72,91,32,"resolve"],[215,79,91,31],[215,81,91,41,"reject"],[215,87,91,31],[215,89,91,52],[216,0,92,16],[216,22,92,22,"loadSuccess"],[216,33,92,33],[216,36,92,36],[216,45,92,22,"loadSuccess"],[216,56,92,36],[216,57,92,37,"result"],[216,63,92,36],[216,65,92,48],[217,0,92,48],[217,63,93,42,"result"],[217,69,92,48],[218,0,92,48],[218,24,93,27,"key"],[218,27,92,48],[219,0,92,48],[219,24,93,32,"status"],[219,30,92,48],[221,0,94,20],[221,20,94,20],[221,26,94,24],[221,27,94,25,"_key"],[221,31,94,20],[221,34,94,32,"key"],[221,37,94,20],[222,0,95,20],[222,20,95,20],[222,26,95,24],[222,27,95,25,"_loaded"],[222,34,95,20],[222,37,95,35],[222,41,95,20],[223,0,96,20],[223,20,96,20],[223,26,96,24],[223,27,96,25,"_loading"],[223,35,96,20],[223,38,96,36],[223,43,96,20],[225,0,97,20],[225,20,97,20],[225,26,97,24],[225,27,97,25,"_subscribeToNativeEvents"],[225,51,97,20],[227,0,98,20],[227,20,98,20],[227,26,98,24],[227,27,98,25,"_callOnPlaybackStatusUpdateForNewStatus"],[227,66,98,20],[227,67,98,65,"status"],[227,73,98,20],[229,0,99,20,"resolve"],[229,20,99,20,"resolve"],[229,27,99,27],[229,28,99,28,"status"],[229,34,99,27],[229,35,99,20],[230,0,100,17],[230,19,92,16],[232,0,101,16],[232,22,101,22,"loadError"],[232,31,101,31],[232,34,101,34],[232,43,101,22,"loadError"],[232,52,101,34],[232,53,101,35,"error"],[232,58,101,34],[232,60,101,45],[233,0,102,20],[233,20,102,20],[233,26,102,24],[233,27,102,25,"_loading"],[233,35,102,20],[233,38,102,36],[233,43,102,20],[234,0,103,20,"reject"],[234,20,103,20,"reject"],[234,26,103,26],[234,27,103,27,"error"],[234,32,103,26],[234,33,103,20],[235,0,104,17],[235,19,101,16],[237,0,105,16,"ExponentAV"],[237,38,105,27,"loadForSound"],[237,50,105,16],[237,51,105,40,"nativeSource"],[237,63,105,16],[237,65,105,54,"fullInitialStatus"],[237,82,105,16],[237,84,106,21,"then"],[237,88,105,16],[237,89,106,26,"loadSuccess"],[237,100,105,16],[237,102,107,21,"catch"],[237,107,105,16],[237,108,107,27,"loadError"],[237,117,105,16],[238,0,108,13],[238,17,91,19],[238,18],[241,22,111,18],[241,26,111,22,"Error"],[241,31,111,18],[241,32,111,28],[241,62,111,18],[241,63],[259,21,115,12],[259,26,115,17,"_loaded"],[259,33],[264,0,116,12],[264,21,116,17,"_loaded"],[264,28,116,12],[264,31,116,27],[264,36,116,12],[265,0,117,18,"key"],[265,16,117,18,"key"],[265,19],[265,22,117,24],[265,27,117,29,"_key"],[265,31],[266,0,118,12],[266,21,118,17,"_key"],[266,25,118,12],[266,28,118,24],[266,32,118,12],[268,50,119,33,"ExponentAV"],[268,70,119,44,"unloadForSound"],[268,84,119,33],[268,85,119,59,"key"],[268,88,119,33],[268,89],[271,0,119,18,"status"],[271,16,119,18,"status"],[271,24],[273,0,120,12],[273,21,120,17,"_callOnPlaybackStatusUpdateForNewStatus"],[273,60,120,12],[273,61,120,57,"status"],[273,69,120,12],[275,0,121,12],[275,21,121,17,"_clearSubscriptions"],[275,40,121,12],[277,50,122,19,"status"],[277,58],[280,50,125,19],[280,55,125,24,"getStatusAsync"],[280,69,125,19],[280,71],[291,37,129,25,"status"],[291,43],[298,0,130,8],[298,52,130,35,"status"],[298,58,130,8],[299,50,131,15],[299,55,131,20,"_performOperationAndHandleStatusAsync"],[299,92,131,15],[299,93,131,58],[300,0,131,58],[300,25,131,64,"ExponentAV"],[300,45,131,75,"setStatusForSound"],[300,62,131,64],[300,63,131,93],[300,69,131,97],[300,70,131,98,"_key"],[300,74,131,64],[300,76,131,104,"status"],[300,82,131,64],[300,83,131,58],[301,0,131,58],[301,17,131,15],[301,18],[321,0,133,22,"status"],[321,16,133,22,"status"],[321,22],[321,84,133,31],[321,86],[323,22,134,12,"status"],[323,28,134,18],[323,29,134,19,"positionMillis"],[323,43,134,12],[323,47,134,37,"status"],[323,53,134,43],[323,54,134,44,"positionMillis"],[323,68,134,37],[323,73,134,63],[323,74],[328,22,135,18],[328,26,135,22,"Error"],[328,31,135,18],[328,32,135,28],[328,78,135,18],[328,79],[331,50,137,15],[331,55,137,20,"_performOperationAndHandleStatusAsync"],[331,92,137,15],[331,93,137,58],[332,0,137,58],[332,25,137,64,"ExponentAV"],[332,45,137,75,"replaySound"],[332,56,137,64],[332,57,137,87],[332,63,137,91],[332,64,137,92,"_key"],[332,68,137,64],[332,102,138,15,"status"],[332,108,137,64],[333,0,139,12,"positionMillis"],[333,20,139,12,"positionMillis"],[333,34,139,26],[333,36,139,28],[333,37,137,64],[334,0,140,12,"shouldPlay"],[334,20,140,12,"shouldPlay"],[334,30,140,22],[334,32,140,24],[335,0,137,64],[335,21,137,58],[336,0,137,58],[336,17,137,15],[336,18],[351,0,144,0,"Sound"],[351,2,144,0,"Sound"],[351,7,144,5],[351,8,144,6,"create"],[351,14,144,0],[351,17,144,15],[351,35,144,22,"source"],[351,41,144,15],[352,0,144,15],[353,0,144,15],[354,0,144,15],[355,0,144,15],[356,0,144,15],[357,0,144,15],[358,0,144,15],[359,0,144,15],[360,0,144,30,"initialStatus"],[360,12,144,30,"initialStatus"],[360,25,144,15],[360,87,144,46],[360,89,144,15],[361,0,144,50,"onPlaybackStatusUpdate"],[361,12,144,50,"onPlaybackStatusUpdate"],[361,34,144,15],[361,96,144,75],[361,100,144,15],[362,0,144,81,"downloadFirst"],[362,12,144,81,"downloadFirst"],[362,25,144,15],[362,87,144,97],[362,91,144,15],[363,0,145,4,"console"],[363,12,145,4,"console"],[363,19,145,11],[363,20,145,12,"warn"],[363,24,145,4],[364,0,144,15],[364,46,146,11,"Sound"],[364,51,146,16],[364,52,146,17,"createAsync"],[364,63,146,11],[364,64,146,29,"source"],[364,70,146,11],[364,72,146,37,"initialStatus"],[364,85,146,11],[364,87,146,52,"onPlaybackStatusUpdate"],[364,109,146,11],[364,111,146,76,"downloadFirst"],[364,124,146,11],[364,125,144,15],[366,0,144,15],[367,0,144,15],[368,0,144,15],[369,0,144,15],[370,0,144,15],[371,0,144,15],[372,0,144,15],[372,3,144,0],[374,0,148,0,"Sound"],[374,2,148,0,"Sound"],[374,7,148,5],[374,8,148,6,"createAsync"],[374,19,148,0],[374,22,148,20],[374,40,148,27,"source"],[374,46,148,20],[375,0,148,20],[376,0,148,20],[377,0,148,20],[378,0,148,20],[379,0,148,20],[380,0,148,20],[381,0,148,20],[382,0,148,20],[383,0,148,20],[384,0,148,20],[385,0,148,35,"initialStatus"],[385,12,148,35,"initialStatus"],[385,25,148,20],[385,87,148,51],[385,89,148,20],[386,0,148,55,"onPlaybackStatusUpdate"],[386,12,148,55,"onPlaybackStatusUpdate"],[386,34,148,20],[386,96,148,80],[386,100,148,20],[387,0,148,86,"downloadFirst"],[387,12,148,86,"downloadFirst"],[387,25,148,20],[387,87,148,102],[387,91,148,20],[388,0,149,10,"sound"],[388,12,149,10,"sound"],[388,17,148,20],[388,20,149,18],[388,24,149,22,"Sound"],[388,29,149,18],[388,31,148,20],[389,0,150,4,"sound"],[389,12,150,4,"sound"],[389,17,150,9],[389,18,150,10,"setOnPlaybackStatusUpdate"],[389,43,150,4],[389,44,150,36,"onPlaybackStatusUpdate"],[389,66,150,4],[390,0,148,20],[391,0,148,20],[391,46,151,25,"sound"],[391,51,151,30],[391,52,151,31,"loadAsync"],[391,61,151,25],[391,62,151,41,"source"],[391,68,151,25],[391,70,151,49,"initialStatus"],[391,83,151,25],[391,85,151,64,"downloadFirst"],[391,98,151,25],[391,99,148,20],[393,0,148,20],[394,0,151,10,"status"],[394,12,151,10,"status"],[394,18,148,20],[395,0,148,20],[395,46,152,11],[396,0,152,13,"sound"],[396,14,152,13,"sound"],[396,19,152,18],[396,21,152,13,"sound"],[396,26,152,11],[397,0,152,20,"status"],[397,14,152,20,"status"],[397,20,152,26],[397,22,152,20,"status"],[398,0,152,11],[398,13,148,20],[400,0,148,20],[401,0,148,20],[402,0,148,20],[403,0,148,20],[404,0,148,20],[405,0,148,20],[406,0,148,20],[406,3,148,0],[408,0,154,0],[408,25,154,14,"Sound"],[408,30,154,19],[408,31,154,20,"prototype"],[408,40,154,0],[408,42,154,31,"PlaybackMixin"],[408,59,154,0]]},"type":"js/module"}]}