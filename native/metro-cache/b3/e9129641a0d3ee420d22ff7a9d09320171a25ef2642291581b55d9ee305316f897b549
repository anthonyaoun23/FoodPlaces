{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoAppAuth","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getDefaultOAuthRedirect = getDefaultOAuthRedirect;\n  exports.authAsync = authAsync;\n  exports.refreshAsync = refreshAsync;\n  exports.revokeAsync = revokeAsync;\n  exports.URLSchemes = exports.OAuthRedirect = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n\n  var _ExpoAppAuth = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoAppAuth\"));\n\n  function isValidServiceConfiguration(config) {\n    return !!(config && typeof config.authorizationEndpoint === 'string' && typeof config.tokenEndpoint === 'string');\n  }\n\n  function assertValidClientId(clientId) {\n    if (typeof clientId !== 'string' || !clientId.length) {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`clientId` must be a string with more than 0 characters');\n    }\n  }\n\n  function assertValidProps(_ref) {\n    var issuer = _ref.issuer,\n        redirectUrl = _ref.redirectUrl,\n        clientId = _ref.clientId,\n        serviceConfiguration = _ref.serviceConfiguration;\n\n    if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', 'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`');\n    }\n\n    if (typeof redirectUrl !== 'string') {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n    }\n\n    assertValidClientId(clientId);\n  }\n\n  function _executeAsync(props) {\n    return _regenerator.default.async(function _executeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.redirectUrl) {\n              props.redirectUrl = getDefaultOAuthRedirect();\n            }\n\n            assertValidProps(props);\n            _context.next = 4;\n            return _regenerator.default.awrap(_ExpoAppAuth.default.executeAsync(props));\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getDefaultOAuthRedirect() {\n    return _ExpoAppAuth.default.OAuthRedirect + \":/oauthredirect\";\n  }\n\n  function authAsync(props) {\n    return _regenerator.default.async(function authAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_ExpoAppAuth.default.executeAsync) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('expo-app-auth', 'authAsync');\n\n          case 2:\n            _context2.next = 4;\n            return _regenerator.default.awrap(_executeAsync(props));\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function refreshAsync(props, refreshToken) {\n    return _regenerator.default.async(function refreshAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_ExpoAppAuth.default.executeAsync) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('expo-app-auth', 'refreshAsync');\n\n          case 2:\n            if (refreshToken) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new _core.CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(_executeAsync((0, _objectSpread2.default)({\n              isRefresh: true,\n              refreshToken: refreshToken\n            }, props)));\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function revokeAsync(_ref2, _ref3) {\n    var clientId, issuer, serviceConfiguration, token, _ref3$isClientIdProvi, isClientIdProvided, revocationEndpoint, response, openidConfig, encodedClientID, encodedToken, body, headers, results;\n\n    return _regenerator.default.async(function revokeAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            clientId = _ref2.clientId, issuer = _ref2.issuer, serviceConfiguration = _ref2.serviceConfiguration;\n            token = _ref3.token, _ref3$isClientIdProvi = _ref3.isClientIdProvided, isClientIdProvided = _ref3$isClientIdProvi === void 0 ? false : _ref3$isClientIdProvi;\n\n            if (token) {\n              _context4.next = 4;\n              break;\n            }\n\n            throw new _core.CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n\n          case 4:\n            assertValidClientId(clientId);\n\n            if (!(serviceConfiguration && serviceConfiguration.revocationEndpoint)) {\n              _context4.next = 9;\n              break;\n            }\n\n            revocationEndpoint = serviceConfiguration.revocationEndpoint;\n            _context4.next = 17;\n            break;\n\n          case 9:\n            _context4.next = 11;\n            return _regenerator.default.awrap(fetch(issuer + \"/.well-known/openid-configuration\"));\n\n          case 11:\n            response = _context4.sent;\n            _context4.next = 14;\n            return _regenerator.default.awrap(response.json());\n\n          case 14:\n            openidConfig = _context4.sent;\n            (0, _invariant.default)(openidConfig.revocation_endpoint, 'The OpenID config does not specify a revocation endpoint');\n            revocationEndpoint = openidConfig.revocation_endpoint;\n\n          case 17:\n            encodedClientID = encodeURIComponent(clientId);\n            encodedToken = encodeURIComponent(token);\n            body = \"token=\" + encodedToken + (isClientIdProvided ? \"&client_id=\" + encodedClientID : '');\n            headers = {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            };\n            _context4.prev = 21;\n            _context4.next = 24;\n            return _regenerator.default.awrap(fetch(revocationEndpoint, {\n              method: 'POST',\n              headers: headers,\n              body: body\n            }));\n\n          case 24:\n            results = _context4.sent;\n            return _context4.abrupt(\"return\", results);\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](21);\n            throw new _core.CodedError('ERR_APP_AUTH_REVOKE_FAILED', _context4.t0.message);\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[21, 28]]);\n  }\n\n  function parseAuthRevocationResults(results) {\n    var data, token, retryAfterValue, retryAfter;\n    return _regenerator.default.async(function parseAuthRevocationResults$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap(results.json());\n\n          case 2:\n            data = _context5.sent;\n            token = results.headers['update-client-auth'];\n\n            if (!results.ok) {\n              _context5.next = 8;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", {\n              type: 'success',\n              status: results.status,\n              data: data,\n              token: token\n            });\n\n          case 8:\n            if (!(results.status == 503 && results.headers['retry-after'])) {\n              _context5.next = 14;\n              break;\n            }\n\n            retryAfterValue = results.headers['retry-after'];\n\n            if (retryAfterValue) {\n              retryAfter = parseRetryTime(retryAfterValue);\n            }\n\n            return _context5.abrupt(\"return\", {\n              type: 'failed',\n              status: results.status,\n              data: data,\n              token: token,\n              retryAfter: retryAfter\n            });\n\n          case 14:\n            return _context5.abrupt(\"return\", {\n              type: 'error',\n              status: results.status,\n              data: data,\n              token: token\n            });\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function parseRetryTime(value) {\n    if (/^\\d+$/.test(value)) {\n      return parseInt(value, 10) * 1000;\n    }\n\n    var retry = Date.parse(value);\n\n    if (isNaN(retry)) {\n      throw new _core.CodedError('ERR_APP_AUTH_FETCH_RETRY_TIME', 'Cannot parse the Retry-After header value returned by the server: ' + value);\n    }\n\n    var now = Date.now();\n    var parsedDate = new Date(retry);\n    return parsedDate.getTime() - now;\n  }\n\n  var OAuthRedirect = _ExpoAppAuth.default.OAuthRedirect,\n      URLSchemes = _ExpoAppAuth.default.URLSchemes;\n  exports.URLSchemes = URLSchemes;\n  exports.OAuthRedirect = OAuthRedirect;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,4,0],[23,11,4,9,"isValidServiceConfiguration"],[23,38,4,0],[23,39,4,37,"config"],[23,45,4,0],[23,47,4,45],[24,0,5,4],[24,11,5,11],[24,12,5,12],[24,14,5,14,"config"],[24,20,5,20],[24,24,6,8],[24,31,6,15,"config"],[24,37,6,21],[24,38,6,22,"authorizationEndpoint"],[24,59,6,8],[24,64,6,48],[24,72,5,14],[24,76,7,8],[24,83,7,15,"config"],[24,89,7,21],[24,90,7,22,"tokenEndpoint"],[24,103,7,8],[24,108,7,40],[24,116,5,12],[24,117,5,4],[25,0,8,1],[27,0,9,0],[27,11,9,9,"assertValidClientId"],[27,30,9,0],[27,31,9,29,"clientId"],[27,39,9,0],[27,41,9,39],[28,0,10,4],[28,8,10,8],[28,15,10,15,"clientId"],[28,23,10,8],[28,28,10,28],[28,36,10,8],[28,40,10,40],[28,41,10,41,"clientId"],[28,49,10,49],[28,50,10,50,"length"],[28,56,10,4],[28,58,10,58],[29,0,11,8],[29,12,11,14],[29,16,11,18,"CodedError"],[29,32,11,14],[29,33,11,29],[29,62,11,14],[29,64,11,60],[29,121,11,14],[29,122,11,8],[30,0,12,5],[31,0,13,1],[33,0,14,0],[33,11,14,9,"assertValidProps"],[33,27,14,0],[33,34,14,84],[34,0,14,84],[34,8,14,28,"issuer"],[34,14,14,84],[34,22,14,28,"issuer"],[34,28,14,84],[35,0,14,84],[35,8,14,36,"redirectUrl"],[35,19,14,84],[35,27,14,36,"redirectUrl"],[35,38,14,84],[36,0,14,84],[36,8,14,49,"clientId"],[36,16,14,84],[36,24,14,49,"clientId"],[36,32,14,84],[37,0,14,84],[37,8,14,59,"serviceConfiguration"],[37,28,14,84],[37,36,14,59,"serviceConfiguration"],[37,56,14,84],[39,0,15,4],[39,8,15,8],[39,15,15,15,"issuer"],[39,21,15,8],[39,26,15,26],[39,34,15,8],[39,38,15,38],[39,39,15,39,"isValidServiceConfiguration"],[39,66,15,66],[39,67,15,67,"serviceConfiguration"],[39,87,15,66],[39,88,15,4],[39,90,15,90],[40,0,16,8],[40,12,16,14],[40,16,16,18,"CodedError"],[40,32,16,14],[40,33,16,29],[40,62,16,14],[40,64,16,60],[40,153,16,14],[40,154,16,8],[41,0,17,5],[43,0,18,4],[43,8,18,8],[43,15,18,15,"redirectUrl"],[43,26,18,8],[43,31,18,31],[43,39,18,4],[43,41,18,41],[44,0,19,8],[44,12,19,14],[44,16,19,18,"CodedError"],[44,32,19,14],[44,33,19,29],[44,62,19,14],[44,64,19,60],[44,96,19,14],[44,97,19,8],[45,0,20,5],[47,0,21,4,"assertValidClientId"],[47,4,21,4,"assertValidClientId"],[47,23,21,23],[47,24,21,24,"clientId"],[47,32,21,23],[47,33,21,4],[48,0,22,1],[50,0,23,0],[50,11,23,15,"_executeAsync"],[50,24,23,0],[50,25,23,29,"props"],[50,30,23,0],[51,0,23,0],[52,0,23,0],[53,0,23,0],[54,0,23,0],[55,0,24,4],[55,16,24,8],[55,17,24,9,"props"],[55,22,24,14],[55,23,24,15,"redirectUrl"],[55,34,24,4],[55,36,24,28],[56,0,25,8,"props"],[56,14,25,8,"props"],[56,19,25,13],[56,20,25,14,"redirectUrl"],[56,31,25,8],[56,34,25,28,"getDefaultOAuthRedirect"],[56,57,25,51],[56,59,25,8],[57,0,26,5],[59,0,27,4,"assertValidProps"],[59,12,27,4,"assertValidProps"],[59,28,27,20],[59,29,27,21,"props"],[59,34,27,20],[59,35,27,4],[60,0,23,0],[61,0,23,0],[61,46,28,17,"ExpoAppAuth"],[61,67,28,29,"executeAsync"],[61,79,28,17],[61,80,28,42,"props"],[61,85,28,17],[61,86,23,0],[63,0,23,0],[64,0,23,0],[66,0,23,0],[67,0,23,0],[68,0,23,0],[69,0,23,0],[70,0,23,0],[71,0,23,0],[72,0,23,0],[74,0,30,7],[74,11,30,16,"getDefaultOAuthRedirect"],[74,34,30,7],[74,37,30,42],[75,0,31,4],[75,11,31,14,"ExpoAppAuth"],[75,32,31,26,"OAuthRedirect"],[75,45,31,4],[76,0,32,1],[78,0,33,7],[78,11,33,22,"authAsync"],[78,20,33,7],[78,21,33,32,"props"],[78,26,33,7],[79,0,33,7],[80,0,33,7],[81,0,33,7],[82,0,33,7],[83,0,33,7],[83,16,34,9,"ExpoAppAuth"],[83,37,34,21,"executeAsync"],[83,49,33,7],[84,0,33,7],[85,0,33,7],[86,0,33,7],[88,0,33,7],[88,18,35,14],[88,22,35,18,"UnavailabilityError"],[88,47,35,14],[88,48,35,38],[88,63,35,14],[88,65,35,55],[88,76,35,14],[88,77,33,7],[90,0,33,7],[91,0,33,7],[92,0,33,7],[92,46,37,17,"_executeAsync"],[92,59,37,30],[92,60,37,31,"props"],[92,65,37,30],[92,66,33,7],[94,0,33,7],[95,0,33,7],[97,0,33,7],[98,0,33,7],[99,0,33,7],[100,0,33,7],[101,0,33,7],[102,0,33,7],[103,0,33,7],[105,0,39,7],[105,11,39,22,"refreshAsync"],[105,23,39,7],[105,24,39,35,"props"],[105,29,39,7],[105,31,39,42,"refreshToken"],[105,43,39,7],[106,0,39,7],[107,0,39,7],[108,0,39,7],[109,0,39,7],[110,0,39,7],[110,16,40,9,"ExpoAppAuth"],[110,37,40,21,"executeAsync"],[110,49,39,7],[111,0,39,7],[112,0,39,7],[113,0,39,7],[115,0,39,7],[115,18,41,14],[115,22,41,18,"UnavailabilityError"],[115,47,41,14],[115,48,41,38],[115,63,41,14],[115,65,41,55],[115,79,41,14],[115,80,39,7],[117,0,39,7],[118,0,39,7],[118,16,43,9,"refreshToken"],[118,28,39,7],[119,0,39,7],[120,0,39,7],[121,0,39,7],[123,0,39,7],[123,18,44,14],[123,22,44,18,"CodedError"],[123,38,44,14],[123,39,44,29],[123,59,44,14],[123,61,44,51],[123,102,44,14],[123,103,39,7],[125,0,39,7],[126,0,39,7],[127,0,39,7],[127,46,46,17,"_executeAsync"],[127,59,46,30],[128,0,47,8,"isRefresh"],[128,14,47,8,"isRefresh"],[128,23,47,17],[128,25,47,19],[128,29,46,30],[129,0,48,8,"refreshToken"],[129,14,48,8,"refreshToken"],[129,26,48,20],[129,28,48,8,"refreshToken"],[130,0,46,30],[130,15,49,11,"props"],[130,20,46,30],[130,22,39,7],[132,0,39,7],[133,0,39,7],[135,0,39,7],[136,0,39,7],[137,0,39,7],[138,0,39,7],[139,0,39,7],[140,0,39,7],[141,0,39,7],[143,0,53,7],[143,11,53,22,"revokeAsync"],[143,22,53,7],[144,0,53,7],[146,0,53,7],[147,0,53,7],[148,0,53,7],[149,0,53,7],[150,0,53,36,"clientId"],[150,12,53,36,"clientId"],[150,20,53,7],[150,29,53,36,"clientId"],[150,37,53,7],[150,39,53,46,"issuer"],[150,45,53,7],[150,54,53,46,"issuer"],[150,60,53,7],[150,62,53,54,"serviceConfiguration"],[150,82,53,7],[150,91,53,54,"serviceConfiguration"],[150,111,53,7],[151,0,53,80,"token"],[151,12,53,80,"token"],[151,17,53,7],[151,26,53,80,"token"],[151,31,53,7],[151,63,53,87,"isClientIdProvided"],[151,81,53,7],[151,83,53,87,"isClientIdProvided"],[151,101,53,7],[151,139,53,108],[151,144,53,7],[153,0,53,7],[153,16,54,9,"token"],[153,21,53,7],[154,0,53,7],[155,0,53,7],[156,0,53,7],[158,0,53,7],[158,18,55,14],[158,22,55,18,"CodedError"],[158,38,55,14],[158,39,55,29],[158,59,55,14],[158,61,55,51],[158,91,55,14],[158,92,53,7],[160,0,53,7],[161,0,57,4,"assertValidClientId"],[161,12,57,4,"assertValidClientId"],[161,31,57,23],[161,32,57,24,"clientId"],[161,40,57,23],[161,41,57,4],[163,0,53,7],[163,18,59,8,"serviceConfiguration"],[163,38,59,28],[163,42,59,32,"serviceConfiguration"],[163,62,59,52],[163,63,59,53,"revocationEndpoint"],[163,81,53,7],[164,0,53,7],[165,0,53,7],[166,0,53,7],[168,0,60,8,"revocationEndpoint"],[168,12,60,8,"revocationEndpoint"],[168,30,60,26],[168,33,60,29,"serviceConfiguration"],[168,53,60,49],[168,54,60,50,"revocationEndpoint"],[168,72,60,8],[169,0,53,7],[170,0,53,7],[172,0,53,7],[173,0,53,7],[174,0,53,7],[174,46,64,31,"fetch"],[174,51,64,36],[174,52,64,40,"issuer"],[174,58,64,36],[174,97,53,7],[176,0,53,7],[177,0,64,14,"response"],[177,12,64,14,"response"],[177,20,53,7],[178,0,53,7],[179,0,53,7],[179,46,65,35,"response"],[179,54,65,43],[179,55,65,44,"json"],[179,59,65,35],[179,61,53,7],[181,0,53,7],[182,0,65,14,"openidConfig"],[182,12,65,14,"openidConfig"],[182,24,53,7],[183,0,66,8],[183,36,66,18,"openidConfig"],[183,48,66,30],[183,49,66,31,"revocation_endpoint"],[183,68,66,8],[183,70,66,52],[183,128,66,8],[184,0,67,8,"revocationEndpoint"],[184,12,67,8,"revocationEndpoint"],[184,30,67,26],[184,33,67,29,"openidConfig"],[184,45,67,41],[184,46,67,42,"revocation_endpoint"],[184,65,67,8],[186,0,53,7],[187,0,69,10,"encodedClientID"],[187,12,69,10,"encodedClientID"],[187,27,53,7],[187,30,69,28,"encodeURIComponent"],[187,48,69,46],[187,49,69,47,"clientId"],[187,57,69,46],[187,58,53,7],[188,0,70,10,"encodedToken"],[188,12,70,10,"encodedToken"],[188,24,53,7],[188,27,70,25,"encodeURIComponent"],[188,45,70,43],[188,46,70,44,"token"],[188,51,70,43],[188,52,53,7],[189,0,71,10,"body"],[189,12,71,10,"body"],[189,16,53,7],[189,30,71,26,"encodedToken"],[189,42,53,7],[189,46,71,41,"isClientIdProvided"],[189,64,71,59],[189,83,71,76,"encodedClientID"],[189,98,71,59],[189,101,71,96],[189,103,53,7],[190,0,72,10,"headers"],[190,12,72,10,"headers"],[190,19,53,7],[190,22,72,20],[191,0,72,22],[191,30,72,38],[192,0,72,20],[192,13,53,7],[193,0,53,7],[194,0,53,7],[195,0,53,7],[195,46,75,30,"fetch"],[195,51,75,35],[195,52,75,36,"revocationEndpoint"],[195,70,75,35],[195,72,75,56],[196,0,76,12,"method"],[196,14,76,12,"method"],[196,20,76,18],[196,22,76,20],[196,28,75,56],[197,0,77,12,"headers"],[197,14,77,12,"headers"],[197,21,77,19],[197,23,77,12,"headers"],[197,30,75,56],[198,0,78,12,"body"],[198,14,78,12,"body"],[198,18,78,16],[198,20,78,12,"body"],[199,0,75,56],[199,13,75,35],[199,14,53,7],[201,0,53,7],[202,0,75,14,"results"],[202,12,75,14,"results"],[202,19,53,7],[203,0,53,7],[203,46,80,15,"results"],[203,53,53,7],[205,0,53,7],[206,0,53,7],[207,0,53,7],[208,0,53,7],[208,18,83,14],[208,22,83,18,"CodedError"],[208,38,83,14],[208,39,83,29],[208,67,83,14],[208,69,83,59],[208,82,83,65,"message"],[208,89,83,14],[208,90,53,7],[210,0,53,7],[211,0,53,7],[212,0,53,7],[213,0,53,7],[214,0,53,7],[215,0,53,7],[216,0,53,7],[218,0,86,0],[218,11,86,15,"parseAuthRevocationResults"],[218,37,86,0],[218,38,86,42,"results"],[218,45,86,0],[219,0,86,0],[220,0,86,0],[221,0,86,0],[222,0,86,0],[223,0,86,0],[224,0,86,0],[225,0,86,0],[225,46,87,23,"results"],[225,53,87,30],[225,54,87,31,"json"],[225,58,87,23],[225,60,86,0],[227,0,86,0],[228,0,87,10,"data"],[228,12,87,10,"data"],[228,16,86,0],[229,0,88,10,"token"],[229,12,88,10,"token"],[229,17,86,0],[229,20,88,18,"results"],[229,27,88,25],[229,28,88,26,"headers"],[229,35,88,18],[229,36,88,34],[229,56,88,18],[229,57,86,0],[231,0,86,0],[231,17,90,8,"results"],[231,24,90,15],[231,25,90,16,"ok"],[231,27,86,0],[232,0,86,0],[233,0,86,0],[234,0,86,0],[236,0,86,0],[236,46,92,15],[237,0,92,17,"type"],[237,14,92,17,"type"],[237,18,92,21],[237,20,92,23],[237,29,92,15],[238,0,92,34,"status"],[238,14,92,34,"status"],[238,20,92,40],[238,22,92,42,"results"],[238,29,92,49],[238,30,92,50,"status"],[238,36,92,15],[239,0,92,58,"data"],[239,14,92,58,"data"],[239,18,92,62],[239,20,92,58,"data"],[239,24,92,15],[240,0,92,64,"token"],[240,14,92,64,"token"],[240,19,92,69],[240,21,92,64,"token"],[241,0,92,15],[241,13,86,0],[243,0,86,0],[244,0,86,0],[244,18,94,13,"results"],[244,25,94,20],[244,26,94,21,"status"],[244,32,94,13],[244,36,94,31],[244,39,94,13],[244,43,94,38,"results"],[244,50,94,45],[244,51,94,46,"headers"],[244,58,94,38],[244,59,94,54],[244,72,94,38],[244,73,86,0],[245,0,86,0],[246,0,86,0],[247,0,86,0],[249,0,96,14,"retryAfterValue"],[249,12,96,14,"retryAfterValue"],[249,27,86,0],[249,30,96,32,"results"],[249,37,96,39],[249,38,96,40,"headers"],[249,45,96,32],[249,46,96,48],[249,59,96,32],[249,60,86,0],[251,0,98,8],[251,16,98,12,"retryAfterValue"],[251,31,98,8],[251,33,98,29],[252,0,99,12,"retryAfter"],[252,14,99,12,"retryAfter"],[252,24,99,22],[252,27,99,25,"parseRetryTime"],[252,41,99,39],[252,42,99,40,"retryAfterValue"],[252,57,99,39],[252,58,99,12],[253,0,100,9],[255,0,86,0],[255,46,102,15],[256,0,102,17,"type"],[256,14,102,17,"type"],[256,18,102,21],[256,20,102,23],[256,28,102,15],[257,0,102,33,"status"],[257,14,102,33,"status"],[257,20,102,39],[257,22,102,41,"results"],[257,29,102,48],[257,30,102,49,"status"],[257,36,102,15],[258,0,102,57,"data"],[258,14,102,57,"data"],[258,18,102,61],[258,20,102,57,"data"],[258,24,102,15],[259,0,102,63,"token"],[259,14,102,63,"token"],[259,19,102,68],[259,21,102,63,"token"],[259,26,102,15],[260,0,102,70,"retryAfter"],[260,14,102,70,"retryAfter"],[260,24,102,80],[260,26,102,70,"retryAfter"],[261,0,102,15],[261,13,86,0],[263,0,86,0],[264,0,86,0],[264,46,106,15],[265,0,106,17,"type"],[265,14,106,17,"type"],[265,18,106,21],[265,20,106,23],[265,27,106,15],[266,0,106,32,"status"],[266,14,106,32,"status"],[266,20,106,38],[266,22,106,40,"results"],[266,29,106,47],[266,30,106,48,"status"],[266,36,106,15],[267,0,106,56,"data"],[267,14,106,56,"data"],[267,18,106,60],[267,20,106,56,"data"],[267,24,106,15],[268,0,106,62,"token"],[268,14,106,62,"token"],[268,19,106,67],[268,21,106,62,"token"],[269,0,106,15],[269,13,86,0],[271,0,86,0],[272,0,86,0],[273,0,86,0],[274,0,86,0],[275,0,86,0],[276,0,86,0],[277,0,86,0],[279,0,109,0],[279,11,109,9,"parseRetryTime"],[279,25,109,0],[279,26,109,24,"value"],[279,31,109,0],[279,33,109,31],[280,0,111,4],[280,8,111,8],[280,16,111,16,"test"],[280,20,111,8],[280,21,111,21,"value"],[280,26,111,8],[280,27,111,4],[280,29,111,29],[281,0,112,8],[281,13,112,15,"parseInt"],[281,21,112,23],[281,22,112,24,"value"],[281,27,112,23],[281,29,112,31],[281,31,112,23],[281,32,112,15],[281,35,112,37],[281,39,112,8],[282,0,113,5],[284,0,114,4],[284,8,114,10,"retry"],[284,13,114,15],[284,16,114,18,"Date"],[284,20,114,22],[284,21,114,23,"parse"],[284,26,114,18],[284,27,114,29,"value"],[284,32,114,18],[284,33,114,4],[286,0,115,4],[286,8,115,8,"isNaN"],[286,13,115,13],[286,14,115,14,"retry"],[286,19,115,13],[286,20,115,4],[286,22,115,22],[287,0,116,8],[287,12,116,14],[287,16,116,18,"CodedError"],[287,32,116,14],[287,33,116,29],[287,64,116,14],[287,66,116,62],[287,137,116,133,"value"],[287,142,116,14],[287,143,116,8],[288,0,117,5],[290,0,118,4],[290,8,118,10,"now"],[290,11,118,13],[290,14,118,16,"Date"],[290,18,118,20],[290,19,118,21,"now"],[290,22,118,16],[290,24,118,4],[291,0,119,4],[291,8,119,10,"parsedDate"],[291,18,119,20],[291,21,119,23],[291,25,119,27,"Date"],[291,29,119,23],[291,30,119,32,"retry"],[291,35,119,23],[291,36,119,4],[292,0,120,4],[292,11,120,11,"parsedDate"],[292,21,120,21],[292,22,120,22,"getTime"],[292,29,120,11],[292,34,120,34,"now"],[292,37,120,4],[293,0,121,1],[295,6,122,15,"OAuthRedirect"],[295,19],[295,22,122,45,"ExpoAppAuth"],[295,42],[295,43,122,15,"OAuthRedirect"],[295,56],[296,6,122,30,"URLSchemes"],[296,16],[296,19,122,45,"ExpoAppAuth"],[296,39],[296,40,122,30,"URLSchemes"],[296,50]]},"type":"js/module"}]}