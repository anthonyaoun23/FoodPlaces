{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getBrightnessAsync = getBrightnessAsync;\n  exports.setBrightnessAsync = setBrightnessAsync;\n  exports.getSystemBrightnessAsync = getSystemBrightnessAsync;\n  exports.setSystemBrightnessAsync = setSystemBrightnessAsync;\n  exports.useSystemBrightnessAsync = useSystemBrightnessAsync;\n  exports.isUsingSystemBrightnessAsync = isUsingSystemBrightnessAsync;\n  exports.getSystemBrightnessModeAsync = getSystemBrightnessModeAsync;\n  exports.setSystemBrightnessModeAsync = setSystemBrightnessModeAsync;\n  exports.BrightnessMode = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var BrightnessMode;\n  exports.BrightnessMode = BrightnessMode;\n\n  (function (BrightnessMode) {\n    BrightnessMode[BrightnessMode[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    BrightnessMode[BrightnessMode[\"AUTOMATIC\"] = 1] = \"AUTOMATIC\";\n    BrightnessMode[BrightnessMode[\"MANUAL\"] = 2] = \"MANUAL\";\n  })(BrightnessMode || (exports.BrightnessMode = BrightnessMode = {}));\n\n  ;\n\n  function getBrightnessAsync() {\n    return _regenerator.default.async(function getBrightnessAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.getBrightnessAsync());\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function setBrightnessAsync(brightnessValue) {\n    var clampedBrightnessValue;\n    return _regenerator.default.async(function setBrightnessAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n\n            if (!isNaN(clampedBrightnessValue)) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new TypeError(\"setBrightnessAsync cannot be called with \" + brightnessValue);\n\n          case 3:\n            _context2.next = 5;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.setBrightnessAsync(clampedBrightnessValue));\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function getSystemBrightnessAsync() {\n    return _regenerator.default.async(function getSystemBrightnessAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context3.next = 4;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regenerator.default.awrap(getBrightnessAsync());\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.getSystemBrightnessAsync());\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function setSystemBrightnessAsync(brightnessValue) {\n    var clampedBrightnessValue;\n    return _regenerator.default.async(function setSystemBrightnessAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n\n            if (!isNaN(clampedBrightnessValue)) {\n              _context4.next = 3;\n              break;\n            }\n\n            throw new TypeError(\"setSystemBrightnessAsync cannot be called with \" + brightnessValue);\n\n          case 3:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context4.next = 7;\n              break;\n            }\n\n            _context4.next = 6;\n            return _regenerator.default.awrap(setBrightnessAsync(clampedBrightnessValue));\n\n          case 6:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 7:\n            _context4.next = 9;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.setSystemBrightnessAsync(clampedBrightnessValue));\n\n          case 9:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function useSystemBrightnessAsync() {\n    return _regenerator.default.async(function useSystemBrightnessAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 2:\n            _context5.next = 4;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.useSystemBrightnessAsync());\n\n          case 4:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function isUsingSystemBrightnessAsync() {\n    return _regenerator.default.async(function isUsingSystemBrightnessAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context6.next = 2;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", false);\n\n          case 2:\n            _context6.next = 4;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.isUsingSystemBrightnessAsync());\n\n          case 4:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n\n  function getSystemBrightnessModeAsync() {\n    return _regenerator.default.async(function getSystemBrightnessModeAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context7.next = 2;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", BrightnessMode.UNKNOWN);\n\n          case 2:\n            _context7.next = 4;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.getSystemBrightnessModeAsync());\n\n          case 4:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }\n\n  function setSystemBrightnessModeAsync(brightnessMode) {\n    return _regenerator.default.async(function setSystemBrightnessModeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if (!(_reactNative.Platform.OS !== 'android' || brightnessMode === BrightnessMode.UNKNOWN)) {\n              _context8.next = 2;\n              break;\n            }\n\n            return _context8.abrupt(\"return\");\n\n          case 2:\n            _context8.next = 4;\n            return _regenerator.default.awrap(_core.NativeModulesProxy.ExpoBrightness.setSystemBrightnessModeAsync(brightnessMode));\n\n          case 4:\n            return _context8.abrupt(\"return\", _context8.sent);\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  }\n});","map":[[19,0,1,0],[21,0,2,0],[23,0,3,7],[23,6,3,11,"BrightnessMode"],[23,20,3,7],[26,0,4,0],[26,3,4,1],[26,13,4,11,"BrightnessMode"],[26,27,4,1],[26,29,4,27],[27,0,5,4,"BrightnessMode"],[27,4,5,4,"BrightnessMode"],[27,18,5,18],[27,19,5,19,"BrightnessMode"],[27,33,5,33],[27,34,5,34],[27,43,5,33],[27,44,5,19],[27,47,5,47],[27,48,5,18],[27,49,5,4],[27,52,5,52],[27,61,5,4],[28,0,6,4,"BrightnessMode"],[28,4,6,4,"BrightnessMode"],[28,18,6,18],[28,19,6,19,"BrightnessMode"],[28,33,6,33],[28,34,6,34],[28,45,6,33],[28,46,6,19],[28,49,6,49],[28,50,6,18],[28,51,6,4],[28,54,6,54],[28,65,6,4],[29,0,7,4,"BrightnessMode"],[29,4,7,4,"BrightnessMode"],[29,18,7,18],[29,19,7,19,"BrightnessMode"],[29,33,7,33],[29,34,7,34],[29,42,7,33],[29,43,7,19],[29,46,7,46],[29,47,7,18],[29,48,7,4],[29,51,7,51],[29,59,7,4],[30,0,8,1],[30,3,4,0],[30,5,8,3,"BrightnessMode"],[30,19,8,17],[30,49,8,22,"BrightnessMode"],[30,63,8,36],[30,66,8,39],[30,68,8,17],[30,69,4,0],[32,0,9,0],[34,0,10,7],[34,11,10,22,"getBrightnessAsync"],[34,29,10,7],[35,0,10,7],[36,0,10,7],[37,0,10,7],[38,0,10,7],[39,0,10,7],[40,0,10,7],[40,46,11,17,"NativeModulesProxy"],[40,71,11,36,"ExpoBrightness"],[40,85,11,17],[40,86,11,51,"getBrightnessAsync"],[40,104,11,17],[40,106,10,7],[42,0,10,7],[43,0,10,7],[45,0,10,7],[46,0,10,7],[47,0,10,7],[48,0,10,7],[49,0,10,7],[50,0,10,7],[51,0,10,7],[53,0,13,7],[53,11,13,22,"setBrightnessAsync"],[53,29,13,7],[53,30,13,41,"brightnessValue"],[53,45,13,7],[54,0,13,7],[55,0,13,7],[56,0,13,7],[57,0,13,7],[58,0,13,7],[59,0,14,8,"clampedBrightnessValue"],[59,12,14,8,"clampedBrightnessValue"],[59,34,13,7],[59,37,14,33,"Math"],[59,41,14,37],[59,42,14,38,"max"],[59,45,14,33],[59,46,14,42],[59,47,14,33],[59,49,14,45,"Math"],[59,53,14,49],[59,54,14,50,"min"],[59,57,14,45],[59,58,14,54,"brightnessValue"],[59,73,14,45],[59,75,14,71],[59,76,14,45],[59,77,14,33],[59,78,13,7],[61,0,13,7],[61,17,15,8,"isNaN"],[61,22,15,13],[61,23,15,14,"clampedBrightnessValue"],[61,45,15,13],[61,46,13,7],[62,0,13,7],[63,0,13,7],[64,0,13,7],[66,0,13,7],[66,18,16,14],[66,22,16,18,"TypeError"],[66,31,16,14],[66,78,16,72,"brightnessValue"],[66,93,16,14],[66,94,13,7],[68,0,13,7],[69,0,13,7],[70,0,13,7],[70,46,18,17,"NativeModulesProxy"],[70,71,18,36,"ExpoBrightness"],[70,85,18,17],[70,86,18,51,"setBrightnessAsync"],[70,104,18,17],[70,105,18,70,"clampedBrightnessValue"],[70,127,18,17],[70,128,13,7],[72,0,13,7],[73,0,13,7],[75,0,13,7],[76,0,13,7],[77,0,13,7],[78,0,13,7],[79,0,13,7],[80,0,13,7],[81,0,13,7],[83,0,20,7],[83,11,20,22,"getSystemBrightnessAsync"],[83,35,20,7],[84,0,20,7],[85,0,20,7],[86,0,20,7],[87,0,20,7],[88,0,20,7],[88,18,21,8,"Platform"],[88,40,21,17,"OS"],[88,42,21,8],[88,47,21,24],[88,56,20,7],[89,0,20,7],[90,0,20,7],[91,0,20,7],[93,0,20,7],[94,0,20,7],[94,46,22,21,"getBrightnessAsync"],[94,64,22,39],[94,66,20,7],[96,0,20,7],[97,0,20,7],[99,0,20,7],[100,0,20,7],[101,0,20,7],[101,46,24,17,"NativeModulesProxy"],[101,71,24,36,"ExpoBrightness"],[101,85,24,17],[101,86,24,51,"getSystemBrightnessAsync"],[101,110,24,17],[101,112,20,7],[103,0,20,7],[104,0,20,7],[106,0,20,7],[107,0,20,7],[108,0,20,7],[109,0,20,7],[110,0,20,7],[111,0,20,7],[112,0,20,7],[114,0,26,7],[114,11,26,22,"setSystemBrightnessAsync"],[114,35,26,7],[114,36,26,47,"brightnessValue"],[114,51,26,7],[115,0,26,7],[116,0,26,7],[117,0,26,7],[118,0,26,7],[119,0,26,7],[120,0,27,8,"clampedBrightnessValue"],[120,12,27,8,"clampedBrightnessValue"],[120,34,26,7],[120,37,27,33,"Math"],[120,41,27,37],[120,42,27,38,"max"],[120,45,27,33],[120,46,27,42],[120,47,27,33],[120,49,27,45,"Math"],[120,53,27,49],[120,54,27,50,"min"],[120,57,27,45],[120,58,27,54,"brightnessValue"],[120,73,27,45],[120,75,27,71],[120,76,27,45],[120,77,27,33],[120,78,26,7],[122,0,26,7],[122,17,28,8,"isNaN"],[122,22,28,13],[122,23,28,14,"clampedBrightnessValue"],[122,45,28,13],[122,46,26,7],[123,0,26,7],[124,0,26,7],[125,0,26,7],[127,0,26,7],[127,18,29,14],[127,22,29,18,"TypeError"],[127,31,29,14],[127,84,29,78,"brightnessValue"],[127,99,29,14],[127,100,26,7],[129,0,26,7],[130,0,26,7],[130,18,31,8,"Platform"],[130,40,31,17,"OS"],[130,42,31,8],[130,47,31,24],[130,56,26,7],[131,0,26,7],[132,0,26,7],[133,0,26,7],[135,0,26,7],[136,0,26,7],[136,46,32,21,"setBrightnessAsync"],[136,64,32,39],[136,65,32,40,"clampedBrightnessValue"],[136,87,32,39],[136,88,26,7],[138,0,26,7],[139,0,26,7],[141,0,26,7],[142,0,26,7],[143,0,26,7],[143,46,34,17,"NativeModulesProxy"],[143,71,34,36,"ExpoBrightness"],[143,85,34,17],[143,86,34,51,"setSystemBrightnessAsync"],[143,110,34,17],[143,111,34,76,"clampedBrightnessValue"],[143,133,34,17],[143,134,26,7],[145,0,26,7],[146,0,26,7],[148,0,26,7],[149,0,26,7],[150,0,26,7],[151,0,26,7],[152,0,26,7],[153,0,26,7],[154,0,26,7],[156,0,36,7],[156,11,36,22,"useSystemBrightnessAsync"],[156,35,36,7],[157,0,36,7],[158,0,36,7],[159,0,36,7],[160,0,36,7],[161,0,36,7],[161,18,37,8,"Platform"],[161,40,37,17,"OS"],[161,42,37,8],[161,47,37,24],[161,56,36,7],[162,0,36,7],[163,0,36,7],[164,0,36,7],[166,0,36,7],[168,0,36,7],[169,0,36,7],[170,0,36,7],[170,46,40,17,"NativeModulesProxy"],[170,71,40,36,"ExpoBrightness"],[170,85,40,17],[170,86,40,51,"useSystemBrightnessAsync"],[170,110,40,17],[170,112,36,7],[172,0,36,7],[173,0,36,7],[175,0,36,7],[176,0,36,7],[177,0,36,7],[178,0,36,7],[179,0,36,7],[180,0,36,7],[181,0,36,7],[183,0,42,7],[183,11,42,22,"isUsingSystemBrightnessAsync"],[183,39,42,7],[184,0,42,7],[185,0,42,7],[186,0,42,7],[187,0,42,7],[188,0,42,7],[188,18,43,8,"Platform"],[188,40,43,17,"OS"],[188,42,43,8],[188,47,43,24],[188,56,42,7],[189,0,42,7],[190,0,42,7],[191,0,42,7],[193,0,42,7],[193,46,44,15],[193,51,42,7],[195,0,42,7],[196,0,42,7],[197,0,42,7],[197,46,46,17,"NativeModulesProxy"],[197,71,46,36,"ExpoBrightness"],[197,85,46,17],[197,86,46,51,"isUsingSystemBrightnessAsync"],[197,114,46,17],[197,116,42,7],[199,0,42,7],[200,0,42,7],[202,0,42,7],[203,0,42,7],[204,0,42,7],[205,0,42,7],[206,0,42,7],[207,0,42,7],[208,0,42,7],[210,0,48,7],[210,11,48,22,"getSystemBrightnessModeAsync"],[210,39,48,7],[211,0,48,7],[212,0,48,7],[213,0,48,7],[214,0,48,7],[215,0,48,7],[215,18,49,8,"Platform"],[215,40,49,17,"OS"],[215,42,49,8],[215,47,49,24],[215,56,48,7],[216,0,48,7],[217,0,48,7],[218,0,48,7],[220,0,48,7],[220,46,50,15,"BrightnessMode"],[220,60,50,29],[220,61,50,30,"UNKNOWN"],[220,68,48,7],[222,0,48,7],[223,0,48,7],[224,0,48,7],[224,46,52,17,"NativeModulesProxy"],[224,71,52,36,"ExpoBrightness"],[224,85,52,17],[224,86,52,51,"getSystemBrightnessModeAsync"],[224,114,52,17],[224,116,48,7],[226,0,48,7],[227,0,48,7],[229,0,48,7],[230,0,48,7],[231,0,48,7],[232,0,48,7],[233,0,48,7],[234,0,48,7],[235,0,48,7],[237,0,54,7],[237,11,54,22,"setSystemBrightnessModeAsync"],[237,39,54,7],[237,40,54,51,"brightnessMode"],[237,54,54,7],[238,0,54,7],[239,0,54,7],[240,0,54,7],[241,0,54,7],[242,0,54,7],[242,18,55,8,"Platform"],[242,40,55,17,"OS"],[242,42,55,8],[242,47,55,24],[242,56,55,8],[242,60,55,37,"brightnessMode"],[242,74,55,51],[242,79,55,56,"BrightnessMode"],[242,93,55,70],[242,94,55,71,"UNKNOWN"],[242,101,54,7],[243,0,54,7],[244,0,54,7],[245,0,54,7],[247,0,54,7],[249,0,54,7],[250,0,54,7],[251,0,54,7],[251,46,58,17,"NativeModulesProxy"],[251,71,58,36,"ExpoBrightness"],[251,85,58,17],[251,86,58,51,"setSystemBrightnessModeAsync"],[251,114,58,17],[251,115,58,80,"brightnessMode"],[251,129,58,17],[251,130,54,7],[253,0,54,7],[254,0,54,7],[256,0,54,7],[257,0,54,7],[258,0,54,7],[259,0,54,7],[260,0,54,7],[261,0,54,7],[262,0,54,7]]},"type":"js/module"}]}