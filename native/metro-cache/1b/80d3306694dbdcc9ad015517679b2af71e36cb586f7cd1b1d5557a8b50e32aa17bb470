{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./ExpoHaptics","data":{"isAsync":false}},{"name":"./Haptics.types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.notification = notification;\n  exports.impact = impact;\n  exports.selection = selection;\n  exports.notificationAsync = notificationAsync;\n  exports.impactAsync = impactAsync;\n  exports.selectionAsync = selectionAsync;\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function get() {\n      return _Haptics.NotificationFeedbackType;\n    }\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function get() {\n      return _Haptics.ImpactFeedbackStyle;\n    }\n  });\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@unimodules/core\");\n\n  var _ExpoHaptics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./ExpoHaptics\"));\n\n  var _Haptics = _$$_REQUIRE(_dependencyMap[4], \"./Haptics.types\");\n\n  function notification() {\n    var type,\n        _args = arguments;\n    return _regenerator.default.async(function notification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = _args.length > 0 && _args[0] !== undefined ? _args[0] : _Haptics.NotificationFeedbackType.Success;\n            console.warn('`Haptics.notification` is deprecated. Use `Haptics.notificationAsync` instead.');\n            _context.next = 4;\n            return _regenerator.default.awrap(notificationAsync(type));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function impact() {\n    var style,\n        _args2 = arguments;\n    return _regenerator.default.async(function impact$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            style = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : _Haptics.ImpactFeedbackStyle.Medium;\n            console.warn('`Haptics.impact` is deprecated. Use `Haptics.impactAsync` instead.');\n            _context2.next = 4;\n            return _regenerator.default.awrap(impactAsync(style));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function selection() {\n    return _regenerator.default.async(function selection$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.warn('`Haptics.selection` is deprecated. Use `Haptics.selectionAsync` instead.');\n            _context3.next = 3;\n            return _regenerator.default.awrap(selectionAsync());\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function notificationAsync() {\n    var type,\n        _args4 = arguments;\n    return _regenerator.default.async(function notificationAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            type = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : _Haptics.NotificationFeedbackType.Success;\n\n            if (_ExpoHaptics.default.notificationAsync) {\n              _context4.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Haptics', 'notificationAsync');\n\n          case 3:\n            _context4.next = 5;\n            return _regenerator.default.awrap(_ExpoHaptics.default.notificationAsync(type));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function impactAsync() {\n    var style,\n        _args5 = arguments;\n    return _regenerator.default.async(function impactAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            style = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : _Haptics.ImpactFeedbackStyle.Medium;\n\n            if (_ExpoHaptics.default.impactAsync) {\n              _context5.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Haptic', 'impactAsync');\n\n          case 3:\n            _context5.next = 5;\n            return _regenerator.default.awrap(_ExpoHaptics.default.impactAsync(style));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function selectionAsync() {\n    return _regenerator.default.async(function selectionAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (_ExpoHaptics.default.selectionAsync) {\n              _context6.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Haptic', 'selectionAsync');\n\n          case 2:\n            _context6.next = 4;\n            return _regenerator.default.awrap(_ExpoHaptics.default.selectionAsync());\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n});","map":[[28,0,1,0],[30,0,2,0],[32,0,3,0],[34,0,4,7],[34,11,4,22,"notification"],[34,23,4,7],[35,0,4,7],[36,0,4,7],[37,0,4,7],[38,0,4,7],[39,0,4,7],[40,0,4,7],[41,0,4,35,"type"],[41,12,4,35,"type"],[41,16,4,7],[41,75,4,42,"NotificationFeedbackType"],[41,109,4,67,"Success"],[41,116,4,7],[42,0,5,4,"console"],[42,12,5,4,"console"],[42,19,5,11],[42,20,5,12,"warn"],[42,24,5,4],[42,25,5,17],[42,105,5,4],[43,0,4,7],[44,0,4,7],[44,46,6,10,"notificationAsync"],[44,63,6,27],[44,64,6,28,"type"],[44,68,6,27],[44,69,4,7],[46,0,4,7],[47,0,4,7],[48,0,4,7],[49,0,4,7],[50,0,4,7],[51,0,4,7],[52,0,4,7],[54,0,8,7],[54,11,8,22,"impact"],[54,17,8,7],[55,0,8,7],[56,0,8,7],[57,0,8,7],[58,0,8,7],[59,0,8,7],[60,0,8,7],[61,0,8,29,"style"],[61,12,8,29,"style"],[61,17,8,7],[61,79,8,37,"ImpactFeedbackStyle"],[61,108,8,57,"Medium"],[61,114,8,7],[62,0,9,4,"console"],[62,12,9,4,"console"],[62,19,9,11],[62,20,9,12,"warn"],[62,24,9,4],[62,25,9,17],[62,93,9,4],[63,0,8,7],[64,0,8,7],[64,46,10,10,"impactAsync"],[64,57,10,21],[64,58,10,22,"style"],[64,63,10,21],[64,64,8,7],[66,0,8,7],[67,0,8,7],[68,0,8,7],[69,0,8,7],[70,0,8,7],[71,0,8,7],[72,0,8,7],[74,0,12,7],[74,11,12,22,"selection"],[74,20,12,7],[75,0,12,7],[76,0,12,7],[77,0,12,7],[78,0,12,7],[79,0,13,4,"console"],[79,12,13,4,"console"],[79,19,13,11],[79,20,13,12,"warn"],[79,24,13,4],[79,25,13,17],[79,99,13,4],[80,0,12,7],[81,0,12,7],[81,46,14,10,"selectionAsync"],[81,60,14,24],[81,62,12,7],[83,0,12,7],[84,0,12,7],[85,0,12,7],[86,0,12,7],[87,0,12,7],[88,0,12,7],[89,0,12,7],[91,0,19,7],[91,11,19,22,"notificationAsync"],[91,28,19,7],[92,0,19,7],[93,0,19,7],[94,0,19,7],[95,0,19,7],[96,0,19,7],[97,0,19,7],[98,0,19,40,"type"],[98,12,19,40,"type"],[98,16,19,7],[98,78,19,47,"NotificationFeedbackType"],[98,112,19,72,"Success"],[98,119,19,7],[100,0,19,7],[100,16,20,9,"ExpoHaptics"],[100,37,20,21,"notificationAsync"],[100,54,19,7],[101,0,19,7],[102,0,19,7],[103,0,19,7],[105,0,19,7],[105,18,21,14],[105,22,21,18,"UnavailabilityError"],[105,47,21,14],[105,48,21,38],[105,57,21,14],[105,59,21,49],[105,78,21,14],[105,79,19,7],[107,0,19,7],[108,0,19,7],[109,0,19,7],[109,46,23,10,"ExpoHaptics"],[109,67,23,22,"notificationAsync"],[109,84,23,10],[109,85,23,40,"type"],[109,89,23,10],[109,90,19,7],[111,0,19,7],[112,0,19,7],[113,0,19,7],[114,0,19,7],[115,0,19,7],[116,0,19,7],[117,0,19,7],[119,0,28,7],[119,11,28,22,"impactAsync"],[119,22,28,7],[120,0,28,7],[121,0,28,7],[122,0,28,7],[123,0,28,7],[124,0,28,7],[125,0,28,7],[126,0,28,34,"style"],[126,12,28,34,"style"],[126,17,28,7],[126,79,28,42,"ImpactFeedbackStyle"],[126,108,28,62,"Medium"],[126,114,28,7],[128,0,28,7],[128,16,29,9,"ExpoHaptics"],[128,37,29,21,"impactAsync"],[128,48,28,7],[129,0,28,7],[130,0,28,7],[131,0,28,7],[133,0,28,7],[133,18,30,14],[133,22,30,18,"UnavailabilityError"],[133,47,30,14],[133,48,30,38],[133,56,30,14],[133,58,30,48],[133,71,30,14],[133,72,28,7],[135,0,28,7],[136,0,28,7],[137,0,28,7],[137,46,32,10,"ExpoHaptics"],[137,67,32,22,"impactAsync"],[137,78,32,10],[137,79,32,34,"style"],[137,84,32,10],[137,85,28,7],[139,0,28,7],[140,0,28,7],[141,0,28,7],[142,0,28,7],[143,0,28,7],[144,0,28,7],[145,0,28,7],[147,0,37,7],[147,11,37,22,"selectionAsync"],[147,25,37,7],[148,0,37,7],[149,0,37,7],[150,0,37,7],[151,0,37,7],[152,0,37,7],[152,16,38,9,"ExpoHaptics"],[152,37,38,21,"selectionAsync"],[152,51,37,7],[153,0,37,7],[154,0,37,7],[155,0,37,7],[157,0,37,7],[157,18,39,14],[157,22,39,18,"UnavailabilityError"],[157,47,39,14],[157,48,39,38],[157,56,39,14],[157,58,39,48],[157,74,39,14],[157,75,37,7],[159,0,37,7],[160,0,37,7],[161,0,37,7],[161,46,41,10,"ExpoHaptics"],[161,67,41,22,"selectionAsync"],[161,81,41,10],[161,83,37,7],[163,0,37,7],[164,0,37,7],[165,0,37,7],[166,0,37,7],[167,0,37,7],[168,0,37,7],[169,0,37,7]]},"type":"js/module"}]}