{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoLocation","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.enableNetworkProviderAsync = enableNetworkProviderAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.setApiKey = setApiKey;\n  exports.watchPositionAsync = watchPositionAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.isBackgroundLocationAvailableAsync = isBackgroundLocationAvailableAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\n  exports._getCurrentWatchId = _getCurrentWatchId;\n  exports.EventEmitter = exports.GeofencingRegionState = exports.GeofencingEventType = exports.ActivityType = exports.Accuracy = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@unimodules/core\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n\n  var _ExpoLocation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ExpoLocation\"));\n\n  var LocationEventEmitter = new _core.EventEmitter(_ExpoLocation.default);\n  exports.EventEmitter = LocationEventEmitter;\n  ;\n  var LocationAccuracy;\n  exports.Accuracy = LocationAccuracy;\n\n  (function (LocationAccuracy) {\n    LocationAccuracy[LocationAccuracy[\"Lowest\"] = 1] = \"Lowest\";\n    LocationAccuracy[LocationAccuracy[\"Low\"] = 2] = \"Low\";\n    LocationAccuracy[LocationAccuracy[\"Balanced\"] = 3] = \"Balanced\";\n    LocationAccuracy[LocationAccuracy[\"High\"] = 4] = \"High\";\n    LocationAccuracy[LocationAccuracy[\"Highest\"] = 5] = \"Highest\";\n    LocationAccuracy[LocationAccuracy[\"BestForNavigation\"] = 6] = \"BestForNavigation\";\n  })(LocationAccuracy || (exports.Accuracy = LocationAccuracy = {}));\n\n  var LocationActivityType;\n  exports.ActivityType = LocationActivityType;\n\n  (function (LocationActivityType) {\n    LocationActivityType[LocationActivityType[\"Other\"] = 1] = \"Other\";\n    LocationActivityType[LocationActivityType[\"AutomotiveNavigation\"] = 2] = \"AutomotiveNavigation\";\n    LocationActivityType[LocationActivityType[\"Fitness\"] = 3] = \"Fitness\";\n    LocationActivityType[LocationActivityType[\"OtherNavigation\"] = 4] = \"OtherNavigation\";\n    LocationActivityType[LocationActivityType[\"Airborne\"] = 5] = \"Airborne\";\n  })(LocationActivityType || (exports.ActivityType = LocationActivityType = {}));\n\n  var GeofencingEventType;\n  exports.GeofencingEventType = GeofencingEventType;\n\n  (function (GeofencingEventType) {\n    GeofencingEventType[GeofencingEventType[\"Enter\"] = 1] = \"Enter\";\n    GeofencingEventType[GeofencingEventType[\"Exit\"] = 2] = \"Exit\";\n  })(GeofencingEventType || (exports.GeofencingEventType = GeofencingEventType = {}));\n\n  var GeofencingRegionState;\n  exports.GeofencingRegionState = GeofencingRegionState;\n\n  (function (GeofencingRegionState) {\n    GeofencingRegionState[GeofencingRegionState[\"Unknown\"] = 0] = \"Unknown\";\n    GeofencingRegionState[GeofencingRegionState[\"Inside\"] = 1] = \"Inside\";\n    GeofencingRegionState[GeofencingRegionState[\"Outside\"] = 2] = \"Outside\";\n  })(GeofencingRegionState || (exports.GeofencingRegionState = GeofencingRegionState = {}));\n\n  var nextWatchId = 0;\n  var headingId;\n\n  function _getNextWatchId() {\n    nextWatchId++;\n    return nextWatchId;\n  }\n\n  function _getCurrentWatchId() {\n    return nextWatchId;\n  }\n\n  var watchCallbacks = {};\n  var deviceEventSubscription;\n  var headingEventSub;\n  var googleApiKey;\n  var googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n  function getProviderStatusAsync() {\n    return _regenerator.default.async(function getProviderStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExpoLocation.default.getProviderStatusAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function enableNetworkProviderAsync() {\n    return _regenerator.default.async(function enableNetworkProviderAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_core.Platform.OS === 'android')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _ExpoLocation.default.enableNetworkProviderAsync());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function getCurrentPositionAsync() {\n    var options,\n        _args3 = arguments;\n    return _regenerator.default.async(function getCurrentPositionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n            return _context3.abrupt(\"return\", _ExpoLocation.default.getCurrentPositionAsync(options));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function getHeadingAsync() {\n    return _regenerator.default.async(function getHeadingAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", new Promise(function _callee(resolve, reject) {\n              var tries, headingSub, done, subscription, _tries;\n\n              return _regenerator.default.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.prev = 0;\n\n                      if (!headingEventSub) {\n                        _context4.next = 6;\n                        break;\n                      }\n\n                      tries = 0;\n                      headingSub = LocationEventEmitter.addListener('Expo.headingChanged', function (_ref) {\n                        var heading = _ref.heading;\n\n                        if (heading.accuracy > 1 || tries > 5) {\n                          resolve(heading);\n                          LocationEventEmitter.removeSubscription(headingSub);\n                        } else {\n                          tries += 1;\n                        }\n                      });\n                      _context4.next = 12;\n                      break;\n\n                    case 6:\n                      done = false;\n                      _tries = 0;\n                      _context4.next = 10;\n                      return _regenerator.default.awrap(watchHeadingAsync(function (heading) {\n                        if (!done) {\n                          if (heading.accuracy > 1 || _tries > 5) {\n                            subscription.remove();\n                            resolve(heading);\n                            done = true;\n                          } else {\n                            _tries += 1;\n                          }\n                        } else {\n                          subscription.remove();\n                        }\n                      }));\n\n                    case 10:\n                      subscription = _context4.sent;\n\n                      if (done) {\n                        subscription.remove();\n                      }\n\n                    case 12:\n                      _context4.next = 17;\n                      break;\n\n                    case 14:\n                      _context4.prev = 14;\n                      _context4.t0 = _context4[\"catch\"](0);\n                      reject(_context4.t0);\n\n                    case 17:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, [[0, 14]]);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function watchHeadingAsync(callback) {\n    return _regenerator.default.async(function watchHeadingAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (headingEventSub) {\n              _removeHeadingWatcher(headingId);\n            }\n\n            headingEventSub = LocationEventEmitter.addListener('Expo.headingChanged', function (_ref2) {\n              var watchId = _ref2.watchId,\n                  heading = _ref2.heading;\n              var callback = watchCallbacks[watchId];\n\n              if (callback) {\n                callback(heading);\n              } else {\n                _ExpoLocation.default.removeWatchAsync(watchId);\n              }\n            });\n            headingId = _getNextWatchId();\n            watchCallbacks[headingId] = callback;\n            _context6.next = 6;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchDeviceHeading(headingId));\n\n          case 6:\n            return _context6.abrupt(\"return\", {\n              remove: function remove() {\n                _removeHeadingWatcher(headingId);\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n\n  function _removeHeadingWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    delete watchCallbacks[watchId];\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    if (headingEventSub) {\n      LocationEventEmitter.removeSubscription(headingEventSub);\n      headingEventSub = null;\n    }\n  }\n\n  function _maybeInitializeEmitterSubscription() {\n    if (!deviceEventSubscription) {\n      deviceEventSubscription = LocationEventEmitter.addListener('Expo.locationChanged', function (_ref3) {\n        var watchId = _ref3.watchId,\n            location = _ref3.location;\n        var callback = watchCallbacks[watchId];\n\n        if (callback) {\n          callback(location);\n        } else {\n          _ExpoLocation.default.removeWatchAsync(watchId);\n        }\n      });\n    }\n  }\n\n  function geocodeAsync(address) {\n    return _regenerator.default.async(function geocodeAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", _ExpoLocation.default.geocodeAsync(address).catch(function (error) {\n              var platformUsesGoogleMaps = _core.Platform.OS === 'android' || _core.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleGeocodeAsync(address);\n              }\n\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }\n\n  function reverseGeocodeAsync(location) {\n    return _regenerator.default.async(function reverseGeocodeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if (!(typeof location.latitude !== 'number' || typeof location.longitude !== 'number')) {\n              _context8.next = 2;\n              break;\n            }\n\n            throw new TypeError('Location should be an object with number properties `latitude` and `longitude`.');\n\n          case 2:\n            return _context8.abrupt(\"return\", _ExpoLocation.default.reverseGeocodeAsync(location).catch(function (error) {\n              var platformUsesGoogleMaps = _core.Platform.OS === 'android' || _core.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleReverseGeocodeAsync(location);\n              }\n\n              throw error;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  }\n\n  function setApiKey(apiKey) {\n    googleApiKey = apiKey;\n  }\n\n  function _googleGeocodeAsync(address) {\n    var result, resultObject, status;\n    return _regenerator.default.async(function _googleGeocodeAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&address=\" + encodeURI(address)));\n\n          case 2:\n            result = _context9.sent;\n            _context9.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context9.sent;\n            status = resultObject.status;\n\n            if (!(status === 'ZERO_RESULTS')) {\n              _context9.next = 11;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", []);\n\n          case 11:\n            if (!(status !== 'OK')) {\n              _context9.next = 13;\n              break;\n            }\n\n            throw new Error(\"An error occurred during geocoding. \" + status);\n\n          case 13:\n            return _context9.abrupt(\"return\", resultObject.results.map(function (result) {\n              var location = result.geometry.location;\n              return {\n                latitude: location.lat,\n                longitude: location.lng\n              };\n            }));\n\n          case 14:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    });\n  }\n\n  function _googleReverseGeocodeAsync(options) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleReverseGeocodeAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&latlng=\" + options.latitude + \",\" + options.longitude));\n\n          case 2:\n            result = _context10.sent;\n            _context10.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context10.sent;\n\n            if (!(resultObject.status !== 'OK')) {\n              _context10.next = 8;\n              break;\n            }\n\n            throw new Error('An error occurred during geocoding.');\n\n          case 8:\n            return _context10.abrupt(\"return\", resultObject.results.map(function (result) {\n              var address = {};\n              result.address_components.forEach(function (component) {\n                if (component.types.includes('locality')) {\n                  address.city = component.long_name;\n                } else if (component.types.includes('street_address')) {\n                  address.street = component.long_name;\n                } else if (component.types.includes('administrative_area_level_1')) {\n                  address.region = component.long_name;\n                } else if (component.types.includes('country')) {\n                  address.country = component.long_name;\n                } else if (component.types.includes('postal_code')) {\n                  address.postalCode = component.long_name;\n                } else if (component.types.includes('point_of_interest')) {\n                  address.name = component.long_name;\n                }\n              });\n              return address;\n            }));\n\n          case 9:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    });\n  }\n\n  function watchPosition(success, error, options) {\n    _maybeInitializeEmitterSubscription();\n\n    var watchId = _getNextWatchId();\n\n    watchCallbacks[watchId] = success;\n\n    _ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(function (err) {\n      _removeWatcher(watchId);\n\n      error({\n        watchId: watchId,\n        message: err.message,\n        code: err.code\n      });\n    });\n\n    return watchId;\n  }\n\n  function watchPositionAsync(options, callback) {\n    var watchId;\n    return _regenerator.default.async(function watchPositionAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _maybeInitializeEmitterSubscription();\n\n            watchId = _getNextWatchId();\n            watchCallbacks[watchId] = callback;\n            _context11.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchPositionImplAsync(watchId, options));\n\n          case 5:\n            return _context11.abrupt(\"return\", {\n              remove: function remove() {\n                _removeWatcher(watchId);\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    });\n  }\n\n  function clearWatch(watchId) {\n    _removeWatcher(watchId);\n  }\n\n  function _removeWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    delete watchCallbacks[watchId];\n\n    if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n      LocationEventEmitter.removeSubscription(deviceEventSubscription);\n      deviceEventSubscription = null;\n    }\n  }\n\n  function getCurrentPosition(success) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _invariant.default)(typeof success === 'function', 'Must provide a valid success callback.');\n    (0, _invariant.default)(typeof options === 'object', 'options must be an object.');\n\n    _getCurrentPositionAsyncWrapper(success, error, options);\n  }\n\n  function _getCurrentPositionAsyncWrapper(success, error, options) {\n    var _result;\n\n    return _regenerator.default.async(function _getCurrentPositionAsyncWrapper$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 3:\n            _context12.next = 5;\n            return _regenerator.default.awrap(getCurrentPositionAsync(options));\n\n          case 5:\n            _result = _context12.sent;\n            success(_result);\n            _context12.next = 12;\n            break;\n\n          case 9:\n            _context12.prev = 9;\n            _context12.t0 = _context12[\"catch\"](0);\n            error(_context12.t0);\n\n          case 12:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 2:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    });\n  }\n\n  function hasServicesEnabledAsync() {\n    return _regenerator.default.async(function hasServicesEnabledAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.hasServicesEnabledAsync());\n\n          case 2:\n            return _context14.abrupt(\"return\", _context14.sent);\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    });\n  }\n\n  function _validateTaskName(taskName) {\n    (0, _invariant.default)(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n  }\n\n  function isBackgroundLocationAvailableAsync() {\n    var providerStatus;\n    return _regenerator.default.async(function isBackgroundLocationAvailableAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return _regenerator.default.awrap(getProviderStatusAsync());\n\n          case 2:\n            providerStatus = _context15.sent;\n            return _context15.abrupt(\"return\", providerStatus.backgroundModeEnabled);\n\n          case 4:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    });\n  }\n\n  function startLocationUpdatesAsync(taskName) {\n    var options,\n        _args16 = arguments;\n    return _regenerator.default.async(function startLocationUpdatesAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            options = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {\n              accuracy: LocationAccuracy.Balanced\n            };\n\n            _validateTaskName(taskName);\n\n            _context16.next = 4;\n            return _regenerator.default.awrap(_ExpoLocation.default.startLocationUpdatesAsync(taskName, options));\n\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    });\n  }\n\n  function stopLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function stopLocationUpdatesAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context17.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopLocationUpdatesAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    });\n  }\n\n  function hasStartedLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function hasStartedLocationUpdatesAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context18.abrupt(\"return\", _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    });\n  }\n\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n\n    for (var _iterator = regions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref4;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref4 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref4 = _i.value;\n      }\n\n      var _region = _ref4;\n\n      if (typeof _region.latitude !== 'number') {\n        throw new TypeError(\"Region's latitude must be a number. Got '\" + _region.latitude + \"' instead.\");\n      }\n\n      if (typeof _region.longitude !== 'number') {\n        throw new TypeError(\"Region's longitude must be a number. Got '\" + _region.longitude + \"' instead.\");\n      }\n\n      if (typeof _region.radius !== 'number') {\n        throw new TypeError(\"Region's radius must be a number. Got '\" + _region.radius + \"' instead.\");\n      }\n    }\n  }\n\n  function startGeofencingAsync(taskName) {\n    var regions,\n        _args19 = arguments;\n    return _regenerator.default.async(function startGeofencingAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            regions = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : [];\n\n            _validateTaskName(taskName);\n\n            _validateRegions(regions);\n\n            _context19.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.startGeofencingAsync(taskName, {\n              regions: regions\n            }));\n\n          case 5:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    });\n  }\n\n  function stopGeofencingAsync(taskName) {\n    return _regenerator.default.async(function stopGeofencingAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context20.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopGeofencingAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    });\n  }\n\n  function hasStartedGeofencingAsync(taskName) {\n    return _regenerator.default.async(function hasStartedGeofencingAsync$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context21.abrupt(\"return\", _ExpoLocation.default.hasStartedGeofencingAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    });\n  }\n\n  function installWebGeolocationPolyfill() {\n    if (_core.Platform.OS !== 'web') {\n      window.navigator.geolocation = {\n        getCurrentPosition: getCurrentPosition,\n        watchPosition: watchPosition,\n        clearWatch: clearWatch,\n        stopObserving: function stopObserving() {}\n      };\n    }\n  }\n});","map":[[31,0,1,0],[33,0,2,0],[35,0,3,0],[37,0,4,0],[37,6,4,6,"LocationEventEmitter"],[37,26,4,26],[37,29,4,29],[37,33,4,33,"EventEmitter"],[37,51,4,29],[37,52,4,46,"ExpoLocation"],[37,73,4,29],[37,74,4,0],[39,0,5,0],[40,0,6,0],[40,6,6,4,"LocationAccuracy"],[40,22,6,0],[43,0,7,0],[43,3,7,1],[43,13,7,11,"LocationAccuracy"],[43,29,7,1],[43,31,7,29],[44,0,8,4,"LocationAccuracy"],[44,4,8,4,"LocationAccuracy"],[44,20,8,20],[44,21,8,21,"LocationAccuracy"],[44,37,8,37],[44,38,8,38],[44,46,8,37],[44,47,8,21],[44,50,8,50],[44,51,8,20],[44,52,8,4],[44,55,8,55],[44,63,8,4],[45,0,9,4,"LocationAccuracy"],[45,4,9,4,"LocationAccuracy"],[45,20,9,20],[45,21,9,21,"LocationAccuracy"],[45,37,9,37],[45,38,9,38],[45,43,9,37],[45,44,9,21],[45,47,9,47],[45,48,9,20],[45,49,9,4],[45,52,9,52],[45,57,9,4],[46,0,10,4,"LocationAccuracy"],[46,4,10,4,"LocationAccuracy"],[46,20,10,20],[46,21,10,21,"LocationAccuracy"],[46,37,10,37],[46,38,10,38],[46,48,10,37],[46,49,10,21],[46,52,10,52],[46,53,10,20],[46,54,10,4],[46,57,10,57],[46,67,10,4],[47,0,11,4,"LocationAccuracy"],[47,4,11,4,"LocationAccuracy"],[47,20,11,20],[47,21,11,21,"LocationAccuracy"],[47,37,11,37],[47,38,11,38],[47,44,11,37],[47,45,11,21],[47,48,11,48],[47,49,11,20],[47,50,11,4],[47,53,11,53],[47,59,11,4],[48,0,12,4,"LocationAccuracy"],[48,4,12,4,"LocationAccuracy"],[48,20,12,20],[48,21,12,21,"LocationAccuracy"],[48,37,12,37],[48,38,12,38],[48,47,12,37],[48,48,12,21],[48,51,12,51],[48,52,12,20],[48,53,12,4],[48,56,12,56],[48,65,12,4],[49,0,13,4,"LocationAccuracy"],[49,4,13,4,"LocationAccuracy"],[49,20,13,20],[49,21,13,21,"LocationAccuracy"],[49,37,13,37],[49,38,13,38],[49,57,13,37],[49,58,13,21],[49,61,13,61],[49,62,13,20],[49,63,13,4],[49,66,13,66],[49,85,13,4],[50,0,14,1],[50,3,7,0],[50,5,14,3,"LocationAccuracy"],[50,21,14,19],[50,45,14,24,"LocationAccuracy"],[50,61,14,40],[50,64,14,43],[50,66,14,19],[50,67,7,0],[52,0,15,0],[52,6,15,4,"LocationActivityType"],[52,26,15,0],[55,0,16,0],[55,3,16,1],[55,13,16,11,"LocationActivityType"],[55,33,16,1],[55,35,16,33],[56,0,17,4,"LocationActivityType"],[56,4,17,4,"LocationActivityType"],[56,24,17,24],[56,25,17,25,"LocationActivityType"],[56,45,17,45],[56,46,17,46],[56,53,17,45],[56,54,17,25],[56,57,17,57],[56,58,17,24],[56,59,17,4],[56,62,17,62],[56,69,17,4],[57,0,18,4,"LocationActivityType"],[57,4,18,4,"LocationActivityType"],[57,24,18,24],[57,25,18,25,"LocationActivityType"],[57,45,18,45],[57,46,18,46],[57,68,18,45],[57,69,18,25],[57,72,18,72],[57,73,18,24],[57,74,18,4],[57,77,18,77],[57,99,18,4],[58,0,19,4,"LocationActivityType"],[58,4,19,4,"LocationActivityType"],[58,24,19,24],[58,25,19,25,"LocationActivityType"],[58,45,19,45],[58,46,19,46],[58,55,19,45],[58,56,19,25],[58,59,19,59],[58,60,19,24],[58,61,19,4],[58,64,19,64],[58,73,19,4],[59,0,20,4,"LocationActivityType"],[59,4,20,4,"LocationActivityType"],[59,24,20,24],[59,25,20,25,"LocationActivityType"],[59,45,20,45],[59,46,20,46],[59,63,20,45],[59,64,20,25],[59,67,20,67],[59,68,20,24],[59,69,20,4],[59,72,20,72],[59,89,20,4],[60,0,21,4,"LocationActivityType"],[60,4,21,4,"LocationActivityType"],[60,24,21,24],[60,25,21,25,"LocationActivityType"],[60,45,21,45],[60,46,21,46],[60,56,21,45],[60,57,21,25],[60,60,21,60],[60,61,21,24],[60,62,21,4],[60,65,21,65],[60,75,21,4],[61,0,22,1],[61,3,16,0],[61,5,22,3,"LocationActivityType"],[61,25,22,23],[61,53,22,28,"LocationActivityType"],[61,73,22,48],[61,76,22,51],[61,78,22,23],[61,79,16,0],[63,0,24,7],[63,6,24,11,"GeofencingEventType"],[63,25,24,7],[66,0,25,0],[66,3,25,1],[66,13,25,11,"GeofencingEventType"],[66,32,25,1],[66,34,25,32],[67,0,26,4,"GeofencingEventType"],[67,4,26,4,"GeofencingEventType"],[67,23,26,23],[67,24,26,24,"GeofencingEventType"],[67,43,26,43],[67,44,26,44],[67,51,26,43],[67,52,26,24],[67,55,26,55],[67,56,26,23],[67,57,26,4],[67,60,26,60],[67,67,26,4],[68,0,27,4,"GeofencingEventType"],[68,4,27,4,"GeofencingEventType"],[68,23,27,23],[68,24,27,24,"GeofencingEventType"],[68,43,27,43],[68,44,27,44],[68,50,27,43],[68,51,27,24],[68,54,27,54],[68,55,27,23],[68,56,27,4],[68,59,27,59],[68,65,27,4],[69,0,28,1],[69,3,25,0],[69,5,28,3,"GeofencingEventType"],[69,24,28,22],[69,59,28,27,"GeofencingEventType"],[69,78,28,46],[69,81,28,49],[69,83,28,22],[69,84,25,0],[71,0,29,7],[71,6,29,11,"GeofencingRegionState"],[71,27,29,7],[74,0,30,0],[74,3,30,1],[74,13,30,11,"GeofencingRegionState"],[74,34,30,1],[74,36,30,34],[75,0,31,4,"GeofencingRegionState"],[75,4,31,4,"GeofencingRegionState"],[75,25,31,25],[75,26,31,26,"GeofencingRegionState"],[75,47,31,47],[75,48,31,48],[75,57,31,47],[75,58,31,26],[75,61,31,61],[75,62,31,25],[75,63,31,4],[75,66,31,66],[75,75,31,4],[76,0,32,4,"GeofencingRegionState"],[76,4,32,4,"GeofencingRegionState"],[76,25,32,25],[76,26,32,26,"GeofencingRegionState"],[76,47,32,47],[76,48,32,48],[76,56,32,47],[76,57,32,26],[76,60,32,60],[76,61,32,25],[76,62,32,4],[76,65,32,65],[76,73,32,4],[77,0,33,4,"GeofencingRegionState"],[77,4,33,4,"GeofencingRegionState"],[77,25,33,25],[77,26,33,26,"GeofencingRegionState"],[77,47,33,47],[77,48,33,48],[77,57,33,47],[77,58,33,26],[77,61,33,61],[77,62,33,25],[77,63,33,4],[77,66,33,66],[77,75,33,4],[78,0,34,1],[78,3,30,0],[78,5,34,3,"GeofencingRegionState"],[78,26,34,24],[78,63,34,29,"GeofencingRegionState"],[78,84,34,50],[78,87,34,53],[78,89,34,24],[78,90,30,0],[80,0,35,0],[80,6,35,4,"nextWatchId"],[80,17,35,15],[80,20,35,18],[80,21,35,0],[81,0,36,0],[81,6,36,4,"headingId"],[81,15,36,0],[83,0,37,0],[83,11,37,9,"_getNextWatchId"],[83,26,37,0],[83,29,37,27],[84,0,38,4,"nextWatchId"],[84,4,38,4,"nextWatchId"],[84,15,38,15],[85,0,39,4],[85,11,39,11,"nextWatchId"],[85,22,39,4],[86,0,40,1],[88,0,41,0],[88,11,41,9,"_getCurrentWatchId"],[88,29,41,0],[88,32,41,30],[89,0,42,4],[89,11,42,11,"nextWatchId"],[89,22,42,4],[90,0,43,1],[92,0,44,0],[92,6,44,4,"watchCallbacks"],[92,20,44,18],[92,23,44,21],[92,25,44,0],[93,0,45,0],[93,6,45,4,"deviceEventSubscription"],[93,29,45,0],[94,0,46,0],[94,6,46,4,"headingEventSub"],[94,21,46,0],[95,0,47,0],[95,6,47,4,"googleApiKey"],[95,18,47,0],[96,0,48,0],[96,6,48,6,"googleApiUrl"],[96,18,48,18],[96,21,48,21],[96,72,48,0],[98,0,49,7],[98,11,49,22,"getProviderStatusAsync"],[98,33,49,7],[99,0,49,7],[100,0,49,7],[101,0,49,7],[102,0,49,7],[103,0,49,7],[103,45,50,11,"ExpoLocation"],[103,67,50,24,"getProviderStatusAsync"],[103,89,50,11],[103,91,49,7],[105,0,49,7],[106,0,49,7],[107,0,49,7],[108,0,49,7],[109,0,49,7],[110,0,49,7],[111,0,49,7],[113,0,52,7],[113,11,52,22,"enableNetworkProviderAsync"],[113,37,52,7],[114,0,52,7],[115,0,52,7],[116,0,52,7],[117,0,52,7],[118,0,52,7],[118,18,57,8,"Platform"],[118,33,57,17,"OS"],[118,35,57,8],[118,40,57,24],[118,49,52,7],[119,0,52,7],[120,0,52,7],[121,0,52,7],[123,0,52,7],[123,46,58,15,"ExpoLocation"],[123,68,58,28,"enableNetworkProviderAsync"],[123,94,58,15],[123,96,52,7],[125,0,52,7],[126,0,52,7],[127,0,52,7],[128,0,52,7],[129,0,52,7],[130,0,52,7],[131,0,52,7],[133,0,61,7],[133,11,61,22,"getCurrentPositionAsync"],[133,34,61,7],[134,0,61,7],[135,0,61,7],[136,0,61,7],[137,0,61,7],[138,0,61,7],[139,0,61,7],[140,0,61,46,"options"],[140,12,61,46,"options"],[140,19,61,7],[140,81,61,56],[140,83,61,7],[141,0,61,7],[141,46,62,11,"ExpoLocation"],[141,68,62,24,"getCurrentPositionAsync"],[141,91,62,11],[141,92,62,48,"options"],[141,99,62,11],[141,100,61,7],[143,0,61,7],[144,0,61,7],[145,0,61,7],[146,0,61,7],[147,0,61,7],[148,0,61,7],[149,0,61,7],[151,0,67,7],[151,11,67,22,"getHeadingAsync"],[151,26,67,7],[152,0,67,7],[153,0,67,7],[154,0,67,7],[155,0,67,7],[156,0,67,7],[156,46,68,11],[156,50,68,15,"Promise"],[156,57,68,11],[156,58,68,23],[156,75,68,30,"resolve"],[156,82,68,23],[156,84,68,39,"reject"],[156,90,68,23],[157,0,68,23],[159,0,68,23],[160,0,68,23],[161,0,68,23],[162,0,68,23],[163,0,68,23],[165,0,68,23],[165,27,71,16,"headingEventSub"],[165,42,68,23],[166,0,68,23],[167,0,68,23],[168,0,68,23],[170,0,72,20,"tries"],[170,22,72,20,"tries"],[170,27,68,23],[170,30,72,28],[170,31,68,23],[171,0,73,22,"headingSub"],[171,22,73,22,"headingSub"],[171,32,68,23],[171,35,73,35,"LocationEventEmitter"],[171,55,73,55],[171,56,73,56,"addListener"],[171,67,73,35],[171,68,73,68],[171,89,73,35],[171,91,73,91],[171,107,73,108],[172,0,73,108],[172,28,73,94,"heading"],[172,35,73,108],[172,43,73,94,"heading"],[172,50,73,108],[174,0,74,20],[174,28,74,24,"heading"],[174,35,74,31],[174,36,74,32,"accuracy"],[174,44,74,24],[174,47,74,43],[174,48,74,24],[174,52,74,48,"tries"],[174,57,74,53],[174,60,74,56],[174,61,74,20],[174,63,74,59],[175,0,75,24,"resolve"],[175,26,75,24,"resolve"],[175,33,75,31],[175,34,75,32,"heading"],[175,41,75,31],[175,42,75,24],[176,0,76,24,"LocationEventEmitter"],[176,26,76,24,"LocationEventEmitter"],[176,46,76,44],[176,47,76,45,"removeSubscription"],[176,65,76,24],[176,66,76,64,"headingSub"],[176,76,76,24],[177,0,77,21],[177,25,74,20],[177,31,78,25],[178,0,79,24,"tries"],[178,26,79,24,"tries"],[178,31,79,29],[178,35,79,33],[178,36,79,24],[179,0,80,21],[180,0,81,17],[180,23,73,35],[180,24,68,23],[181,0,68,23],[182,0,68,23],[184,0,68,23],[185,0,84,20,"done"],[185,22,84,20,"done"],[185,26,68,23],[185,29,84,27],[185,34,68,23],[186,0,86,20,"tries"],[186,22,86,20,"tries"],[186,28,68,23],[186,31,86,28],[186,32,68,23],[187,0,68,23],[188,0,68,23],[188,56,87,37,"watchHeadingAsync"],[188,73,87,54],[188,74,87,55],[188,84,87,56,"heading"],[188,91,87,55],[188,93,87,68],[189,0,88,20],[189,28,88,24],[189,29,88,25,"done"],[189,33,88,20],[189,35,88,31],[190,0,89,24],[190,30,89,28,"heading"],[190,37,89,35],[190,38,89,36,"accuracy"],[190,46,89,28],[190,49,89,47],[190,50,89,28],[190,54,89,52,"tries"],[190,60,89,57],[190,63,89,60],[190,64,89,24],[190,66,89,63],[191,0,90,28,"subscription"],[191,28,90,28,"subscription"],[191,40,90,40],[191,41,90,41,"remove"],[191,47,90,28],[192,0,91,28,"resolve"],[192,28,91,28,"resolve"],[192,35,91,35],[192,36,91,36,"heading"],[192,43,91,35],[192,44,91,28],[193,0,92,28,"done"],[193,28,92,28,"done"],[193,32,92,32],[193,35,92,35],[193,39,92,28],[194,0,93,25],[194,27,89,24],[194,33,94,29],[195,0,95,28,"tries"],[195,28,95,28,"tries"],[195,34,95,33],[195,38,95,37],[195,39,95,28],[196,0,96,25],[197,0,97,21],[197,25,88,20],[197,31,98,25],[198,0,99,24,"subscription"],[198,26,99,24,"subscription"],[198,38,99,36],[198,39,99,37,"remove"],[198,45,99,24],[199,0,100,21],[200,0,101,17],[200,23,87,54],[200,24,68,23],[202,0,68,23],[203,0,87,16,"subscription"],[203,22,87,16,"subscription"],[203,34,68,23],[205,0,102,16],[205,26,102,20,"done"],[205,30,102,16],[205,32,102,26],[206,0,103,20,"subscription"],[206,24,103,20,"subscription"],[206,36,103,32],[206,37,103,33,"remove"],[206,43,103,20],[207,0,104,17],[209,0,68,23],[210,0,68,23],[211,0,68,23],[213,0,68,23],[214,0,68,23],[215,0,68,23],[216,0,108,12,"reject"],[216,22,108,12,"reject"],[216,28,108,18],[216,42,108,12],[218,0,68,23],[219,0,68,23],[220,0,68,23],[221,0,68,23],[222,0,68,23],[223,0,68,23],[224,0,68,23],[224,13,68,11],[224,14,67,7],[226,0,67,7],[227,0,67,7],[228,0,67,7],[229,0,67,7],[230,0,67,7],[231,0,67,7],[232,0,67,7],[234,0,112,7],[234,11,112,22,"watchHeadingAsync"],[234,28,112,7],[234,29,112,40,"callback"],[234,37,112,7],[235,0,112,7],[236,0,112,7],[237,0,112,7],[238,0,112,7],[239,0,114,4],[239,16,114,8,"headingEventSub"],[239,31,114,4],[239,33,114,25],[240,0,115,8,"_removeHeadingWatcher"],[240,14,115,8,"_removeHeadingWatcher"],[240,35,115,29],[240,36,115,30,"headingId"],[240,45,115,29],[240,46,115,8],[241,0,116,5],[243,0,117,4,"headingEventSub"],[243,12,117,4,"headingEventSub"],[243,27,117,19],[243,30,117,22,"LocationEventEmitter"],[243,50,117,42],[243,51,117,43,"addListener"],[243,62,117,22],[243,63,117,55],[243,84,117,22],[243,86,117,78],[243,103,117,104],[244,0,117,104],[244,18,117,81,"watchId"],[244,25,117,104],[244,34,117,81,"watchId"],[244,41,117,104],[245,0,117,104],[245,18,117,90,"heading"],[245,25,117,104],[245,34,117,90,"heading"],[245,41,117,104],[246,0,118,8],[246,18,118,14,"callback"],[246,26,118,22],[246,29,118,25,"watchCallbacks"],[246,43,118,39],[246,44,118,40,"watchId"],[246,51,118,39],[246,52,118,8],[248,0,119,8],[248,18,119,12,"callback"],[248,26,119,8],[248,28,119,22],[249,0,120,12,"callback"],[249,16,120,12,"callback"],[249,24,120,20],[249,25,120,21,"heading"],[249,32,120,20],[249,33,120,12],[250,0,121,9],[250,15,119,8],[250,21,122,13],[251,0,123,12,"ExpoLocation"],[251,38,123,25,"removeWatchAsync"],[251,54,123,12],[251,55,123,42,"watchId"],[251,62,123,12],[252,0,124,9],[253,0,125,5],[253,13,117,22],[253,14,117,4],[254,0,126,4,"headingId"],[254,12,126,4,"headingId"],[254,21,126,13],[254,24,126,16,"_getNextWatchId"],[254,39,126,31],[254,41,126,4],[255,0,127,4,"watchCallbacks"],[255,12,127,4,"watchCallbacks"],[255,26,127,18],[255,27,127,19,"headingId"],[255,36,127,18],[255,37,127,4],[255,40,127,32,"callback"],[255,48,127,4],[256,0,112,7],[257,0,112,7],[257,46,128,10,"ExpoLocation"],[257,68,128,23,"watchDeviceHeading"],[257,86,128,10],[257,87,128,42,"headingId"],[257,96,128,10],[257,97,112,7],[259,0,112,7],[260,0,112,7],[260,46,129,11],[261,0,130,8,"remove"],[261,14,130,8,"remove"],[261,20,129,11],[261,40,130,17],[262,0,131,12,"_removeHeadingWatcher"],[262,16,131,12,"_removeHeadingWatcher"],[262,37,131,33],[262,38,131,34,"headingId"],[262,47,131,33],[262,48,131,12],[263,0,132,9],[264,0,129,11],[264,13,112,7],[266,0,112,7],[267,0,112,7],[268,0,112,7],[269,0,112,7],[270,0,112,7],[271,0,112,7],[272,0,112,7],[274,0,136,0],[274,11,136,9,"_removeHeadingWatcher"],[274,32,136,0],[274,33,136,31,"watchId"],[274,40,136,0],[274,42,136,40],[275,0,137,4],[275,8,137,8],[275,9,137,9,"watchCallbacks"],[275,23,137,23],[275,24,137,24,"watchId"],[275,31,137,23],[275,32,137,4],[275,34,137,34],[276,0,138,8],[277,0,139,5],[279,0,140,4],[279,11,140,11,"watchCallbacks"],[279,25,140,25],[279,26,140,26,"watchId"],[279,33,140,25],[279,34,140,4],[281,0,141,4,"ExpoLocation"],[281,26,141,17,"removeWatchAsync"],[281,42,141,4],[281,43,141,34,"watchId"],[281,50,141,4],[283,0,142,4],[283,8,142,8,"headingEventSub"],[283,23,142,4],[283,25,142,25],[284,0,143,8,"LocationEventEmitter"],[284,6,143,8,"LocationEventEmitter"],[284,26,143,28],[284,27,143,29,"removeSubscription"],[284,45,143,8],[284,46,143,48,"headingEventSub"],[284,61,143,8],[285,0,144,8,"headingEventSub"],[285,6,144,8,"headingEventSub"],[285,21,144,23],[285,24,144,26],[285,28,144,8],[286,0,145,5],[287,0,146,1],[289,0,148,0],[289,11,148,9,"_maybeInitializeEmitterSubscription"],[289,46,148,0],[289,49,148,47],[290,0,149,4],[290,8,149,8],[290,9,149,9,"deviceEventSubscription"],[290,32,149,4],[290,34,149,34],[291,0,150,8,"deviceEventSubscription"],[291,6,150,8,"deviceEventSubscription"],[291,29,150,31],[291,32,150,34,"LocationEventEmitter"],[291,52,150,54],[291,53,150,55,"addListener"],[291,64,150,34],[291,65,150,67],[291,87,150,34],[291,89,150,91],[291,106,150,118],[292,0,150,118],[292,12,150,94,"watchId"],[292,19,150,118],[292,28,150,94,"watchId"],[292,35,150,118],[293,0,150,118],[293,12,150,103,"location"],[293,20,150,118],[293,29,150,103,"location"],[293,37,150,118],[294,0,151,12],[294,12,151,18,"callback"],[294,20,151,26],[294,23,151,29,"watchCallbacks"],[294,37,151,43],[294,38,151,44,"watchId"],[294,45,151,43],[294,46,151,12],[296,0,152,12],[296,12,152,16,"callback"],[296,20,152,12],[296,22,152,26],[297,0,153,16,"callback"],[297,10,153,16,"callback"],[297,18,153,24],[297,19,153,25,"location"],[297,27,153,24],[297,28,153,16],[298,0,154,13],[298,9,152,12],[298,15,155,17],[299,0,156,16,"ExpoLocation"],[299,32,156,29,"removeWatchAsync"],[299,48,156,16],[299,49,156,46,"watchId"],[299,56,156,16],[300,0,157,13],[301,0,158,9],[301,7,150,34],[301,8,150,8],[302,0,159,5],[303,0,160,1],[305,0,161,7],[305,11,161,22,"geocodeAsync"],[305,23,161,7],[305,24,161,35,"address"],[305,31,161,7],[306,0,161,7],[307,0,161,7],[308,0,161,7],[309,0,161,7],[310,0,161,7],[310,46,162,11,"ExpoLocation"],[310,68,162,24,"geocodeAsync"],[310,80,162,11],[310,81,162,37,"address"],[310,88,162,11],[310,90,162,46,"catch"],[310,95,162,11],[310,96,162,52],[310,106,162,52,"error"],[310,111,162,57],[310,113,162,61],[311,0,163,8],[311,18,163,14,"platformUsesGoogleMaps"],[311,40,163,36],[311,43,163,39,"Platform"],[311,58,163,48,"OS"],[311,60,163,39],[311,65,163,55],[311,74,163,39],[311,78,163,68,"Platform"],[311,93,163,77,"OS"],[311,95,163,68],[311,100,163,84],[311,105,163,8],[313,0,164,8],[313,18,164,12,"platformUsesGoogleMaps"],[313,40,164,34],[313,44,164,38,"error"],[313,49,164,43],[313,50,164,44,"code"],[313,54,164,38],[313,59,164,53],[313,74,164,8],[313,76,164,70],[314,0,165,12],[314,20,165,16],[314,21,165,17,"googleApiKey"],[314,33,165,12],[314,35,165,31],[315,0,166,16],[315,24,166,22],[315,28,166,26,"Error"],[315,33,166,22],[315,34,166,32,"error"],[315,39,166,37],[315,40,166,38,"message"],[315,47,166,32],[315,50,166,48],[315,98,166,22],[315,99,166,16],[316,0,167,13],[318,0,168,12],[318,23,168,19,"_googleGeocodeAsync"],[318,42,168,38],[318,43,168,39,"address"],[318,50,168,38],[318,51,168,12],[319,0,169,9],[321,0,170,8],[321,20,170,14,"error"],[321,25,170,8],[322,0,171,5],[322,13,162,11],[322,14,161,7],[324,0,161,7],[325,0,161,7],[326,0,161,7],[327,0,161,7],[328,0,161,7],[329,0,161,7],[330,0,161,7],[332,0,173,7],[332,11,173,22,"reverseGeocodeAsync"],[332,30,173,7],[332,31,173,42,"location"],[332,39,173,7],[333,0,173,7],[334,0,173,7],[335,0,173,7],[336,0,173,7],[337,0,173,7],[337,18,174,8],[337,25,174,15,"location"],[337,33,174,23],[337,34,174,24,"latitude"],[337,42,174,8],[337,47,174,37],[337,55,174,8],[337,59,174,49],[337,66,174,56,"location"],[337,74,174,64],[337,75,174,65,"longitude"],[337,84,174,49],[337,89,174,79],[337,97,173,7],[338,0,173,7],[339,0,173,7],[340,0,173,7],[342,0,173,7],[342,18,175,14],[342,22,175,18,"TypeError"],[342,31,175,14],[342,32,175,28],[342,113,175,14],[342,114,173,7],[344,0,173,7],[345,0,173,7],[345,46,177,11,"ExpoLocation"],[345,68,177,24,"reverseGeocodeAsync"],[345,87,177,11],[345,88,177,44,"location"],[345,96,177,11],[345,98,177,54,"catch"],[345,103,177,11],[345,104,177,60],[345,114,177,60,"error"],[345,119,177,65],[345,121,177,69],[346,0,178,8],[346,18,178,14,"platformUsesGoogleMaps"],[346,40,178,36],[346,43,178,39,"Platform"],[346,58,178,48,"OS"],[346,60,178,39],[346,65,178,55],[346,74,178,39],[346,78,178,68,"Platform"],[346,93,178,77,"OS"],[346,95,178,68],[346,100,178,84],[346,105,178,8],[348,0,179,8],[348,18,179,12,"platformUsesGoogleMaps"],[348,40,179,34],[348,44,179,38,"error"],[348,49,179,43],[348,50,179,44,"code"],[348,54,179,38],[348,59,179,53],[348,74,179,8],[348,76,179,70],[349,0,180,12],[349,20,180,16],[349,21,180,17,"googleApiKey"],[349,33,180,12],[349,35,180,31],[350,0,181,16],[350,24,181,22],[350,28,181,26,"Error"],[350,33,181,22],[350,34,181,32,"error"],[350,39,181,37],[350,40,181,38,"message"],[350,47,181,32],[350,50,181,48],[350,98,181,22],[350,99,181,16],[351,0,182,13],[353,0,183,12],[353,23,183,19,"_googleReverseGeocodeAsync"],[353,49,183,45],[353,50,183,46,"location"],[353,58,183,45],[353,59,183,12],[354,0,184,9],[356,0,185,8],[356,20,185,14,"error"],[356,25,185,8],[357,0,186,5],[357,13,177,11],[357,14,173,7],[359,0,173,7],[360,0,173,7],[361,0,173,7],[362,0,173,7],[363,0,173,7],[364,0,173,7],[365,0,173,7],[367,0,188,7],[367,11,188,16,"setApiKey"],[367,20,188,7],[367,21,188,26,"apiKey"],[367,27,188,7],[367,29,188,34],[368,0,189,4,"googleApiKey"],[368,4,189,4,"googleApiKey"],[368,16,189,16],[368,19,189,19,"apiKey"],[368,25,189,4],[369,0,190,1],[371,0,191,0],[371,11,191,15,"_googleGeocodeAsync"],[371,30,191,0],[371,31,191,35,"address"],[371,38,191,0],[372,0,191,0],[373,0,191,0],[374,0,191,0],[375,0,191,0],[376,0,191,0],[377,0,191,0],[378,0,191,0],[378,46,192,25,"fetch"],[378,51,192,30],[378,52,192,34,"googleApiUrl"],[378,64,192,30],[378,77,192,54,"googleApiKey"],[378,89,192,30],[378,106,192,78,"encodeURI"],[378,115,192,87],[378,116,192,88,"address"],[378,123,192,87],[378,124,192,30],[378,125,191,0],[380,0,191,0],[381,0,192,10,"result"],[381,12,192,10,"result"],[381,18,191,0],[382,0,191,0],[383,0,191,0],[383,46,193,31,"result"],[383,52,193,37],[383,53,193,38,"json"],[383,57,193,31],[383,59,191,0],[385,0,191,0],[386,0,193,10,"resultObject"],[386,12,193,10,"resultObject"],[386,24,191,0],[387,0,194,12,"status"],[387,12,194,12,"status"],[387,18,191,0],[387,21,194,23,"resultObject"],[387,33,191,0],[387,34,194,12,"status"],[387,40,191,0],[389,0,191,0],[389,18,195,8,"status"],[389,24,195,14],[389,29,195,19],[389,43,191,0],[390,0,191,0],[391,0,191,0],[392,0,191,0],[394,0,191,0],[394,46,196,15],[394,48,191,0],[396,0,191,0],[397,0,191,0],[397,18,198,13,"status"],[397,24,198,19],[397,29,198,24],[397,33,191,0],[398,0,191,0],[399,0,191,0],[400,0,191,0],[402,0,191,0],[402,18,199,14],[402,22,199,18,"Error"],[402,27,199,14],[402,69,199,63,"status"],[402,75,199,14],[402,76,191,0],[404,0,191,0],[405,0,191,0],[405,46,201,11,"resultObject"],[405,58,201,23],[405,59,201,24,"results"],[405,66,201,11],[405,67,201,32,"map"],[405,70,201,11],[405,71,201,36],[405,81,201,36,"result"],[405,87,201,42],[405,89,201,46],[406,0,202,8],[406,18,202,12,"location"],[406,26,202,20],[406,29,202,23,"result"],[406,35,202,29],[406,36,202,30,"geometry"],[406,44,202,23],[406,45,202,39,"location"],[406,53,202,8],[407,0,204,8],[407,21,204,15],[408,0,205,12,"latitude"],[408,16,205,12,"latitude"],[408,24,205,20],[408,26,205,22,"location"],[408,34,205,30],[408,35,205,31,"lat"],[408,38,204,15],[409,0,206,12,"longitude"],[409,16,206,12,"longitude"],[409,25,206,21],[409,27,206,23,"location"],[409,35,206,31],[409,36,206,32,"lng"],[410,0,204,15],[410,15,204,8],[411,0,208,5],[411,13,201,11],[411,14,191,0],[413,0,191,0],[414,0,191,0],[415,0,191,0],[416,0,191,0],[417,0,191,0],[418,0,191,0],[419,0,191,0],[421,0,210,0],[421,11,210,15,"_googleReverseGeocodeAsync"],[421,37,210,0],[421,38,210,42,"options"],[421,45,210,0],[422,0,210,0],[423,0,210,0],[424,0,210,0],[425,0,210,0],[426,0,210,0],[427,0,210,0],[428,0,210,0],[428,46,211,25,"fetch"],[428,51,211,30],[428,52,211,34,"googleApiUrl"],[428,64,211,30],[428,77,211,54,"googleApiKey"],[428,89,211,30],[428,105,211,77,"options"],[428,112,211,84],[428,113,211,85,"latitude"],[428,121,211,30],[428,130,211,97,"options"],[428,137,211,104],[428,138,211,105,"longitude"],[428,147,211,30],[428,148,210,0],[430,0,210,0],[431,0,211,10,"result"],[431,12,211,10,"result"],[431,18,210,0],[432,0,210,0],[433,0,210,0],[433,46,212,31,"result"],[433,52,212,37],[433,53,212,38,"json"],[433,57,212,31],[433,59,210,0],[435,0,210,0],[436,0,212,10,"resultObject"],[436,12,212,10,"resultObject"],[436,24,210,0],[438,0,210,0],[438,18,213,8,"resultObject"],[438,30,213,20],[438,31,213,21,"status"],[438,37,213,8],[438,42,213,32],[438,46,210,0],[439,0,210,0],[440,0,210,0],[441,0,210,0],[443,0,210,0],[443,18,214,14],[443,22,214,18,"Error"],[443,27,214,14],[443,28,214,24],[443,65,214,14],[443,66,210,0],[445,0,210,0],[446,0,210,0],[446,47,216,11,"resultObject"],[446,59,216,23],[446,60,216,24,"results"],[446,67,216,11],[446,68,216,32,"map"],[446,71,216,11],[446,72,216,36],[446,82,216,36,"result"],[446,88,216,42],[446,90,216,46],[447,0,217,8],[447,18,217,14,"address"],[447,25,217,21],[447,28,217,24],[447,30,217,8],[448,0,218,8,"result"],[448,14,218,8,"result"],[448,20,218,14],[448,21,218,15,"address_components"],[448,39,218,8],[448,40,218,34,"forEach"],[448,47,218,8],[448,48,218,42],[448,58,218,42,"component"],[448,67,218,51],[448,69,218,55],[449,0,219,12],[449,20,219,16,"component"],[449,29,219,25],[449,30,219,26,"types"],[449,35,219,16],[449,36,219,32,"includes"],[449,44,219,16],[449,45,219,41],[449,55,219,16],[449,56,219,12],[449,58,219,54],[450,0,220,16,"address"],[450,18,220,16,"address"],[450,25,220,23],[450,26,220,24,"city"],[450,30,220,16],[450,33,220,31,"component"],[450,42,220,40],[450,43,220,41,"long_name"],[450,52,220,16],[451,0,221,13],[451,17,219,12],[451,23,222,17],[451,27,222,21,"component"],[451,36,222,30],[451,37,222,31,"types"],[451,42,222,21],[451,43,222,37,"includes"],[451,51,222,21],[451,52,222,46],[451,68,222,21],[451,69,222,17],[451,71,222,65],[452,0,223,16,"address"],[452,18,223,16,"address"],[452,25,223,23],[452,26,223,24,"street"],[452,32,223,16],[452,35,223,33,"component"],[452,44,223,42],[452,45,223,43,"long_name"],[452,54,223,16],[453,0,224,13],[453,17,222,17],[453,23,225,17],[453,27,225,21,"component"],[453,36,225,30],[453,37,225,31,"types"],[453,42,225,21],[453,43,225,37,"includes"],[453,51,225,21],[453,52,225,46],[453,81,225,21],[453,82,225,17],[453,84,225,78],[454,0,226,16,"address"],[454,18,226,16,"address"],[454,25,226,23],[454,26,226,24,"region"],[454,32,226,16],[454,35,226,33,"component"],[454,44,226,42],[454,45,226,43,"long_name"],[454,54,226,16],[455,0,227,13],[455,17,225,17],[455,23,228,17],[455,27,228,21,"component"],[455,36,228,30],[455,37,228,31,"types"],[455,42,228,21],[455,43,228,37,"includes"],[455,51,228,21],[455,52,228,46],[455,61,228,21],[455,62,228,17],[455,64,228,58],[456,0,229,16,"address"],[456,18,229,16,"address"],[456,25,229,23],[456,26,229,24,"country"],[456,33,229,16],[456,36,229,34,"component"],[456,45,229,43],[456,46,229,44,"long_name"],[456,55,229,16],[457,0,230,13],[457,17,228,17],[457,23,231,17],[457,27,231,21,"component"],[457,36,231,30],[457,37,231,31,"types"],[457,42,231,21],[457,43,231,37,"includes"],[457,51,231,21],[457,52,231,46],[457,65,231,21],[457,66,231,17],[457,68,231,62],[458,0,232,16,"address"],[458,18,232,16,"address"],[458,25,232,23],[458,26,232,24,"postalCode"],[458,36,232,16],[458,39,232,37,"component"],[458,48,232,46],[458,49,232,47,"long_name"],[458,58,232,16],[459,0,233,13],[459,17,231,17],[459,23,234,17],[459,27,234,21,"component"],[459,36,234,30],[459,37,234,31,"types"],[459,42,234,21],[459,43,234,37,"includes"],[459,51,234,21],[459,52,234,46],[459,71,234,21],[459,72,234,17],[459,74,234,68],[460,0,235,16,"address"],[460,18,235,16,"address"],[460,25,235,23],[460,26,235,24,"name"],[460,30,235,16],[460,33,235,31,"component"],[460,42,235,40],[460,43,235,41,"long_name"],[460,52,235,16],[461,0,236,13],[462,0,237,9],[462,15,218,8],[463,0,238,8],[463,21,238,15,"address"],[463,28,238,8],[464,0,239,5],[464,13,216,11],[464,14,210,0],[466,0,210,0],[467,0,210,0],[468,0,210,0],[469,0,210,0],[470,0,210,0],[471,0,210,0],[472,0,210,0],[474,0,242,0],[474,11,242,9,"watchPosition"],[474,24,242,0],[474,25,242,23,"success"],[474,32,242,0],[474,34,242,32,"error"],[474,39,242,0],[474,41,242,39,"options"],[474,48,242,0],[474,50,242,48],[475,0,243,4,"_maybeInitializeEmitterSubscription"],[475,4,243,4,"_maybeInitializeEmitterSubscription"],[475,39,243,39],[477,0,244,4],[477,8,244,10,"watchId"],[477,15,244,17],[477,18,244,20,"_getNextWatchId"],[477,33,244,35],[477,35,244,4],[479,0,245,4,"watchCallbacks"],[479,4,245,4,"watchCallbacks"],[479,18,245,18],[479,19,245,19,"watchId"],[479,26,245,18],[479,27,245,4],[479,30,245,30,"success"],[479,37,245,4],[481,0,246,4,"ExpoLocation"],[481,26,246,17,"watchPositionImplAsync"],[481,48,246,4],[481,49,246,40,"watchId"],[481,56,246,4],[481,58,246,49,"options"],[481,65,246,4],[481,67,246,58,"catch"],[481,72,246,4],[481,73,246,64],[481,83,246,64,"err"],[481,86,246,67],[481,88,246,71],[482,0,247,8,"_removeWatcher"],[482,6,247,8,"_removeWatcher"],[482,20,247,22],[482,21,247,23,"watchId"],[482,28,247,22],[482,29,247,8],[484,0,248,8,"error"],[484,6,248,8,"error"],[484,11,248,13],[484,12,248,14],[485,0,248,16,"watchId"],[485,8,248,16,"watchId"],[485,15,248,23],[485,17,248,16,"watchId"],[485,24,248,14],[486,0,248,25,"message"],[486,8,248,25,"message"],[486,15,248,32],[486,17,248,34,"err"],[486,20,248,37],[486,21,248,38,"message"],[486,28,248,14],[487,0,248,47,"code"],[487,8,248,47,"code"],[487,12,248,51],[487,14,248,53,"err"],[487,17,248,56],[487,18,248,57,"code"],[488,0,248,14],[488,7,248,13],[488,8,248,8],[489,0,249,5],[489,5,246,4],[491,0,250,4],[491,11,250,11,"watchId"],[491,18,250,4],[492,0,251,1],[494,0,252,7],[494,11,252,22,"watchPositionAsync"],[494,29,252,7],[494,30,252,41,"options"],[494,37,252,7],[494,39,252,50,"callback"],[494,47,252,7],[495,0,252,7],[496,0,252,7],[497,0,252,7],[498,0,252,7],[499,0,252,7],[500,0,253,4,"_maybeInitializeEmitterSubscription"],[500,12,253,4,"_maybeInitializeEmitterSubscription"],[500,47,253,39],[502,0,254,10,"watchId"],[502,12,254,10,"watchId"],[502,19,252,7],[502,22,254,20,"_getNextWatchId"],[502,37,254,35],[502,39,252,7],[503,0,255,4,"watchCallbacks"],[503,12,255,4,"watchCallbacks"],[503,26,255,18],[503,27,255,19,"watchId"],[503,34,255,18],[503,35,255,4],[503,38,255,30,"callback"],[503,46,255,4],[504,0,252,7],[505,0,252,7],[505,46,256,10,"ExpoLocation"],[505,68,256,23,"watchPositionImplAsync"],[505,90,256,10],[505,91,256,46,"watchId"],[505,98,256,10],[505,100,256,55,"options"],[505,107,256,10],[505,108,252,7],[507,0,252,7],[508,0,252,7],[508,47,257,11],[509,0,258,8,"remove"],[509,14,258,8,"remove"],[509,20,257,11],[509,40,258,17],[510,0,259,12,"_removeWatcher"],[510,16,259,12,"_removeWatcher"],[510,30,259,26],[510,31,259,27,"watchId"],[510,38,259,26],[510,39,259,12],[511,0,260,9],[512,0,257,11],[512,13,252,7],[514,0,252,7],[515,0,252,7],[516,0,252,7],[517,0,252,7],[518,0,252,7],[519,0,252,7],[520,0,252,7],[522,0,264,0],[522,11,264,9,"clearWatch"],[522,21,264,0],[522,22,264,20,"watchId"],[522,29,264,0],[522,31,264,29],[523,0,265,4,"_removeWatcher"],[523,4,265,4,"_removeWatcher"],[523,18,265,18],[523,19,265,19,"watchId"],[523,26,265,18],[523,27,265,4],[524,0,266,1],[526,0,267,0],[526,11,267,9,"_removeWatcher"],[526,25,267,0],[526,26,267,24,"watchId"],[526,33,267,0],[526,35,267,33],[527,0,269,4],[527,8,269,8],[527,9,269,9,"watchCallbacks"],[527,23,269,23],[527,24,269,24,"watchId"],[527,31,269,23],[527,32,269,4],[527,34,269,34],[528,0,270,8],[529,0,271,5],[531,0,272,4,"ExpoLocation"],[531,26,272,17,"removeWatchAsync"],[531,42,272,4],[531,43,272,34,"watchId"],[531,50,272,4],[533,0,273,4],[533,11,273,11,"watchCallbacks"],[533,25,273,25],[533,26,273,26,"watchId"],[533,33,273,25],[533,34,273,4],[535,0,274,4],[535,8,274,8,"Object"],[535,14,274,14],[535,15,274,15,"keys"],[535,19,274,8],[535,20,274,20,"watchCallbacks"],[535,34,274,8],[535,36,274,36,"length"],[535,42,274,8],[535,47,274,47],[535,48,274,8],[535,52,274,52,"deviceEventSubscription"],[535,75,274,4],[535,77,274,77],[536,0,275,8,"LocationEventEmitter"],[536,6,275,8,"LocationEventEmitter"],[536,26,275,28],[536,27,275,29,"removeSubscription"],[536,45,275,8],[536,46,275,48,"deviceEventSubscription"],[536,69,275,8],[537,0,276,8,"deviceEventSubscription"],[537,6,276,8,"deviceEventSubscription"],[537,29,276,31],[537,32,276,34],[537,36,276,8],[538,0,277,5],[539,0,278,1],[541,0,279,0],[541,11,279,9,"getCurrentPosition"],[541,29,279,0],[541,30,279,28,"success"],[541,37,279,0],[541,39,279,70],[542,0,279,70],[542,8,279,37,"error"],[542,13,279,70],[542,84,279,45],[542,96,279,51],[542,97,279,54],[542,98,279,70],[543,0,279,70],[543,8,279,56,"options"],[543,15,279,70],[543,86,279,66],[543,88,279,70],[544,0,280,4],[544,28,280,14],[544,35,280,21,"success"],[544,42,280,14],[544,47,280,33],[544,57,280,4],[544,59,280,45],[544,99,280,4],[545,0,281,4],[545,28,281,14],[545,35,281,21,"options"],[545,42,281,14],[545,47,281,33],[545,55,281,4],[545,57,281,43],[545,85,281,4],[547,0,282,4,"_getCurrentPositionAsyncWrapper"],[547,4,282,4,"_getCurrentPositionAsyncWrapper"],[547,35,282,35],[547,36,282,36,"success"],[547,43,282,35],[547,45,282,45,"error"],[547,50,282,35],[547,52,282,52,"options"],[547,59,282,35],[547,60,282,4],[548,0,283,1],[550,0,286,0],[550,11,286,15,"_getCurrentPositionAsyncWrapper"],[550,42,286,0],[550,43,286,47,"success"],[550,50,286,0],[550,52,286,56,"error"],[550,57,286,0],[550,59,286,63,"options"],[550,66,286,0],[551,0,286,0],[553,0,286,0],[554,0,286,0],[555,0,286,0],[556,0,286,0],[557,0,286,0],[558,0,286,0],[559,0,286,0],[559,46,288,14,"ExpoLocation"],[559,68,288,27,"requestPermissionsAsync"],[559,91,288,14],[559,93,286,0],[561,0,286,0],[562,0,286,0],[563,0,286,0],[563,46,289,29,"getCurrentPositionAsync"],[563,69,289,52],[563,70,289,53,"options"],[563,77,289,52],[563,78,286,0],[565,0,286,0],[566,0,289,14,"result"],[566,12,289,14,"result"],[566,19,286,0],[567,0,290,8,"success"],[567,12,290,8,"success"],[567,19,290,15],[567,20,290,16,"result"],[567,27,290,15],[567,28,290,8],[568,0,286,0],[569,0,286,0],[571,0,286,0],[572,0,286,0],[573,0,286,0],[574,0,293,8,"error"],[574,12,293,8,"error"],[574,17,293,13],[574,32,293,8],[576,0,286,0],[577,0,286,0],[578,0,286,0],[579,0,286,0],[580,0,286,0],[581,0,286,0],[582,0,286,0],[584,0,296,7],[584,11,296,22,"requestPermissionsAsync"],[584,34,296,7],[585,0,296,7],[586,0,296,7],[587,0,296,7],[588,0,296,7],[589,0,296,7],[590,0,296,7],[590,46,297,10,"ExpoLocation"],[590,68,297,23,"requestPermissionsAsync"],[590,91,297,10],[590,93,296,7],[592,0,296,7],[593,0,296,7],[594,0,296,7],[595,0,296,7],[596,0,296,7],[597,0,296,7],[598,0,296,7],[600,0,300,7],[600,11,300,22,"hasServicesEnabledAsync"],[600,34,300,7],[601,0,300,7],[602,0,300,7],[603,0,300,7],[604,0,300,7],[605,0,300,7],[606,0,300,7],[606,46,301,17,"ExpoLocation"],[606,68,301,30,"hasServicesEnabledAsync"],[606,91,301,17],[606,93,300,7],[608,0,300,7],[609,0,300,7],[611,0,300,7],[612,0,300,7],[613,0,300,7],[614,0,300,7],[615,0,300,7],[616,0,300,7],[617,0,300,7],[619,0,304,0],[619,11,304,9,"_validateTaskName"],[619,28,304,0],[619,29,304,27,"taskName"],[619,37,304,0],[619,39,304,37],[620,0,305,4],[620,28,305,14,"taskName"],[620,36,305,22],[620,40,305,26],[620,47,305,33,"taskName"],[620,55,305,26],[620,60,305,46],[620,68,305,4],[620,70,305,56],[620,110,305,4],[621,0,306,1],[623,0,307,7],[623,11,307,22,"isBackgroundLocationAvailableAsync"],[623,45,307,7],[624,0,307,7],[625,0,307,7],[626,0,307,7],[627,0,307,7],[628,0,307,7],[629,0,307,7],[630,0,307,7],[630,46,308,33,"getProviderStatusAsync"],[630,68,308,55],[630,70,307,7],[632,0,307,7],[633,0,308,10,"providerStatus"],[633,12,308,10,"providerStatus"],[633,26,307,7],[634,0,307,7],[634,47,309,11,"providerStatus"],[634,61,309,25],[634,62,309,26,"backgroundModeEnabled"],[634,83,307,7],[636,0,307,7],[637,0,307,7],[638,0,307,7],[639,0,307,7],[640,0,307,7],[641,0,307,7],[642,0,307,7],[644,0,311,7],[644,11,311,22,"startLocationUpdatesAsync"],[644,36,311,7],[644,37,311,48,"taskName"],[644,45,311,7],[645,0,311,7],[646,0,311,7],[647,0,311,7],[648,0,311,7],[649,0,311,7],[650,0,311,7],[651,0,311,58,"options"],[651,12,311,58,"options"],[651,19,311,7],[651,84,311,68],[652,0,311,70,"accuracy"],[652,14,311,70,"accuracy"],[652,22,311,78],[652,24,311,80,"LocationAccuracy"],[652,40,311,96],[652,41,311,97,"Balanced"],[653,0,311,68],[653,13,311,7],[655,0,312,4,"_validateTaskName"],[655,12,312,4,"_validateTaskName"],[655,29,312,21],[655,30,312,22,"taskName"],[655,38,312,21],[655,39,312,4],[657,0,311,7],[658,0,311,7],[658,46,313,10,"ExpoLocation"],[658,68,313,23,"startLocationUpdatesAsync"],[658,93,313,10],[658,94,313,49,"taskName"],[658,102,313,10],[658,104,313,59,"options"],[658,111,313,10],[658,112,311,7],[660,0,311,7],[661,0,311,7],[662,0,311,7],[663,0,311,7],[664,0,311,7],[665,0,311,7],[666,0,311,7],[668,0,315,7],[668,11,315,22,"stopLocationUpdatesAsync"],[668,35,315,7],[668,36,315,47,"taskName"],[668,44,315,7],[669,0,315,7],[670,0,315,7],[671,0,315,7],[672,0,315,7],[673,0,316,4,"_validateTaskName"],[673,12,316,4,"_validateTaskName"],[673,29,316,21],[673,30,316,22,"taskName"],[673,38,316,21],[673,39,316,4],[675,0,315,7],[676,0,315,7],[676,46,317,10,"ExpoLocation"],[676,68,317,23,"stopLocationUpdatesAsync"],[676,92,317,10],[676,93,317,48,"taskName"],[676,101,317,10],[676,102,315,7],[678,0,315,7],[679,0,315,7],[680,0,315,7],[681,0,315,7],[682,0,315,7],[683,0,315,7],[684,0,315,7],[686,0,319,7],[686,11,319,22,"hasStartedLocationUpdatesAsync"],[686,41,319,7],[686,42,319,53,"taskName"],[686,50,319,7],[687,0,319,7],[688,0,319,7],[689,0,319,7],[690,0,319,7],[691,0,320,4,"_validateTaskName"],[691,12,320,4,"_validateTaskName"],[691,29,320,21],[691,30,320,22,"taskName"],[691,38,320,21],[691,39,320,4],[693,0,319,7],[693,47,321,11,"ExpoLocation"],[693,69,321,24,"hasStartedLocationUpdatesAsync"],[693,99,321,11],[693,100,321,55,"taskName"],[693,108,321,11],[693,109,319,7],[695,0,319,7],[696,0,319,7],[697,0,319,7],[698,0,319,7],[699,0,319,7],[700,0,319,7],[701,0,319,7],[703,0,324,0],[703,11,324,9,"_validateRegions"],[703,27,324,0],[703,28,324,26,"regions"],[703,35,324,0],[703,37,324,35],[704,0,325,4],[704,8,325,8],[704,9,325,9,"regions"],[704,16,325,8],[704,20,325,20,"regions"],[704,27,325,27],[704,28,325,28,"length"],[704,34,325,20],[704,39,325,39],[704,40,325,4],[704,42,325,42],[705,0,326,8],[705,12,326,14],[705,16,326,18,"Error"],[705,21,326,14],[705,22,326,24],[705,123,326,14],[705,124,326,8],[706,0,327,5],[708,0,328,4],[708,25,328,25,"regions"],[708,32,328,4],[708,192,328,34],[709,0,328,34],[711,0,328,34],[712,0,328,34],[713,0,328,34],[714,0,328,34],[715,0,328,34],[716,0,328,34],[717,0,328,34],[718,0,328,34],[720,0,328,34],[720,10,328,15,"region"],[720,17,328,34],[722,0,329,8],[722,10,329,12],[722,17,329,19,"region"],[722,24,329,25],[722,25,329,26,"latitude"],[722,33,329,12],[722,38,329,39],[722,46,329,8],[722,48,329,49],[723,0,330,12],[723,14,330,18],[723,18,330,22,"TypeError"],[723,27,330,18],[723,74,330,76,"region"],[723,81,330,82],[723,82,330,83,"latitude"],[723,90,330,18],[723,106,330,12],[724,0,331,9],[726,0,332,8],[726,10,332,12],[726,17,332,19,"region"],[726,24,332,25],[726,25,332,26,"longitude"],[726,34,332,12],[726,39,332,40],[726,47,332,8],[726,49,332,50],[727,0,333,12],[727,14,333,18],[727,18,333,22,"TypeError"],[727,27,333,18],[727,75,333,77,"region"],[727,82,333,83],[727,83,333,84,"longitude"],[727,92,333,18],[727,108,333,12],[728,0,334,9],[730,0,335,8],[730,10,335,12],[730,17,335,19,"region"],[730,24,335,25],[730,25,335,26,"radius"],[730,31,335,12],[730,36,335,37],[730,44,335,8],[730,46,335,47],[731,0,336,12],[731,14,336,18],[731,18,336,22,"TypeError"],[731,27,336,18],[731,72,336,74,"region"],[731,79,336,80],[731,80,336,81,"radius"],[731,86,336,18],[731,102,336,12],[732,0,337,9],[733,0,338,5],[734,0,339,1],[736,0,340,7],[736,11,340,22,"startGeofencingAsync"],[736,31,340,7],[736,32,340,43,"taskName"],[736,40,340,7],[737,0,340,7],[738,0,340,7],[739,0,340,7],[740,0,340,7],[741,0,340,7],[742,0,340,7],[743,0,340,53,"regions"],[743,12,340,53,"regions"],[743,19,340,7],[743,84,340,63],[743,86,340,7],[745,0,341,4,"_validateTaskName"],[745,12,341,4,"_validateTaskName"],[745,29,341,21],[745,30,341,22,"taskName"],[745,38,341,21],[745,39,341,4],[747,0,342,4,"_validateRegions"],[747,12,342,4,"_validateRegions"],[747,28,342,20],[747,29,342,21,"regions"],[747,36,342,20],[747,37,342,4],[749,0,340,7],[750,0,340,7],[750,46,343,10,"ExpoLocation"],[750,68,343,23,"startGeofencingAsync"],[750,88,343,10],[750,89,343,44,"taskName"],[750,97,343,10],[750,99,343,54],[751,0,343,56,"regions"],[751,14,343,56,"regions"],[751,21,343,63],[751,23,343,56,"regions"],[752,0,343,54],[752,13,343,10],[752,14,340,7],[754,0,340,7],[755,0,340,7],[756,0,340,7],[757,0,340,7],[758,0,340,7],[759,0,340,7],[760,0,340,7],[762,0,345,7],[762,11,345,22,"stopGeofencingAsync"],[762,30,345,7],[762,31,345,42,"taskName"],[762,39,345,7],[763,0,345,7],[764,0,345,7],[765,0,345,7],[766,0,345,7],[767,0,346,4,"_validateTaskName"],[767,12,346,4,"_validateTaskName"],[767,29,346,21],[767,30,346,22,"taskName"],[767,38,346,21],[767,39,346,4],[769,0,345,7],[770,0,345,7],[770,46,347,10,"ExpoLocation"],[770,68,347,23,"stopGeofencingAsync"],[770,87,347,10],[770,88,347,43,"taskName"],[770,96,347,10],[770,97,345,7],[772,0,345,7],[773,0,345,7],[774,0,345,7],[775,0,345,7],[776,0,345,7],[777,0,345,7],[778,0,345,7],[780,0,349,7],[780,11,349,22,"hasStartedGeofencingAsync"],[780,36,349,7],[780,37,349,48,"taskName"],[780,45,349,7],[781,0,349,7],[782,0,349,7],[783,0,349,7],[784,0,349,7],[785,0,350,4,"_validateTaskName"],[785,12,350,4,"_validateTaskName"],[785,29,350,21],[785,30,350,22,"taskName"],[785,38,350,21],[785,39,350,4],[787,0,349,7],[787,47,351,11,"ExpoLocation"],[787,69,351,24,"hasStartedGeofencingAsync"],[787,94,351,11],[787,95,351,50,"taskName"],[787,103,351,11],[787,104,349,7],[789,0,349,7],[790,0,349,7],[791,0,349,7],[792,0,349,7],[793,0,349,7],[794,0,349,7],[795,0,349,7],[797,0,353,7],[797,11,353,16,"installWebGeolocationPolyfill"],[797,40,353,7],[797,43,353,48],[798,0,354,4],[798,8,354,8,"Platform"],[798,23,354,17,"OS"],[798,25,354,8],[798,30,354,24],[798,35,354,4],[798,37,354,31],[799,0,358,8,"window"],[799,6,358,8,"window"],[799,12,358,14],[799,13,358,15,"navigator"],[799,22,358,8],[799,23,358,25,"geolocation"],[799,34,358,8],[799,37,358,39],[800,0,359,12,"getCurrentPosition"],[800,8,359,12,"getCurrentPosition"],[800,26,359,30],[800,28,359,12,"getCurrentPosition"],[800,46,358,39],[801,0,360,12,"watchPosition"],[801,8,360,12,"watchPosition"],[801,21,360,25],[801,23,360,12,"watchPosition"],[801,36,358,39],[802,0,361,12,"clearWatch"],[802,8,361,12,"clearWatch"],[802,18,361,22],[802,20,361,12,"clearWatch"],[802,30,358,39],[803,0,364,12,"stopObserving"],[803,8,364,12,"stopObserving"],[803,21,364,25],[803,23,364,27],[803,48,364,33],[803,49,364,36],[804,0,358,39],[804,7,358,8],[805,0,366,5],[806,0,367,1]]},"type":"js/module"}]}