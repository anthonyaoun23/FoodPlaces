{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./ExpoFontLoader","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processFontFamily = processFontFamily;\n  exports.isLoaded = isLoaded;\n  exports.isLoading = isLoading;\n  exports.loadAsync = loadAsync;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[2], \"expo-asset\");\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[4], \"@unimodules/core\");\n\n  var _ExpoFontLoader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoFontLoader\"));\n\n  var isWeb = _core.Platform.OS === 'web';\n  var loaded = {};\n  var loadPromises = {};\n\n  function processFontFamily(name) {\n    if (typeof name !== 'string' || _expoConstants.default.systemFonts.includes(name) || name === 'System') {\n      return name;\n    }\n\n    if (name.includes(_expoConstants.default.sessionId)) {\n      return name;\n    }\n\n    if (!isLoaded(name)) {\n      if (__DEV__) {\n        if (isLoading(name)) {\n          console.error(\"You started loading the font \\\"\" + name + \"\\\", but used it before it finished loading.\\n\\n- You need to wait for Font.loadAsync to complete before using the font.\\n\\n- We recommend loading all fonts before rendering the app, and rendering only Expo.AppLoading while waiting for loading to complete.\");\n        } else {\n          console.error(\"fontFamily \\\"\" + name + \"\\\" is not a system font and has not been loaded through Font.loadAsync.\\n\\n- If you intended to use a system font, make sure you typed the name correctly and that it is supported by your device operating system.\\n\\n- If this is a custom font, be sure to load it with Font.loadAsync.\");\n        }\n      }\n\n      return 'System';\n    }\n\n    return \"ExpoFont-\" + _getNativeFontName(name);\n  }\n\n  function isLoaded(name) {\n    return loaded.hasOwnProperty(name);\n  }\n\n  function isLoading(name) {\n    return loadPromises.hasOwnProperty(name);\n  }\n\n  function loadAsync(nameOrMap, source) {\n    var fontMap, names, name, asset;\n    return _regenerator.default.async(function loadAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof nameOrMap === 'object')) {\n              _context2.next = 6;\n              break;\n            }\n\n            fontMap = nameOrMap;\n            names = Object.keys(fontMap);\n            _context2.next = 5;\n            return _regenerator.default.awrap(Promise.all(names.map(function (name) {\n              return loadAsync(name, fontMap[name]);\n            })));\n\n          case 5:\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            name = nameOrMap;\n\n            if (!loaded[name]) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!loadPromises[name]) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", loadPromises[name]);\n\n          case 11:\n            if (source) {\n              _context2.next = 13;\n              break;\n            }\n\n            throw new Error(\"No source from which to load font \\\"\" + name + \"\\\"\");\n\n          case 13:\n            asset = _getAssetForSource(source);\n\n            loadPromises[name] = function _callee() {\n              return _regenerator.default.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return _regenerator.default.awrap(_loadSingleFontAsync(name, asset));\n\n                    case 3:\n                      loaded[name] = true;\n\n                    case 4:\n                      _context.prev = 4;\n                      delete loadPromises[name];\n                      return _context.finish(4);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[0,, 4, 7]]);\n            }();\n\n            _context2.next = 17;\n            return _regenerator.default.awrap(loadPromises[name]);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function _getAssetForSource(source) {\n    if (source instanceof _expoAsset.Asset) {\n      return source;\n    }\n\n    if (!isWeb && typeof source === 'string') {\n      return _expoAsset.Asset.fromURI(source);\n    }\n\n    if (isWeb || typeof source === 'number') {\n      return _expoAsset.Asset.fromModule(source);\n    }\n\n    return source;\n  }\n\n  function _loadSingleFontAsync(name, asset) {\n    return _regenerator.default.async(function _loadSingleFontAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 2:\n            if (asset.downloaded) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new Error(\"Failed to download asset for font \\\"\" + name + \"\\\"\");\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(_ExpoFontLoader.default.loadAsync(_getNativeFontName(name), asset.localUri));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function _getNativeFontName(name) {\n    if (isWeb) {\n      return name;\n    }\n\n    return _expoConstants.default.sessionId + \"-\" + name;\n  }\n\n  if (module && module.exports) {\n    var wasImportWarningShown = false;\n    Object.defineProperty(exports, 'Font', {\n      get: function get() {\n        if (!wasImportWarningShown) {\n          console.warn(\"The syntax \\\"import { Font } from 'expo-font'\\\" is deprecated. Use \\\"import * as Font from 'expo-font'\\\" or import named exports instead. Support for the old syntax will be removed in SDK 33.\");\n          wasImportWarningShown = true;\n        }\n\n        return {\n          processFontFamily: processFontFamily,\n          isLoaded: isLoaded,\n          isLoading: isLoading,\n          loadAsync: loadAsync\n        };\n      }\n    });\n  }\n});","map":[[14,0,1,0],[16,0,2,0],[18,0,3,0],[20,0,4,0],[22,0,5,0],[22,6,5,6,"isWeb"],[22,11,5,11],[22,14,5,14,"Platform"],[22,29,5,23,"OS"],[22,31,5,14],[22,36,5,30],[22,41,5,0],[23,0,6,0],[23,6,6,6,"loaded"],[23,12,6,12],[23,15,6,15],[23,17,6,0],[24,0,7,0],[24,6,7,6,"loadPromises"],[24,18,7,18],[24,21,7,21],[24,23,7,0],[26,0,8,7],[26,11,8,16,"processFontFamily"],[26,28,8,7],[26,29,8,34,"name"],[26,33,8,7],[26,35,8,40],[27,0,9,4],[27,8,9,8],[27,15,9,15,"name"],[27,19,9,8],[27,24,9,24],[27,32,9,8],[27,36,9,36,"Constants"],[27,59,9,46,"systemFonts"],[27,70,9,36],[27,71,9,58,"includes"],[27,79,9,36],[27,80,9,67,"name"],[27,84,9,36],[27,85,9,8],[27,89,9,76,"name"],[27,93,9,80],[27,98,9,85],[27,106,9,4],[27,108,9,95],[28,0,10,8],[28,13,10,15,"name"],[28,17,10,8],[29,0,11,5],[31,0,12,4],[31,8,12,8,"name"],[31,12,12,12],[31,13,12,13,"includes"],[31,21,12,8],[31,22,12,22,"Constants"],[31,45,12,32,"sessionId"],[31,54,12,8],[31,55,12,4],[31,57,12,44],[32,0,13,8],[32,13,13,15,"name"],[32,17,13,8],[33,0,14,5],[35,0,15,4],[35,8,15,8],[35,9,15,9,"isLoaded"],[35,17,15,17],[35,18,15,18,"name"],[35,22,15,17],[35,23,15,4],[35,25,15,25],[36,0,16,8],[36,10,16,12,"__DEV__"],[36,17,16,8],[36,19,16,21],[37,0,17,12],[37,12,17,16,"isLoading"],[37,21,17,25],[37,22,17,26,"name"],[37,26,17,25],[37,27,17,12],[37,29,17,33],[38,0,18,16,"console"],[38,10,18,16,"console"],[38,17,18,23],[38,18,18,24,"error"],[38,23,18,16],[38,60,18,63,"name"],[38,64,18,16],[39,0,21,13],[39,9,17,12],[39,15,22,17],[40,0,23,16,"console"],[40,10,23,16,"console"],[40,17,23,23],[40,18,23,24,"error"],[40,23,23,16],[40,42,23,45,"name"],[40,46,23,16],[41,0,26,13],[42,0,27,9],[44,0,28,8],[44,13,28,15],[44,21,28,8],[45,0,29,5],[47,0,30,4],[47,25,30,23,"_getNativeFontName"],[47,43,30,41],[47,44,30,42,"name"],[47,48,30,41],[47,49,30,4],[48,0,31,1],[50,0,32,7],[50,11,32,16,"isLoaded"],[50,19,32,7],[50,20,32,25,"name"],[50,24,32,7],[50,26,32,31],[51,0,33,4],[51,11,33,11,"loaded"],[51,17,33,17],[51,18,33,18,"hasOwnProperty"],[51,32,33,11],[51,33,33,33,"name"],[51,37,33,11],[51,38,33,4],[52,0,34,1],[54,0,35,7],[54,11,35,16,"isLoading"],[54,20,35,7],[54,21,35,26,"name"],[54,25,35,7],[54,27,35,32],[55,0,36,4],[55,11,36,11,"loadPromises"],[55,23,36,23],[55,24,36,24,"hasOwnProperty"],[55,38,36,11],[55,39,36,39,"name"],[55,43,36,11],[55,44,36,4],[56,0,37,1],[58,0,38,7],[58,11,38,22,"loadAsync"],[58,20,38,7],[58,21,38,32,"nameOrMap"],[58,30,38,7],[58,32,38,43,"source"],[58,38,38,7],[59,0,38,7],[60,0,38,7],[61,0,38,7],[62,0,38,7],[63,0,38,7],[64,0,38,7],[64,18,39,8],[64,25,39,15,"nameOrMap"],[64,34,39,8],[64,39,39,29],[64,47,38,7],[65,0,38,7],[66,0,38,7],[67,0,38,7],[69,0,40,14,"fontMap"],[69,12,40,14,"fontMap"],[69,19,38,7],[69,22,40,24,"nameOrMap"],[69,31,38,7],[70,0,41,14,"names"],[70,12,41,14,"names"],[70,17,38,7],[70,20,41,22,"Object"],[70,26,41,28],[70,27,41,29,"keys"],[70,31,41,22],[70,32,41,34,"fontMap"],[70,39,41,22],[70,40,38,7],[71,0,38,7],[72,0,38,7],[72,46,42,14,"Promise"],[72,53,42,21],[72,54,42,22,"all"],[72,57,42,14],[72,58,42,26,"names"],[72,63,42,31],[72,64,42,32,"map"],[72,67,42,26],[72,68,42,36],[72,78,42,36,"name"],[72,82,42,40],[73,0,42,40],[73,21,42,44,"loadAsync"],[73,30,42,53],[73,31,42,54,"name"],[73,35,42,53],[73,37,42,60,"fontMap"],[73,44,42,67],[73,45,42,68,"name"],[73,49,42,67],[73,50,42,53],[73,51,42,40],[74,0,42,40],[74,13,42,26],[74,14,42,14],[74,15,38,7],[76,0,38,7],[77,0,38,7],[79,0,38,7],[80,0,45,10,"name"],[80,12,45,10,"name"],[80,16,38,7],[80,19,45,17,"nameOrMap"],[80,28,38,7],[82,0,38,7],[82,17,46,8,"loaded"],[82,23,46,14],[82,24,46,15,"name"],[82,28,46,14],[82,29,38,7],[83,0,38,7],[84,0,38,7],[85,0,38,7],[87,0,38,7],[89,0,38,7],[90,0,38,7],[90,17,49,8,"loadPromises"],[90,29,49,20],[90,30,49,21,"name"],[90,34,49,20],[90,35,38,7],[91,0,38,7],[92,0,38,7],[93,0,38,7],[95,0,38,7],[95,46,50,15,"loadPromises"],[95,58,50,27],[95,59,50,28,"name"],[95,63,50,27],[95,64,38,7],[97,0,38,7],[98,0,38,7],[98,16,56,9,"source"],[98,22,38,7],[99,0,38,7],[100,0,38,7],[101,0,38,7],[103,0,38,7],[103,18,57,14],[103,22,57,18,"Error"],[103,27,57,14],[103,69,57,62,"name"],[103,73,57,14],[103,81,38,7],[105,0,38,7],[106,0,59,10,"asset"],[106,12,59,10,"asset"],[106,17,38,7],[106,20,59,18,"_getAssetForSource"],[106,38,59,36],[106,39,59,37,"source"],[106,45,59,36],[106,46,38,7],[108,0,60,4,"loadPromises"],[108,12,60,4,"loadPromises"],[108,24,60,16],[108,25,60,17,"name"],[108,29,60,16],[108,30,60,4],[108,33,60,26],[109,0,60,26],[110,0,60,26],[111,0,60,26],[112,0,60,26],[113,0,60,26],[114,0,60,26],[115,0,60,26],[115,56,62,18,"_loadSingleFontAsync"],[115,76,62,38],[115,77,62,39,"name"],[115,81,62,38],[115,83,62,45,"asset"],[115,88,62,38],[115,89,60,26],[117,0,60,26],[118,0,63,12,"loaded"],[118,22,63,12,"loaded"],[118,28,63,18],[118,29,63,19,"name"],[118,33,63,18],[118,34,63,12],[118,37,63,27],[118,41,63,12],[120,0,60,26],[121,0,60,26],[122,0,66,12],[122,29,66,19,"loadPromises"],[122,41,66,31],[122,42,66,32,"name"],[122,46,66,31],[122,47,66,12],[123,0,60,26],[125,0,60,26],[126,0,60,26],[127,0,60,26],[128,0,60,26],[129,0,60,26],[130,0,60,26],[131,0,60,26],[131,13,60,25],[131,15,60,4],[133,0,38,7],[134,0,38,7],[134,46,69,10,"loadPromises"],[134,58,69,22],[134,59,69,23,"name"],[134,63,69,22],[134,64,38,7],[136,0,38,7],[137,0,38,7],[138,0,38,7],[139,0,38,7],[140,0,38,7],[141,0,38,7],[142,0,38,7],[144,0,71,0],[144,11,71,9,"_getAssetForSource"],[144,29,71,0],[144,30,71,28,"source"],[144,36,71,0],[144,38,71,36],[145,0,72,4],[145,8,72,8,"source"],[145,14,72,14],[145,26,72,26,"Asset"],[145,42,72,4],[145,44,72,33],[146,0,73,8],[146,13,73,15,"source"],[146,19,73,8],[147,0,74,5],[149,0,75,4],[149,8,75,8],[149,9,75,9,"isWeb"],[149,14,75,8],[149,18,75,18],[149,25,75,25,"source"],[149,31,75,18],[149,36,75,36],[149,44,75,4],[149,46,75,46],[150,0,76,8],[150,13,76,15,"Asset"],[150,30,76,21,"fromURI"],[150,37,76,15],[150,38,76,29,"source"],[150,44,76,15],[150,45,76,8],[151,0,77,5],[153,0,78,4],[153,8,78,8,"isWeb"],[153,13,78,13],[153,17,78,17],[153,24,78,24,"source"],[153,30,78,17],[153,35,78,35],[153,43,78,4],[153,45,78,45],[154,0,79,8],[154,13,79,15,"Asset"],[154,30,79,21,"fromModule"],[154,40,79,15],[154,41,79,32,"source"],[154,47,79,15],[154,48,79,8],[155,0,80,5],[157,0,84,4],[157,11,84,11,"source"],[157,17,84,4],[158,0,85,1],[160,0,86,0],[160,11,86,15,"_loadSingleFontAsync"],[160,31,86,0],[160,32,86,36,"name"],[160,36,86,0],[160,38,86,42,"asset"],[160,43,86,0],[161,0,86,0],[162,0,86,0],[163,0,86,0],[164,0,86,0],[165,0,86,0],[166,0,86,0],[166,46,87,10,"asset"],[166,51,87,15],[166,52,87,16,"downloadAsync"],[166,65,87,10],[166,67,86,0],[168,0,86,0],[169,0,86,0],[169,16,88,9,"asset"],[169,21,88,14],[169,22,88,15,"downloaded"],[169,32,86,0],[170,0,86,0],[171,0,86,0],[172,0,86,0],[174,0,86,0],[174,18,89,14],[174,22,89,18,"Error"],[174,27,89,14],[174,69,89,62,"name"],[174,73,89,14],[174,81,86,0],[176,0,86,0],[177,0,86,0],[178,0,86,0],[178,46,91,10,"ExpoFontLoader"],[178,70,91,25,"loadAsync"],[178,79,91,10],[178,80,91,35,"_getNativeFontName"],[178,98,91,53],[178,99,91,54,"name"],[178,103,91,53],[178,104,91,10],[178,106,91,61,"asset"],[178,111,91,66],[178,112,91,67,"localUri"],[178,120,91,10],[178,121,86,0],[180,0,86,0],[181,0,86,0],[182,0,86,0],[183,0,86,0],[184,0,86,0],[185,0,86,0],[186,0,86,0],[188,0,93,0],[188,11,93,9,"_getNativeFontName"],[188,29,93,0],[188,30,93,28,"name"],[188,34,93,0],[188,36,93,34],[189,0,94,4],[189,8,94,8,"isWeb"],[189,13,94,4],[189,15,94,15],[190,0,95,8],[190,13,95,15,"name"],[190,17,95,8],[191,0,96,5],[193,0,97,4],[193,11,97,14,"Constants"],[193,34,97,24,"sessionId"],[193,43,97,4],[193,52,97,37,"name"],[193,56,97,4],[194,0,98,1],[196,0,99,0],[196,6,99,4,"module"],[196,12,99,10],[196,16,99,14,"module"],[196,22,99,20],[196,23,99,21,"exports"],[196,30,99,0],[196,32,99,30],[197,0,100,4],[197,8,100,8,"wasImportWarningShown"],[197,29,100,29],[197,32,100,32],[197,37,100,4],[198,0,102,4,"Object"],[198,4,102,4,"Object"],[198,10,102,10],[198,11,102,11,"defineProperty"],[198,25,102,4],[198,26,102,26,"exports"],[198,33,102,4],[198,35,102,35],[198,41,102,4],[198,43,102,43],[199,0,103,8,"get"],[199,6,103,8,"get"],[199,9,102,43],[199,26,103,14],[200,0,104,12],[200,12,104,16],[200,13,104,17,"wasImportWarningShown"],[200,34,104,12],[200,36,104,40],[201,0,105,16,"console"],[201,10,105,16,"console"],[201,17,105,23],[201,18,105,24,"warn"],[201,22,105,16],[202,0,106,16,"wasImportWarningShown"],[202,10,106,16,"wasImportWarningShown"],[202,31,106,37],[202,34,106,40],[202,38,106,16],[203,0,107,13],[205,0,108,12],[205,15,108,19],[206,0,109,16,"processFontFamily"],[206,10,109,16,"processFontFamily"],[206,27,109,33],[206,29,109,16,"processFontFamily"],[206,46,108,19],[207,0,110,16,"isLoaded"],[207,10,110,16,"isLoaded"],[207,18,110,24],[207,20,110,16,"isLoaded"],[207,28,108,19],[208,0,111,16,"isLoading"],[208,10,111,16,"isLoading"],[208,19,111,25],[208,21,111,16,"isLoading"],[208,30,108,19],[209,0,112,16,"loadAsync"],[209,10,112,16,"loadAsync"],[209,19,112,25],[209,21,112,16,"loadAsync"],[210,0,108,19],[210,9,108,12],[211,0,114,9],[212,0,102,43],[212,5,102,4],[213,0,116,1]]},"type":"js/module"}]}