{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoCalendar","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCalendarsAsync = getCalendarsAsync;\n  exports.createCalendarAsync = createCalendarAsync;\n  exports.updateCalendarAsync = updateCalendarAsync;\n  exports.deleteCalendarAsync = deleteCalendarAsync;\n  exports.getEventsAsync = getEventsAsync;\n  exports.getEventAsync = getEventAsync;\n  exports.createEventAsync = createEventAsync;\n  exports.updateEventAsync = updateEventAsync;\n  exports.deleteEventAsync = deleteEventAsync;\n  exports.getAttendeesForEventAsync = getAttendeesForEventAsync;\n  exports.createAttendeeAsync = createAttendeeAsync;\n  exports.updateAttendeeAsync = updateAttendeeAsync;\n  exports.deleteAttendeeAsync = deleteAttendeeAsync;\n  exports.getRemindersAsync = getRemindersAsync;\n  exports.getReminderAsync = getReminderAsync;\n  exports.createReminderAsync = createReminderAsync;\n  exports.updateReminderAsync = updateReminderAsync;\n  exports.deleteReminderAsync = deleteReminderAsync;\n  exports.getSourcesAsync = getSourcesAsync;\n  exports.getSourceAsync = getSourceAsync;\n  exports.openEventInCalendar = openEventInCalendar;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.requestRemindersPermissionsAsync = requestRemindersPermissionsAsync;\n  exports.DEFAULT = exports.ReminderStatus = exports.CalendarAccessLevel = exports.EventAccessLevel = exports.AlarmMethod = exports.AttendeeType = exports.AttendeeStatus = exports.AttendeeRole = exports.SourceType = exports.EventStatus = exports.CalendarType = exports.Availability = exports.Frequency = exports.EntityTypes = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _ExpoCalendar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoCalendar\"));\n\n  ;\n\n  function getCalendarsAsync(entityType) {\n    return _regenerator.default.async(function getCalendarsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_ExpoCalendar.default.getCalendarsAsync) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getCalendarsAsync');\n\n          case 2:\n            if (entityType) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _ExpoCalendar.default.getCalendarsAsync(null));\n\n          case 4:\n            return _context.abrupt(\"return\", _ExpoCalendar.default.getCalendarsAsync(entityType));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function createCalendarAsync() {\n    var details,\n        color,\n        newDetails,\n        _args2 = arguments;\n    return _regenerator.default.async(function createCalendarAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n\n            if (_ExpoCalendar.default.saveCalendarAsync) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createCalendarAsync');\n\n          case 3:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              color: color\n            });\n            return _context2.abrupt(\"return\", _ExpoCalendar.default.saveCalendarAsync(newDetails));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function updateCalendarAsync(id) {\n    var details,\n        color,\n        newDetails,\n        _args3 = arguments;\n    return _regenerator.default.async(function updateCalendarAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            details = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n            if (_ExpoCalendar.default.saveCalendarAsync) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateCalendarAsync');\n\n          case 3:\n            if (id) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n\n            if (_reactNative.Platform.OS === 'android') {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            } else {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id,\n              color: color\n            });\n            return _context3.abrupt(\"return\", _ExpoCalendar.default.saveCalendarAsync(newDetails));\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function deleteCalendarAsync(id) {\n    return _regenerator.default.async(function deleteCalendarAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteCalendarAsync) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteCalendarAsync');\n\n          case 2:\n            if (id) {\n              _context4.next = 4;\n              break;\n            }\n\n            throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 4:\n            return _context4.abrupt(\"return\", _ExpoCalendar.default.deleteCalendarAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function getEventsAsync(calendarIds, startDate, endDate) {\n    return _regenerator.default.async(function getEventsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (_ExpoCalendar.default.getEventsAsync) {\n              _context5.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getEventsAsync');\n\n          case 2:\n            if (startDate) {\n              _context5.next = 4;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n\n          case 4:\n            if (endDate) {\n              _context5.next = 6;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context5.next = 8;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context5.abrupt(\"return\", _ExpoCalendar.default.getEventsAsync(stringifyIfDate(startDate), stringifyIfDate(endDate), calendarIds));\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function getEventAsync(id) {\n    var _ref,\n        _ref$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args6 = arguments;\n\n    return _regenerator.default.async(function getEventAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref$futureEvents = _ref.futureEvents, futureEvents = _ref$futureEvents === void 0 ? false : _ref$futureEvents, instanceStartDate = _ref.instanceStartDate;\n\n            if (_ExpoCalendar.default.getEventByIdAsync) {\n              _context6.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getEventAsync');\n\n          case 3:\n            if (id) {\n              _context6.next = 5;\n              break;\n            }\n\n            throw new Error('getEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context6.next = 9;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", _ExpoCalendar.default.getEventByIdAsync(id, instanceStartDate));\n\n          case 9:\n            return _context6.abrupt(\"return\", _ExpoCalendar.default.getEventByIdAsync(id));\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n\n  function createEventAsync(calendarId) {\n    var details,\n        newDetails,\n        _args7 = arguments;\n    return _regenerator.default.async(function createEventAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            details = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n\n            if (_ExpoCalendar.default.saveEventAsync) {\n              _context7.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createEventAsync');\n\n          case 3:\n            if (calendarId) {\n              _context7.next = 5;\n              break;\n            }\n\n            throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context7.next = 10;\n              break;\n            }\n\n            if (details.startDate) {\n              _context7.next = 8;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a startDate (Date)');\n\n          case 8:\n            if (details.endDate) {\n              _context7.next = 10;\n              break;\n            }\n\n            throw new Error('createEventAsync requires an endDate (Date)');\n\n          case 10:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context7.abrupt(\"return\", _ExpoCalendar.default.saveEventAsync(stringifyDateValues(newDetails), {}));\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }\n\n  function updateEventAsync(id) {\n    var details,\n        _ref2,\n        _ref2$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        newDetails,\n        _args8 = arguments;\n\n    return _regenerator.default.async(function updateEventAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            details = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            _ref2 = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {}, _ref2$futureEvents = _ref2.futureEvents, futureEvents = _ref2$futureEvents === void 0 ? false : _ref2$futureEvents, instanceStartDate = _ref2.instanceStartDate;\n\n            if (_ExpoCalendar.default.saveEventAsync) {\n              _context8.next = 4;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateEventAsync');\n\n          case 4:\n            if (id) {\n              _context8.next = 6;\n              break;\n            }\n\n            throw new Error('updateEventAsync must be called with an id (string) of the target event');\n\n          case 6:\n            if (_reactNative.Platform.OS === 'ios') {\n              if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n                console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id,\n              instanceStartDate: instanceStartDate\n            });\n            return _context8.abrupt(\"return\", _ExpoCalendar.default.saveEventAsync(stringifyDateValues(newDetails), {\n              futureEvents: futureEvents\n            }));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  }\n\n  function deleteEventAsync(id) {\n    var _ref3,\n        _ref3$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args9 = arguments;\n\n    return _regenerator.default.async(function deleteEventAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _ref3 = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {}, _ref3$futureEvents = _ref3.futureEvents, futureEvents = _ref3$futureEvents === void 0 ? false : _ref3$futureEvents, instanceStartDate = _ref3.instanceStartDate;\n\n            if (_ExpoCalendar.default.deleteEventAsync) {\n              _context9.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteEventAsync');\n\n          case 3:\n            if (id) {\n              _context9.next = 5;\n              break;\n            }\n\n            throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            return _context9.abrupt(\"return\", _ExpoCalendar.default.deleteEventAsync({\n              id: id,\n              instanceStartDate: instanceStartDate\n            }, {\n              futureEvents: futureEvents\n            }));\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    });\n  }\n\n  function getAttendeesForEventAsync(id) {\n    var _ref4,\n        _ref4$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        params,\n        _args10 = arguments;\n\n    return _regenerator.default.async(function getAttendeesForEventAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _ref4 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {}, _ref4$futureEvents = _ref4.futureEvents, futureEvents = _ref4$futureEvents === void 0 ? false : _ref4$futureEvents, instanceStartDate = _ref4.instanceStartDate;\n\n            if (_ExpoCalendar.default.getAttendeesForEventAsync) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getAttendeesForEventAsync');\n\n          case 3:\n            if (id) {\n              _context10.next = 5;\n              break;\n            }\n\n            throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            params = _reactNative.Platform.OS === 'ios' ? {\n              id: id,\n              instanceStartDate: instanceStartDate\n            } : id;\n            return _context10.abrupt(\"return\", _ExpoCalendar.default.getAttendeesForEventAsync(params));\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    });\n  }\n\n  function createAttendeeAsync(eventId) {\n    var details,\n        newDetails,\n        _args11 = arguments;\n    return _regenerator.default.async(function createAttendeeAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            details = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : {};\n\n            if (_ExpoCalendar.default.saveAttendeeForEventAsync) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createAttendeeAsync');\n\n          case 3:\n            if (eventId) {\n              _context11.next = 5;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (details.email) {\n              _context11.next = 7;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires an email (string)');\n\n          case 7:\n            if (details.role) {\n              _context11.next = 9;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a role (string)');\n\n          case 9:\n            if (details.type) {\n              _context11.next = 11;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a type (string)');\n\n          case 11:\n            if (details.status) {\n              _context11.next = 13;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a status (string)');\n\n          case 13:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined\n            });\n            return _context11.abrupt(\"return\", _ExpoCalendar.default.saveAttendeeForEventAsync(newDetails, eventId));\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    });\n  }\n\n  function updateAttendeeAsync(id) {\n    var details,\n        newDetails,\n        _args12 = arguments;\n    return _regenerator.default.async(function updateAttendeeAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            details = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {};\n\n            if (_ExpoCalendar.default.saveAttendeeForEventAsync) {\n              _context12.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateAttendeeAsync');\n\n          case 3:\n            if (id) {\n              _context12.next = 5;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id\n            });\n            return _context12.abrupt(\"return\", _ExpoCalendar.default.saveAttendeeForEventAsync(newDetails, null));\n\n          case 7:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    });\n  }\n\n  function deleteAttendeeAsync(id) {\n    return _regenerator.default.async(function deleteAttendeeAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteAttendeeAsync) {\n              _context13.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteAttendeeAsync');\n\n          case 2:\n            if (id) {\n              _context13.next = 4;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n\n          case 4:\n            return _context13.abrupt(\"return\", _ExpoCalendar.default.deleteAttendeeAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    });\n  }\n\n  function getRemindersAsync(calendarIds, status, startDate, endDate) {\n    return _regenerator.default.async(function getRemindersAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (_ExpoCalendar.default.getRemindersAsync) {\n              _context14.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getRemindersAsync');\n\n          case 2:\n            if (!(status && !startDate)) {\n              _context14.next = 4;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n\n          case 4:\n            if (!(status && !endDate)) {\n              _context14.next = 6;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context14.next = 8;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context14.abrupt(\"return\", _ExpoCalendar.default.getRemindersAsync(stringifyIfDate(startDate) || null, stringifyIfDate(endDate) || null, calendarIds, status || null));\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    });\n  }\n\n  function getReminderAsync(id) {\n    return _regenerator.default.async(function getReminderAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            if (_ExpoCalendar.default.getReminderByIdAsync) {\n              _context15.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getReminderAsync');\n\n          case 2:\n            if (id) {\n              _context15.next = 4;\n              break;\n            }\n\n            throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context15.abrupt(\"return\", _ExpoCalendar.default.getReminderByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    });\n  }\n\n  function createReminderAsync(calendarId) {\n    var details,\n        newDetails,\n        _args16 = arguments;\n    return _regenerator.default.async(function createReminderAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            details = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {};\n\n            if (_ExpoCalendar.default.saveReminderAsync) {\n              _context16.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createReminderAsync');\n\n          case 3:\n            if (calendarId) {\n              _context16.next = 5;\n              break;\n            }\n\n            throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context16.abrupt(\"return\", _ExpoCalendar.default.saveReminderAsync(stringifyDateValues(newDetails)));\n\n          case 7:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    });\n  }\n\n  function updateReminderAsync(id) {\n    var details,\n        newDetails,\n        _args17 = arguments;\n    return _regenerator.default.async(function updateReminderAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            details = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : {};\n\n            if (_ExpoCalendar.default.saveReminderAsync) {\n              _context17.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateReminderAsync');\n\n          case 3:\n            if (id) {\n              _context17.next = 5;\n              break;\n            }\n\n            throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n\n          case 5:\n            if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n              console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n            }\n\n            newDetails = (0, _objectSpread2.default)({}, details, {\n              id: id\n            });\n            return _context17.abrupt(\"return\", _ExpoCalendar.default.saveReminderAsync(stringifyDateValues(newDetails)));\n\n          case 8:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    });\n  }\n\n  function deleteReminderAsync(id) {\n    return _regenerator.default.async(function deleteReminderAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteReminderAsync) {\n              _context18.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteReminderAsync');\n\n          case 2:\n            if (id) {\n              _context18.next = 4;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context18.abrupt(\"return\", _ExpoCalendar.default.deleteReminderAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    });\n  }\n\n  function getSourcesAsync() {\n    return _regenerator.default.async(function getSourcesAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (_ExpoCalendar.default.getSourcesAsync) {\n              _context19.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getSourcesAsync');\n\n          case 2:\n            return _context19.abrupt(\"return\", _ExpoCalendar.default.getSourcesAsync());\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    });\n  }\n\n  function getSourceAsync(id) {\n    return _regenerator.default.async(function getSourceAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            if (_ExpoCalendar.default.getSourceByIdAsync) {\n              _context20.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getSourceAsync');\n\n          case 2:\n            if (id) {\n              _context20.next = 4;\n              break;\n            }\n\n            throw new Error('getSourceAsync must be called with an id (string) of the target source');\n\n          case 4:\n            return _context20.abrupt(\"return\", _ExpoCalendar.default.getSourceByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    });\n  }\n\n  function openEventInCalendar(id) {\n    if (!_ExpoCalendar.default.openEventInCalendar) {\n      console.warn(\"openEventInCalendar is not available on platform: \" + _reactNative.Platform.OS);\n      return;\n    }\n\n    if (!id) {\n      throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n    }\n\n    return _ExpoCalendar.default.openEventInCalendar(parseInt(id, 10));\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            if (_ExpoCalendar.default.requestPermissionsAsync) {\n              _context21.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'requestPermissionsAsync');\n\n          case 2:\n            _context21.next = 4;\n            return _regenerator.default.awrap(_ExpoCalendar.default.requestPermissionsAsync());\n\n          case 4:\n            return _context21.abrupt(\"return\", _context21.sent);\n\n          case 5:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    });\n  }\n\n  function requestRemindersPermissionsAsync() {\n    return _regenerator.default.async(function requestRemindersPermissionsAsync$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            if (_ExpoCalendar.default.requestRemindersPermissionsAsync) {\n              _context22.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'requestRemindersPermissionsAsync');\n\n          case 2:\n            _context22.next = 4;\n            return _regenerator.default.awrap(_ExpoCalendar.default.requestRemindersPermissionsAsync());\n\n          case 4:\n            return _context22.abrupt(\"return\", _context22.sent);\n\n          case 5:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    });\n  }\n\n  var EntityTypes = {\n    EVENT: 'event',\n    REMINDER: 'reminder'\n  };\n  exports.EntityTypes = EntityTypes;\n  var Frequency = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n    YEARLY: 'yearly'\n  };\n  exports.Frequency = Frequency;\n  var Availability = {\n    NOT_SUPPORTED: 'notSupported',\n    BUSY: 'busy',\n    FREE: 'free',\n    TENTATIVE: 'tentative',\n    UNAVAILABLE: 'unavailable'\n  };\n  exports.Availability = Availability;\n  var CalendarType = {\n    LOCAL: 'local',\n    CALDAV: 'caldav',\n    EXCHANGE: 'exchange',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.CalendarType = CalendarType;\n  var EventStatus = {\n    NONE: 'none',\n    CONFIRMED: 'confirmed',\n    TENTATIVE: 'tentative',\n    CANCELED: 'canceled'\n  };\n  exports.EventStatus = EventStatus;\n  var SourceType = {\n    LOCAL: 'local',\n    EXCHANGE: 'exchange',\n    CALDAV: 'caldav',\n    MOBILEME: 'mobileme',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.SourceType = SourceType;\n  var AttendeeRole = {\n    UNKNOWN: 'unknown',\n    REQUIRED: 'required',\n    OPTIONAL: 'optional',\n    CHAIR: 'chair',\n    NON_PARTICIPANT: 'nonParticipant',\n    ATTENDEE: 'attendee',\n    ORGANIZER: 'organizer',\n    PERFORMER: 'performer',\n    SPEAKER: 'speaker',\n    NONE: 'none'\n  };\n  exports.AttendeeRole = AttendeeRole;\n  var AttendeeStatus = {\n    UNKNOWN: 'unknown',\n    PENDING: 'pending',\n    ACCEPTED: 'accepted',\n    DECLINED: 'declined',\n    TENTATIVE: 'tentative',\n    DELEGATED: 'delegated',\n    COMPLETED: 'completed',\n    IN_PROCESS: 'inProcess',\n    INVITED: 'invited',\n    NONE: 'none'\n  };\n  exports.AttendeeStatus = AttendeeStatus;\n  var AttendeeType = {\n    UNKNOWN: 'unknown',\n    PERSON: 'person',\n    ROOM: 'room',\n    GROUP: 'group',\n    RESOURCE: 'resource',\n    OPTIONAL: 'optional',\n    REQUIRED: 'required',\n    NONE: 'none'\n  };\n  exports.AttendeeType = AttendeeType;\n  var AlarmMethod = {\n    ALARM: 'alarm',\n    ALERT: 'alert',\n    EMAIL: 'email',\n    SMS: 'sms',\n    DEFAULT: 'default'\n  };\n  exports.AlarmMethod = AlarmMethod;\n  var EventAccessLevel = {\n    CONFIDENTIAL: 'confidential',\n    PRIVATE: 'private',\n    PUBLIC: 'public',\n    DEFAULT: 'default'\n  };\n  exports.EventAccessLevel = EventAccessLevel;\n  var CalendarAccessLevel = {\n    CONTRIBUTOR: 'contributor',\n    EDITOR: 'editor',\n    FREEBUSY: 'freebusy',\n    OVERRIDE: 'override',\n    OWNER: 'owner',\n    READ: 'read',\n    RESPOND: 'respond',\n    ROOT: 'root',\n    NONE: 'none'\n  };\n  exports.CalendarAccessLevel = CalendarAccessLevel;\n  var ReminderStatus = {\n    COMPLETED: 'completed',\n    INCOMPLETE: 'incomplete'\n  };\n  exports.ReminderStatus = ReminderStatus;\n  var DEFAULT = 'default';\n  exports.DEFAULT = DEFAULT;\n\n  function stringifyIfDate(date) {\n    return date instanceof Date ? date.toISOString() : date;\n  }\n\n  function stringifyDateValues(obj) {\n    return Object.keys(obj).reduce(function (acc, key) {\n      acc[key] = stringifyIfDate(obj[key]);\n      return acc;\n    }, {});\n  }\n});","map":[[36,0,1,0],[38,0,2,0],[40,0,3,0],[42,0,4,0],[44,0,5,7],[44,11,5,22,"getCalendarsAsync"],[44,28,5,7],[44,29,5,40,"entityType"],[44,39,5,7],[45,0,5,7],[46,0,5,7],[47,0,5,7],[48,0,5,7],[49,0,5,7],[49,16,6,9,"ExpoCalendar"],[49,38,6,22,"getCalendarsAsync"],[49,55,5,7],[50,0,5,7],[51,0,5,7],[52,0,5,7],[54,0,5,7],[54,18,7,14],[54,22,7,18,"UnavailabilityError"],[54,47,7,14],[54,48,7,38],[54,58,7,14],[54,60,7,50],[54,79,7,14],[54,80,5,7],[56,0,5,7],[57,0,5,7],[57,16,9,9,"entityType"],[57,26,5,7],[58,0,5,7],[59,0,5,7],[60,0,5,7],[62,0,5,7],[62,45,10,15,"ExpoCalendar"],[62,67,10,28,"getCalendarsAsync"],[62,84,10,15],[62,85,10,46],[62,89,10,15],[62,90,5,7],[64,0,5,7],[65,0,5,7],[65,45,12,11,"ExpoCalendar"],[65,67,12,24,"getCalendarsAsync"],[65,84,12,11],[65,85,12,42,"entityType"],[65,95,12,11],[65,96,5,7],[67,0,5,7],[68,0,5,7],[69,0,5,7],[70,0,5,7],[71,0,5,7],[72,0,5,7],[73,0,5,7],[75,0,14,7],[75,11,14,22,"createCalendarAsync"],[75,30,14,7],[76,0,14,7],[77,0,14,7],[78,0,14,7],[79,0,14,7],[80,0,14,7],[81,0,14,7],[82,0,14,7],[83,0,14,7],[84,0,14,42,"details"],[84,12,14,42,"details"],[84,19,14,7],[84,81,14,52],[84,83,14,7],[86,0,14,7],[86,16,15,9,"ExpoCalendar"],[86,38,15,22,"saveCalendarAsync"],[86,55,14,7],[87,0,14,7],[88,0,14,7],[89,0,14,7],[91,0,14,7],[91,18,16,14],[91,22,16,18,"UnavailabilityError"],[91,47,16,14],[91,48,16,38],[91,58,16,14],[91,60,16,50],[91,81,16,14],[91,82,14,7],[93,0,14,7],[94,0,18,8,"color"],[94,12,18,8,"color"],[94,17,14,7],[94,20,18,16,"details"],[94,27,18,23],[94,28,18,24,"color"],[94,33,18,16],[94,36,18,32],[94,67,18,45,"details"],[94,74,18,52],[94,75,18,53,"color"],[94,80,18,32],[94,81,18,16],[94,84,18,62,"undefined"],[94,93,14,7],[95,0,19,10,"newDetails"],[95,12,19,10,"newDetails"],[95,22,14,7],[95,57,19,28,"details"],[95,64,14,7],[96,0,19,37,"id"],[96,14,19,37,"id"],[96,16,19,39],[96,18,19,41,"undefined"],[96,27,14,7],[97,0,19,52,"color"],[97,14,19,52,"color"],[97,19,19,57],[97,21,19,52,"color"],[98,0,14,7],[99,0,14,7],[99,46,20,11,"ExpoCalendar"],[99,68,20,24,"saveCalendarAsync"],[99,85,20,11],[99,86,20,42,"newDetails"],[99,96,20,11],[99,97,14,7],[101,0,14,7],[102,0,14,7],[103,0,14,7],[104,0,14,7],[105,0,14,7],[106,0,14,7],[107,0,14,7],[109,0,22,7],[109,11,22,22,"updateCalendarAsync"],[109,30,22,7],[109,31,22,42,"id"],[109,33,22,7],[110,0,22,7],[111,0,22,7],[112,0,22,7],[113,0,22,7],[114,0,22,7],[115,0,22,7],[116,0,22,7],[117,0,22,7],[118,0,22,46,"details"],[118,12,22,46,"details"],[118,19,22,7],[118,81,22,56],[118,83,22,7],[120,0,22,7],[120,16,23,9,"ExpoCalendar"],[120,38,23,22,"saveCalendarAsync"],[120,55,22,7],[121,0,22,7],[122,0,22,7],[123,0,22,7],[125,0,22,7],[125,18,24,14],[125,22,24,18,"UnavailabilityError"],[125,47,24,14],[125,48,24,38],[125,58,24,14],[125,60,24,50],[125,81,24,14],[125,82,22,7],[127,0,22,7],[128,0,22,7],[128,16,26,9,"id"],[128,18,22,7],[129,0,22,7],[130,0,22,7],[131,0,22,7],[133,0,22,7],[133,18,27,14],[133,22,27,18,"Error"],[133,27,27,14],[133,28,27,24],[133,107,27,14],[133,108,22,7],[135,0,22,7],[136,0,29,8,"color"],[136,12,29,8,"color"],[136,17,22,7],[136,20,29,16,"details"],[136,27,29,23],[136,28,29,24,"color"],[136,33,29,16],[136,36,29,32],[136,67,29,45,"details"],[136,74,29,52],[136,75,29,53,"color"],[136,80,29,32],[136,81,29,16],[136,84,29,62,"undefined"],[136,93,22,7],[138,0,30,4],[138,16,30,8,"Platform"],[138,38,30,17,"OS"],[138,40,30,8],[138,45,30,24],[138,54,30,4],[138,56,30,35],[139,0,31,8],[139,18,31,12,"details"],[139,25,31,19],[139,26,31,20,"hasOwnProperty"],[139,40,31,12],[139,41,31,35],[139,49,31,12],[139,54,32,12,"details"],[139,61,32,19],[139,62,32,20,"hasOwnProperty"],[139,76,32,12],[139,77,32,35],[139,84,32,12],[139,85,31,12],[139,89,33,12,"details"],[139,96,33,19],[139,97,33,20,"hasOwnProperty"],[139,111,33,12],[139,112,33,35],[139,133,33,12],[139,134,31,12],[139,138,34,12,"details"],[139,145,34,19],[139,146,34,20,"hasOwnProperty"],[139,160,34,12],[139,161,34,35],[139,184,34,12],[139,185,31,12],[139,189,35,12,"details"],[139,196,35,19],[139,197,35,20,"hasOwnProperty"],[139,211,35,12],[139,212,35,35],[139,223,35,12],[139,224,31,12],[139,228,36,12,"details"],[139,235,36,19],[139,236,36,20,"hasOwnProperty"],[139,250,36,12],[139,251,36,35],[139,265,36,12],[139,266,31,12],[139,270,37,12,"details"],[139,277,37,19],[139,278,37,20,"hasOwnProperty"],[139,292,37,12],[139,293,37,35],[139,303,37,12],[139,304,31,12],[139,308,38,12,"details"],[139,315,38,19],[139,316,38,20,"hasOwnProperty"],[139,330,38,12],[139,331,38,35],[139,349,38,12],[139,350,31,12],[139,354,39,12,"details"],[139,361,39,19],[139,362,39,20,"hasOwnProperty"],[139,376,39,12],[139,377,39,35],[139,399,39,12],[139,400,31,12],[139,404,40,12,"details"],[139,411,40,19],[139,412,40,20,"hasOwnProperty"],[139,426,40,12],[139,427,40,35],[139,440,40,12],[139,441,31,8],[139,443,40,51],[140,0,41,12,"console"],[140,16,41,12,"console"],[140,23,41,19],[140,24,41,20,"warn"],[140,28,41,12],[140,29,41,25],[140,126,41,12],[141,0,42,9],[142,0,43,5],[142,13,30,4],[142,19,44,9],[143,0,45,8],[143,18,45,12,"details"],[143,25,45,19],[143,26,45,20,"hasOwnProperty"],[143,40,45,12],[143,41,45,35],[143,49,45,12],[143,54,46,12,"details"],[143,61,46,19],[143,62,46,20,"hasOwnProperty"],[143,76,46,12],[143,77,46,35],[143,83,46,12],[143,84,45,12],[143,88,47,12,"details"],[143,95,47,19],[143,96,47,20,"hasOwnProperty"],[143,110,47,12],[143,111,47,35],[143,123,47,12],[143,124,45,12],[143,128,48,12,"details"],[143,135,48,19],[143,136,48,20,"hasOwnProperty"],[143,150,48,12],[143,151,48,35],[143,172,48,12],[143,173,45,12],[143,177,49,12,"details"],[143,184,49,19],[143,185,49,20,"hasOwnProperty"],[143,199,49,12],[143,200,49,35],[143,223,49,12],[143,224,45,8],[143,226,49,61],[144,0,50,12,"console"],[144,16,50,12,"console"],[144,23,50,19],[144,24,50,20,"warn"],[144,28,50,12],[144,29,50,25],[144,126,50,12],[145,0,51,9],[146,0,52,5],[148,0,53,10,"newDetails"],[148,12,53,10,"newDetails"],[148,22,22,7],[148,57,53,28,"details"],[148,64,22,7],[149,0,53,37,"id"],[149,14,53,37,"id"],[149,16,53,39],[149,18,53,37,"id"],[149,20,22,7],[150,0,53,41,"color"],[150,14,53,41,"color"],[150,19,53,46],[150,21,53,41,"color"],[151,0,22,7],[152,0,22,7],[152,46,54,11,"ExpoCalendar"],[152,68,54,24,"saveCalendarAsync"],[152,85,54,11],[152,86,54,42,"newDetails"],[152,96,54,11],[152,97,22,7],[154,0,22,7],[155,0,22,7],[156,0,22,7],[157,0,22,7],[158,0,22,7],[159,0,22,7],[160,0,22,7],[162,0,56,7],[162,11,56,22,"deleteCalendarAsync"],[162,30,56,7],[162,31,56,42,"id"],[162,33,56,7],[163,0,56,7],[164,0,56,7],[165,0,56,7],[166,0,56,7],[167,0,56,7],[167,16,57,9,"ExpoCalendar"],[167,38,57,22,"deleteCalendarAsync"],[167,57,56,7],[168,0,56,7],[169,0,56,7],[170,0,56,7],[172,0,56,7],[172,18,58,14],[172,22,58,18,"UnavailabilityError"],[172,47,58,14],[172,48,58,38],[172,58,58,14],[172,60,58,50],[172,81,58,14],[172,82,56,7],[174,0,56,7],[175,0,56,7],[175,16,60,9,"id"],[175,18,56,7],[176,0,56,7],[177,0,56,7],[178,0,56,7],[180,0,56,7],[180,18,61,14],[180,22,61,18,"Error"],[180,27,61,14],[180,28,61,24],[180,107,61,14],[180,108,56,7],[182,0,56,7],[183,0,56,7],[183,46,63,11,"ExpoCalendar"],[183,68,63,24,"deleteCalendarAsync"],[183,87,63,11],[183,88,63,44,"id"],[183,90,63,11],[183,91,56,7],[185,0,56,7],[186,0,56,7],[187,0,56,7],[188,0,56,7],[189,0,56,7],[190,0,56,7],[191,0,56,7],[193,0,65,7],[193,11,65,22,"getEventsAsync"],[193,25,65,7],[193,26,65,37,"calendarIds"],[193,37,65,7],[193,39,65,50,"startDate"],[193,48,65,7],[193,50,65,61,"endDate"],[193,57,65,7],[194,0,65,7],[195,0,65,7],[196,0,65,7],[197,0,65,7],[198,0,65,7],[198,16,66,9,"ExpoCalendar"],[198,38,66,22,"getEventsAsync"],[198,52,65,7],[199,0,65,7],[200,0,65,7],[201,0,65,7],[203,0,65,7],[203,18,67,14],[203,22,67,18,"UnavailabilityError"],[203,47,67,14],[203,48,67,38],[203,58,67,14],[203,60,67,50],[203,76,67,14],[203,77,65,7],[205,0,65,7],[206,0,65,7],[206,16,69,9,"startDate"],[206,25,65,7],[207,0,65,7],[208,0,65,7],[209,0,65,7],[211,0,65,7],[211,18,70,14],[211,22,70,18,"Error"],[211,27,70,14],[211,28,70,24],[211,104,70,14],[211,105,65,7],[213,0,65,7],[214,0,65,7],[214,16,72,9,"endDate"],[214,23,65,7],[215,0,65,7],[216,0,65,7],[217,0,65,7],[219,0,65,7],[219,18,73,14],[219,22,73,18,"Error"],[219,27,73,14],[219,28,73,24],[219,103,73,14],[219,104,65,7],[221,0,65,7],[222,0,65,7],[222,18,75,8],[222,19,75,9,"calendarIds"],[222,30,75,8],[222,34,75,24],[222,35,75,25,"calendarIds"],[222,46,75,36],[222,47,75,37,"length"],[222,53,65,7],[223,0,65,7],[224,0,65,7],[225,0,65,7],[227,0,65,7],[227,18,76,14],[227,22,76,18,"Error"],[227,27,76,14],[227,28,76,24],[227,107,76,14],[227,108,65,7],[229,0,65,7],[230,0,65,7],[230,46,78,11,"ExpoCalendar"],[230,68,78,24,"getEventsAsync"],[230,82,78,11],[230,83,78,39,"stringifyIfDate"],[230,98,78,54],[230,99,78,55,"startDate"],[230,108,78,54],[230,109,78,11],[230,111,78,67,"stringifyIfDate"],[230,126,78,82],[230,127,78,83,"endDate"],[230,134,78,82],[230,135,78,11],[230,137,78,93,"calendarIds"],[230,148,78,11],[230,149,65,7],[232,0,65,7],[233,0,65,7],[234,0,65,7],[235,0,65,7],[236,0,65,7],[237,0,65,7],[238,0,65,7],[240,0,80,7],[240,11,80,22,"getEventAsync"],[240,24,80,7],[240,25,80,36,"id"],[240,27,80,7],[241,0,80,7],[242,0,80,7],[243,0,80,7],[244,0,80,7],[245,0,80,7],[247,0,80,7],[248,0,80,7],[249,0,80,7],[250,0,80,7],[251,0,80,7],[251,78,80,86],[251,80,80,7],[251,107,80,42,"futureEvents"],[251,119,80,7],[251,121,80,42,"futureEvents"],[251,133,80,7],[251,167,80,57],[251,172,80,7],[251,194,80,64,"instanceStartDate"],[251,211,80,7],[251,219,80,64,"instanceStartDate"],[251,236,80,7],[253,0,80,7],[253,16,81,9,"ExpoCalendar"],[253,38,81,22,"getEventByIdAsync"],[253,55,80,7],[254,0,80,7],[255,0,80,7],[256,0,80,7],[258,0,80,7],[258,18,82,14],[258,22,82,18,"UnavailabilityError"],[258,47,82,14],[258,48,82,38],[258,58,82,14],[258,60,82,50],[258,75,82,14],[258,76,80,7],[260,0,80,7],[261,0,80,7],[261,16,84,9,"id"],[261,18,80,7],[262,0,80,7],[263,0,80,7],[264,0,80,7],[266,0,80,7],[266,18,85,14],[266,22,85,18,"Error"],[266,27,85,14],[266,28,85,24],[266,98,85,14],[266,99,80,7],[268,0,80,7],[269,0,80,7],[269,18,87,8,"Platform"],[269,40,87,17,"OS"],[269,42,87,8],[269,47,87,24],[269,52,80,7],[270,0,80,7],[271,0,80,7],[272,0,80,7],[274,0,80,7],[274,46,88,15,"ExpoCalendar"],[274,68,88,28,"getEventByIdAsync"],[274,85,88,15],[274,86,88,46,"id"],[274,88,88,15],[274,90,88,50,"instanceStartDate"],[274,107,88,15],[274,108,80,7],[276,0,80,7],[277,0,80,7],[277,46,91,15,"ExpoCalendar"],[277,68,91,28,"getEventByIdAsync"],[277,85,91,15],[277,86,91,46,"id"],[277,88,91,15],[277,89,80,7],[279,0,80,7],[280,0,80,7],[281,0,80,7],[282,0,80,7],[283,0,80,7],[284,0,80,7],[285,0,80,7],[287,0,94,7],[287,11,94,22,"createEventAsync"],[287,27,94,7],[287,28,94,39,"calendarId"],[287,38,94,7],[288,0,94,7],[289,0,94,7],[290,0,94,7],[291,0,94,7],[292,0,94,7],[293,0,94,7],[294,0,94,7],[295,0,94,51,"details"],[295,12,94,51,"details"],[295,19,94,7],[295,81,94,61],[295,83,94,7],[297,0,94,7],[297,16,95,9,"ExpoCalendar"],[297,38,95,22,"saveEventAsync"],[297,52,94,7],[298,0,94,7],[299,0,94,7],[300,0,94,7],[302,0,94,7],[302,18,96,14],[302,22,96,18,"UnavailabilityError"],[302,47,96,14],[302,48,96,38],[302,58,96,14],[302,60,96,50],[302,78,96,14],[302,79,94,7],[304,0,94,7],[305,0,94,7],[305,16,98,9,"calendarId"],[305,26,94,7],[306,0,94,7],[307,0,94,7],[308,0,94,7],[310,0,94,7],[310,18,99,14],[310,22,99,18,"Error"],[310,27,99,14],[310,28,99,24],[310,104,99,14],[310,105,94,7],[312,0,94,7],[313,0,94,7],[313,18,101,8,"Platform"],[313,40,101,17,"OS"],[313,42,101,8],[313,47,101,24],[313,56,94,7],[314,0,94,7],[315,0,94,7],[316,0,94,7],[318,0,94,7],[318,16,102,13,"details"],[318,23,102,20],[318,24,102,21,"startDate"],[318,33,94,7],[319,0,94,7],[320,0,94,7],[321,0,94,7],[323,0,94,7],[323,18,103,18],[323,22,103,22,"Error"],[323,27,103,18],[323,28,103,28],[323,74,103,18],[323,75,94,7],[325,0,94,7],[326,0,94,7],[326,16,105,13,"details"],[326,23,105,20],[326,24,105,21,"endDate"],[326,31,94,7],[327,0,94,7],[328,0,94,7],[329,0,94,7],[331,0,94,7],[331,18,106,18],[331,22,106,22,"Error"],[331,27,106,18],[331,28,106,28],[331,73,106,18],[331,74,94,7],[333,0,94,7],[334,0,109,10,"newDetails"],[334,12,109,10,"newDetails"],[334,22,94,7],[334,57,110,11,"details"],[334,64,94,7],[335,0,111,8,"id"],[335,14,111,8,"id"],[335,16,111,10],[335,18,111,12,"undefined"],[335,27,94,7],[336,0,112,8,"calendarId"],[336,14,112,8,"calendarId"],[336,24,112,18],[336,26,112,20,"calendarId"],[336,36,112,30],[336,41,112,35,"DEFAULT"],[336,48,112,20],[336,51,112,45,"undefined"],[336,60,112,20],[336,63,112,57,"calendarId"],[337,0,94,7],[338,0,94,7],[338,46,114,11,"ExpoCalendar"],[338,68,114,24,"saveEventAsync"],[338,82,114,11],[338,83,114,39,"stringifyDateValues"],[338,102,114,58],[338,103,114,59,"newDetails"],[338,113,114,58],[338,114,114,11],[338,116,114,72],[338,118,114,11],[338,119,94,7],[340,0,94,7],[341,0,94,7],[342,0,94,7],[343,0,94,7],[344,0,94,7],[345,0,94,7],[346,0,94,7],[348,0,116,7],[348,11,116,22,"updateEventAsync"],[348,27,116,7],[348,28,116,39,"id"],[348,30,116,7],[349,0,116,7],[350,0,116,7],[351,0,116,7],[352,0,116,7],[353,0,116,7],[354,0,116,7],[355,0,116,7],[357,0,116,7],[358,0,116,7],[359,0,116,7],[360,0,116,7],[361,0,116,43,"details"],[361,12,116,43,"details"],[361,19,116,7],[361,81,116,53],[361,83,116,7],[362,0,116,7],[362,79,116,103],[362,81,116,7],[362,110,116,59,"futureEvents"],[362,122,116,7],[362,124,116,59,"futureEvents"],[362,136,116,7],[362,171,116,74],[362,176,116,7],[362,199,116,81,"instanceStartDate"],[362,216,116,7],[362,225,116,81,"instanceStartDate"],[362,242,116,7],[364,0,116,7],[364,16,117,9,"ExpoCalendar"],[364,38,117,22,"saveEventAsync"],[364,52,116,7],[365,0,116,7],[366,0,116,7],[367,0,116,7],[369,0,116,7],[369,18,118,14],[369,22,118,18,"UnavailabilityError"],[369,47,118,14],[369,48,118,38],[369,58,118,14],[369,60,118,50],[369,78,118,14],[369,79,116,7],[371,0,116,7],[372,0,116,7],[372,16,120,9,"id"],[372,18,116,7],[373,0,116,7],[374,0,116,7],[375,0,116,7],[377,0,116,7],[377,18,121,14],[377,22,121,18,"Error"],[377,27,121,14],[377,28,121,24],[377,101,121,14],[377,102,116,7],[379,0,116,7],[380,0,123,4],[380,16,123,8,"Platform"],[380,38,123,17,"OS"],[380,40,123,8],[380,45,123,24],[380,50,123,4],[380,52,123,31],[381,0,124,8],[381,18,124,12,"details"],[381,25,124,19],[381,26,124,20,"hasOwnProperty"],[381,40,124,12],[381,41,124,35],[381,55,124,12],[381,60,125,12,"details"],[381,67,125,19],[381,68,125,20,"hasOwnProperty"],[381,82,125,12],[381,83,125,35],[381,101,125,12],[381,102,124,12],[381,106,126,12,"details"],[381,113,126,19],[381,114,126,20,"hasOwnProperty"],[381,128,126,12],[381,129,126,35],[381,148,126,12],[381,149,124,12],[381,153,127,12,"details"],[381,160,127,19],[381,161,127,20,"hasOwnProperty"],[381,175,127,12],[381,176,127,35],[381,188,127,12],[381,189,124,12],[381,193,128,12,"details"],[381,200,128,19],[381,201,128,20,"hasOwnProperty"],[381,215,128,12],[381,216,128,35],[381,224,128,12],[381,225,124,12],[381,229,129,12,"details"],[381,236,129,19],[381,237,129,20,"hasOwnProperty"],[381,251,129,12],[381,252,129,35],[381,263,129,12],[381,264,124,8],[381,266,129,49],[382,0,130,12,"console"],[382,16,130,12,"console"],[382,23,130,19],[382,24,130,20,"warn"],[382,28,130,12],[382,29,130,25],[382,123,130,12],[383,0,131,9],[384,0,132,5],[386,0,133,10,"newDetails"],[386,12,133,10,"newDetails"],[386,22,116,7],[386,57,133,28,"details"],[386,64,116,7],[387,0,133,37,"id"],[387,14,133,37,"id"],[387,16,133,39],[387,18,133,37,"id"],[387,20,116,7],[388,0,133,41,"instanceStartDate"],[388,14,133,41,"instanceStartDate"],[388,31,133,58],[388,33,133,41,"instanceStartDate"],[389,0,116,7],[390,0,116,7],[390,46,134,11,"ExpoCalendar"],[390,68,134,24,"saveEventAsync"],[390,82,134,11],[390,83,134,39,"stringifyDateValues"],[390,102,134,58],[390,103,134,59,"newDetails"],[390,113,134,58],[390,114,134,11],[390,116,134,72],[391,0,134,74,"futureEvents"],[391,14,134,74,"futureEvents"],[391,26,134,86],[391,28,134,74,"futureEvents"],[392,0,134,72],[392,13,134,11],[392,14,116,7],[394,0,116,7],[395,0,116,7],[396,0,116,7],[397,0,116,7],[398,0,116,7],[399,0,116,7],[400,0,116,7],[402,0,136,7],[402,11,136,22,"deleteEventAsync"],[402,27,136,7],[402,28,136,39,"id"],[402,30,136,7],[403,0,136,7],[404,0,136,7],[405,0,136,7],[406,0,136,7],[407,0,136,7],[409,0,136,7],[410,0,136,7],[411,0,136,7],[412,0,136,7],[413,0,136,7],[413,79,136,89],[413,81,136,7],[413,110,136,45,"futureEvents"],[413,122,136,7],[413,124,136,45,"futureEvents"],[413,136,136,7],[413,171,136,60],[413,176,136,7],[413,199,136,67,"instanceStartDate"],[413,216,136,7],[413,225,136,67,"instanceStartDate"],[413,242,136,7],[415,0,136,7],[415,16,137,9,"ExpoCalendar"],[415,38,137,22,"deleteEventAsync"],[415,54,136,7],[416,0,136,7],[417,0,136,7],[418,0,136,7],[420,0,136,7],[420,18,138,14],[420,22,138,18,"UnavailabilityError"],[420,47,138,14],[420,48,138,38],[420,58,138,14],[420,60,138,50],[420,78,138,14],[420,79,136,7],[422,0,136,7],[423,0,136,7],[423,16,140,9,"id"],[423,18,136,7],[424,0,136,7],[425,0,136,7],[426,0,136,7],[428,0,136,7],[428,18,141,14],[428,22,141,18,"Error"],[428,27,141,14],[428,28,141,24],[428,101,141,14],[428,102,136,7],[430,0,136,7],[431,0,136,7],[431,46,143,11,"ExpoCalendar"],[431,68,143,24,"deleteEventAsync"],[431,84,143,11],[431,85,143,41],[432,0,143,43,"id"],[432,14,143,43,"id"],[432,16,143,45],[432,18,143,43,"id"],[432,20,143,41],[433,0,143,47,"instanceStartDate"],[433,14,143,47,"instanceStartDate"],[433,31,143,64],[433,33,143,47,"instanceStartDate"],[434,0,143,41],[434,13,143,11],[434,15,143,68],[435,0,143,70,"futureEvents"],[435,14,143,70,"futureEvents"],[435,26,143,82],[435,28,143,70,"futureEvents"],[436,0,143,68],[436,13,143,11],[436,14,136,7],[438,0,136,7],[439,0,136,7],[440,0,136,7],[441,0,136,7],[442,0,136,7],[443,0,136,7],[444,0,136,7],[446,0,145,7],[446,11,145,22,"getAttendeesForEventAsync"],[446,36,145,7],[446,37,145,48,"id"],[446,39,145,7],[447,0,145,7],[448,0,145,7],[449,0,145,7],[450,0,145,7],[451,0,145,7],[452,0,145,7],[454,0,145,7],[455,0,145,7],[456,0,145,7],[457,0,145,7],[458,0,145,7],[458,82,145,98],[458,84,145,7],[458,113,145,54,"futureEvents"],[458,125,145,7],[458,127,145,54,"futureEvents"],[458,139,145,7],[458,174,145,69],[458,179,145,7],[458,202,145,76,"instanceStartDate"],[458,219,145,7],[458,228,145,76,"instanceStartDate"],[458,245,145,7],[460,0,145,7],[460,16,146,9,"ExpoCalendar"],[460,38,146,22,"getAttendeesForEventAsync"],[460,63,145,7],[461,0,145,7],[462,0,145,7],[463,0,145,7],[465,0,145,7],[465,18,147,14],[465,22,147,18,"UnavailabilityError"],[465,47,147,14],[465,48,147,38],[465,58,147,14],[465,60,147,50],[465,87,147,14],[465,88,145,7],[467,0,145,7],[468,0,145,7],[468,16,149,9,"id"],[468,18,145,7],[469,0,145,7],[470,0,145,7],[471,0,145,7],[473,0,145,7],[473,18,150,14],[473,22,150,18,"Error"],[473,27,150,14],[473,28,150,24],[473,110,150,14],[473,111,145,7],[475,0,145,7],[476,0,153,10,"params"],[476,12,153,10,"params"],[476,18,145,7],[476,21,153,19,"Platform"],[476,43,153,28,"OS"],[476,45,153,19],[476,50,153,35],[476,55,153,19],[476,58,153,43],[477,0,153,45,"id"],[477,14,153,45,"id"],[477,16,153,47],[477,18,153,45,"id"],[477,20,153,43],[478,0,153,49,"instanceStartDate"],[478,14,153,49,"instanceStartDate"],[478,31,153,66],[478,33,153,49,"instanceStartDate"],[479,0,153,43],[479,13,153,19],[479,16,153,71,"id"],[479,18,145,7],[480,0,145,7],[480,47,154,11,"ExpoCalendar"],[480,69,154,24,"getAttendeesForEventAsync"],[480,94,154,11],[480,95,154,50,"params"],[480,101,154,11],[480,102,145,7],[482,0,145,7],[483,0,145,7],[484,0,145,7],[485,0,145,7],[486,0,145,7],[487,0,145,7],[488,0,145,7],[490,0,156,7],[490,11,156,22,"createAttendeeAsync"],[490,30,156,7],[490,31,156,42,"eventId"],[490,38,156,7],[491,0,156,7],[492,0,156,7],[493,0,156,7],[494,0,156,7],[495,0,156,7],[496,0,156,7],[497,0,156,7],[498,0,156,51,"details"],[498,12,156,51,"details"],[498,19,156,7],[498,84,156,61],[498,86,156,7],[500,0,156,7],[500,16,157,9,"ExpoCalendar"],[500,38,157,22,"saveAttendeeForEventAsync"],[500,63,156,7],[501,0,156,7],[502,0,156,7],[503,0,156,7],[505,0,156,7],[505,18,158,14],[505,22,158,18,"UnavailabilityError"],[505,47,158,14],[505,48,158,38],[505,58,158,14],[505,60,158,50],[505,81,158,14],[505,82,156,7],[507,0,156,7],[508,0,156,7],[508,16,160,9,"eventId"],[508,23,156,7],[509,0,156,7],[510,0,156,7],[511,0,156,7],[513,0,156,7],[513,18,161,14],[513,22,161,18,"Error"],[513,27,161,14],[513,28,161,24],[513,104,161,14],[513,105,156,7],[515,0,156,7],[516,0,156,7],[516,16,163,9,"details"],[516,23,163,16],[516,24,163,17,"email"],[516,29,156,7],[517,0,156,7],[518,0,156,7],[519,0,156,7],[521,0,156,7],[521,18,164,14],[521,22,164,18,"Error"],[521,27,164,14],[521,28,164,24],[521,76,164,14],[521,77,156,7],[523,0,156,7],[524,0,156,7],[524,16,166,9,"details"],[524,23,166,16],[524,24,166,17,"role"],[524,28,156,7],[525,0,156,7],[526,0,156,7],[527,0,156,7],[529,0,156,7],[529,18,167,14],[529,22,167,18,"Error"],[529,27,167,14],[529,28,167,24],[529,74,167,14],[529,75,156,7],[531,0,156,7],[532,0,156,7],[532,16,169,9,"details"],[532,23,169,16],[532,24,169,17,"type"],[532,28,156,7],[533,0,156,7],[534,0,156,7],[535,0,156,7],[537,0,156,7],[537,18,170,14],[537,22,170,18,"Error"],[537,27,170,14],[537,28,170,24],[537,74,170,14],[537,75,156,7],[539,0,156,7],[540,0,156,7],[540,16,172,9,"details"],[540,23,172,16],[540,24,172,17,"status"],[540,30,156,7],[541,0,156,7],[542,0,156,7],[543,0,156,7],[545,0,156,7],[545,18,173,14],[545,22,173,18,"Error"],[545,27,173,14],[545,28,173,24],[545,76,173,14],[545,77,156,7],[547,0,156,7],[548,0,175,10,"newDetails"],[548,12,175,10,"newDetails"],[548,22,156,7],[548,57,175,28,"details"],[548,64,156,7],[549,0,175,37,"id"],[549,14,175,37,"id"],[549,16,175,39],[549,18,175,41,"undefined"],[550,0,156,7],[551,0,156,7],[551,47,176,11,"ExpoCalendar"],[551,69,176,24,"saveAttendeeForEventAsync"],[551,94,176,11],[551,95,176,50,"newDetails"],[551,105,176,11],[551,107,176,62,"eventId"],[551,114,176,11],[551,115,156,7],[553,0,156,7],[554,0,156,7],[555,0,156,7],[556,0,156,7],[557,0,156,7],[558,0,156,7],[559,0,156,7],[561,0,178,7],[561,11,178,22,"updateAttendeeAsync"],[561,30,178,7],[561,31,178,42,"id"],[561,33,178,7],[562,0,178,7],[563,0,178,7],[564,0,178,7],[565,0,178,7],[566,0,178,7],[567,0,178,7],[568,0,178,7],[569,0,178,46,"details"],[569,12,178,46,"details"],[569,19,178,7],[569,84,178,56],[569,86,178,7],[571,0,178,7],[571,16,179,9,"ExpoCalendar"],[571,38,179,22,"saveAttendeeForEventAsync"],[571,63,178,7],[572,0,178,7],[573,0,178,7],[574,0,178,7],[576,0,178,7],[576,18,180,14],[576,22,180,18,"UnavailabilityError"],[576,47,180,14],[576,48,180,38],[576,58,180,14],[576,60,180,50],[576,81,180,14],[576,82,178,7],[578,0,178,7],[579,0,178,7],[579,16,182,9,"id"],[579,18,178,7],[580,0,178,7],[581,0,178,7],[582,0,178,7],[584,0,178,7],[584,18,183,14],[584,22,183,18,"Error"],[584,27,183,14],[584,28,183,24],[584,104,183,14],[584,105,178,7],[586,0,178,7],[587,0,185,10,"newDetails"],[587,12,185,10,"newDetails"],[587,22,178,7],[587,57,185,28,"details"],[587,64,178,7],[588,0,185,37,"id"],[588,14,185,37,"id"],[588,16,185,39],[588,18,185,37,"id"],[589,0,178,7],[590,0,178,7],[590,47,186,11,"ExpoCalendar"],[590,69,186,24,"saveAttendeeForEventAsync"],[590,94,186,11],[590,95,186,50,"newDetails"],[590,105,186,11],[590,107,186,62],[590,111,186,11],[590,112,178,7],[592,0,178,7],[593,0,178,7],[594,0,178,7],[595,0,178,7],[596,0,178,7],[597,0,178,7],[598,0,178,7],[600,0,188,7],[600,11,188,22,"deleteAttendeeAsync"],[600,30,188,7],[600,31,188,42,"id"],[600,33,188,7],[601,0,188,7],[602,0,188,7],[603,0,188,7],[604,0,188,7],[605,0,188,7],[605,16,189,9,"ExpoCalendar"],[605,38,189,22,"deleteAttendeeAsync"],[605,57,188,7],[606,0,188,7],[607,0,188,7],[608,0,188,7],[610,0,188,7],[610,18,190,14],[610,22,190,18,"UnavailabilityError"],[610,47,190,14],[610,48,190,38],[610,58,190,14],[610,60,190,50],[610,81,190,14],[610,82,188,7],[612,0,188,7],[613,0,188,7],[613,16,192,9,"id"],[613,18,188,7],[614,0,188,7],[615,0,188,7],[616,0,188,7],[618,0,188,7],[618,18,193,14],[618,22,193,18,"Error"],[618,27,193,14],[618,28,193,24],[618,104,193,14],[618,105,188,7],[620,0,188,7],[621,0,188,7],[621,47,195,11,"ExpoCalendar"],[621,69,195,24,"deleteAttendeeAsync"],[621,88,195,11],[621,89,195,44,"id"],[621,91,195,11],[621,92,188,7],[623,0,188,7],[624,0,188,7],[625,0,188,7],[626,0,188,7],[627,0,188,7],[628,0,188,7],[629,0,188,7],[631,0,197,7],[631,11,197,22,"getRemindersAsync"],[631,28,197,7],[631,29,197,40,"calendarIds"],[631,40,197,7],[631,42,197,53,"status"],[631,48,197,7],[631,50,197,61,"startDate"],[631,59,197,7],[631,61,197,72,"endDate"],[631,68,197,7],[632,0,197,7],[633,0,197,7],[634,0,197,7],[635,0,197,7],[636,0,197,7],[636,16,198,9,"ExpoCalendar"],[636,38,198,22,"getRemindersAsync"],[636,55,197,7],[637,0,197,7],[638,0,197,7],[639,0,197,7],[641,0,197,7],[641,18,199,14],[641,22,199,18,"UnavailabilityError"],[641,47,199,14],[641,48,199,38],[641,58,199,14],[641,60,199,50],[641,79,199,14],[641,80,197,7],[643,0,197,7],[644,0,197,7],[644,18,201,8,"status"],[644,24,201,14],[644,28,201,18],[644,29,201,19,"startDate"],[644,38,197,7],[645,0,197,7],[646,0,197,7],[647,0,197,7],[649,0,197,7],[649,18,202,14],[649,22,202,18,"Error"],[649,27,202,14],[649,28,202,24],[649,110,202,14],[649,111,197,7],[651,0,197,7],[652,0,197,7],[652,18,204,8,"status"],[652,24,204,14],[652,28,204,18],[652,29,204,19,"endDate"],[652,36,197,7],[653,0,197,7],[654,0,197,7],[655,0,197,7],[657,0,197,7],[657,18,205,14],[657,22,205,18,"Error"],[657,27,205,14],[657,28,205,24],[657,109,205,14],[657,110,197,7],[659,0,197,7],[660,0,197,7],[660,18,207,8],[660,19,207,9,"calendarIds"],[660,30,207,8],[660,34,207,24],[660,35,207,25,"calendarIds"],[660,46,207,36],[660,47,207,37,"length"],[660,53,197,7],[661,0,197,7],[662,0,197,7],[663,0,197,7],[665,0,197,7],[665,18,208,14],[665,22,208,18,"Error"],[665,27,208,14],[665,28,208,24],[665,110,208,14],[665,111,197,7],[667,0,197,7],[668,0,197,7],[668,47,210,11,"ExpoCalendar"],[668,69,210,24,"getRemindersAsync"],[668,86,210,11],[668,87,210,42,"stringifyIfDate"],[668,102,210,57],[668,103,210,58,"startDate"],[668,112,210,57],[668,113,210,42],[668,117,210,72],[668,121,210,11],[668,123,210,78,"stringifyIfDate"],[668,138,210,93],[668,139,210,94,"endDate"],[668,146,210,93],[668,147,210,78],[668,151,210,106],[668,155,210,11],[668,157,210,112,"calendarIds"],[668,168,210,11],[668,170,210,125,"status"],[668,176,210,131],[668,180,210,135],[668,184,210,11],[668,185,197,7],[670,0,197,7],[671,0,197,7],[672,0,197,7],[673,0,197,7],[674,0,197,7],[675,0,197,7],[676,0,197,7],[678,0,212,7],[678,11,212,22,"getReminderAsync"],[678,27,212,7],[678,28,212,39,"id"],[678,30,212,7],[679,0,212,7],[680,0,212,7],[681,0,212,7],[682,0,212,7],[683,0,212,7],[683,16,213,9,"ExpoCalendar"],[683,38,213,22,"getReminderByIdAsync"],[683,58,212,7],[684,0,212,7],[685,0,212,7],[686,0,212,7],[688,0,212,7],[688,18,214,14],[688,22,214,18,"UnavailabilityError"],[688,47,214,14],[688,48,214,38],[688,58,214,14],[688,60,214,50],[688,78,214,14],[688,79,212,7],[690,0,212,7],[691,0,212,7],[691,16,216,9,"id"],[691,18,212,7],[692,0,212,7],[693,0,212,7],[694,0,212,7],[696,0,212,7],[696,18,217,14],[696,22,217,18,"Error"],[696,27,217,14],[696,28,217,24],[696,104,217,14],[696,105,212,7],[698,0,212,7],[699,0,212,7],[699,47,219,11,"ExpoCalendar"],[699,69,219,24,"getReminderByIdAsync"],[699,89,219,11],[699,90,219,45,"id"],[699,92,219,11],[699,93,212,7],[701,0,212,7],[702,0,212,7],[703,0,212,7],[704,0,212,7],[705,0,212,7],[706,0,212,7],[707,0,212,7],[709,0,221,7],[709,11,221,22,"createReminderAsync"],[709,30,221,7],[709,31,221,42,"calendarId"],[709,41,221,7],[710,0,221,7],[711,0,221,7],[712,0,221,7],[713,0,221,7],[714,0,221,7],[715,0,221,7],[716,0,221,7],[717,0,221,54,"details"],[717,12,221,54,"details"],[717,19,221,7],[717,84,221,64],[717,86,221,7],[719,0,221,7],[719,16,222,9,"ExpoCalendar"],[719,38,222,22,"saveReminderAsync"],[719,55,221,7],[720,0,221,7],[721,0,221,7],[722,0,221,7],[724,0,221,7],[724,18,223,14],[724,22,223,18,"UnavailabilityError"],[724,47,223,14],[724,48,223,38],[724,58,223,14],[724,60,223,50],[724,81,223,14],[724,82,221,7],[726,0,221,7],[727,0,221,7],[727,16,225,9,"calendarId"],[727,26,221,7],[728,0,221,7],[729,0,221,7],[730,0,221,7],[732,0,221,7],[732,18,226,14],[732,22,226,18,"Error"],[732,27,226,14],[732,28,226,24],[732,107,226,14],[732,108,221,7],[734,0,221,7],[735,0,228,10,"newDetails"],[735,12,228,10,"newDetails"],[735,22,221,7],[735,57,229,11,"details"],[735,64,221,7],[736,0,230,8,"id"],[736,14,230,8,"id"],[736,16,230,10],[736,18,230,12,"undefined"],[736,27,221,7],[737,0,231,8,"calendarId"],[737,14,231,8,"calendarId"],[737,24,231,18],[737,26,231,20,"calendarId"],[737,36,231,30],[737,41,231,35,"DEFAULT"],[737,48,231,20],[737,51,231,45,"undefined"],[737,60,231,20],[737,63,231,57,"calendarId"],[738,0,221,7],[739,0,221,7],[739,47,233,11,"ExpoCalendar"],[739,69,233,24,"saveReminderAsync"],[739,86,233,11],[739,87,233,42,"stringifyDateValues"],[739,106,233,61],[739,107,233,62,"newDetails"],[739,117,233,61],[739,118,233,11],[739,119,221,7],[741,0,221,7],[742,0,221,7],[743,0,221,7],[744,0,221,7],[745,0,221,7],[746,0,221,7],[747,0,221,7],[749,0,235,7],[749,11,235,22,"updateReminderAsync"],[749,30,235,7],[749,31,235,42,"id"],[749,33,235,7],[750,0,235,7],[751,0,235,7],[752,0,235,7],[753,0,235,7],[754,0,235,7],[755,0,235,7],[756,0,235,7],[757,0,235,46,"details"],[757,12,235,46,"details"],[757,19,235,7],[757,84,235,56],[757,86,235,7],[759,0,235,7],[759,16,236,9,"ExpoCalendar"],[759,38,236,22,"saveReminderAsync"],[759,55,235,7],[760,0,235,7],[761,0,235,7],[762,0,235,7],[764,0,235,7],[764,18,237,14],[764,22,237,18,"UnavailabilityError"],[764,47,237,14],[764,48,237,38],[764,58,237,14],[764,60,237,50],[764,81,237,14],[764,82,235,7],[766,0,235,7],[767,0,235,7],[767,16,239,9,"id"],[767,18,235,7],[768,0,235,7],[769,0,235,7],[770,0,235,7],[772,0,235,7],[772,18,240,14],[772,22,240,18,"Error"],[772,27,240,14],[772,28,240,24],[772,107,240,14],[772,108,235,7],[774,0,235,7],[775,0,242,4],[775,16,242,8,"details"],[775,23,242,15],[775,24,242,16,"hasOwnProperty"],[775,38,242,8],[775,39,242,31],[775,53,242,8],[775,58,242,50,"details"],[775,65,242,57],[775,66,242,58,"hasOwnProperty"],[775,80,242,50],[775,81,242,73],[775,99,242,50],[775,100,242,4],[775,102,242,94],[776,0,243,8,"console"],[776,14,243,8,"console"],[776,21,243,15],[776,22,243,16,"warn"],[776,26,243,8],[776,27,243,21],[776,124,243,8],[777,0,244,5],[779,0,245,10,"newDetails"],[779,12,245,10,"newDetails"],[779,22,235,7],[779,57,245,28,"details"],[779,64,235,7],[780,0,245,37,"id"],[780,14,245,37,"id"],[780,16,245,39],[780,18,245,37,"id"],[781,0,235,7],[782,0,235,7],[782,47,246,11,"ExpoCalendar"],[782,69,246,24,"saveReminderAsync"],[782,86,246,11],[782,87,246,42,"stringifyDateValues"],[782,106,246,61],[782,107,246,62,"newDetails"],[782,117,246,61],[782,118,246,11],[782,119,235,7],[784,0,235,7],[785,0,235,7],[786,0,235,7],[787,0,235,7],[788,0,235,7],[789,0,235,7],[790,0,235,7],[792,0,248,7],[792,11,248,22,"deleteReminderAsync"],[792,30,248,7],[792,31,248,42,"id"],[792,33,248,7],[793,0,248,7],[794,0,248,7],[795,0,248,7],[796,0,248,7],[797,0,248,7],[797,16,249,9,"ExpoCalendar"],[797,38,249,22,"deleteReminderAsync"],[797,57,248,7],[798,0,248,7],[799,0,248,7],[800,0,248,7],[802,0,248,7],[802,18,250,14],[802,22,250,18,"UnavailabilityError"],[802,47,250,14],[802,48,250,38],[802,58,250,14],[802,60,250,50],[802,81,250,14],[802,82,248,7],[804,0,248,7],[805,0,248,7],[805,16,252,9,"id"],[805,18,248,7],[806,0,248,7],[807,0,248,7],[808,0,248,7],[810,0,248,7],[810,18,253,14],[810,22,253,18,"Error"],[810,27,253,14],[810,28,253,24],[810,107,253,14],[810,108,248,7],[812,0,248,7],[813,0,248,7],[813,47,255,11,"ExpoCalendar"],[813,69,255,24,"deleteReminderAsync"],[813,88,255,11],[813,89,255,44,"id"],[813,91,255,11],[813,92,248,7],[815,0,248,7],[816,0,248,7],[817,0,248,7],[818,0,248,7],[819,0,248,7],[820,0,248,7],[821,0,248,7],[823,0,257,7],[823,11,257,22,"getSourcesAsync"],[823,26,257,7],[824,0,257,7],[825,0,257,7],[826,0,257,7],[827,0,257,7],[828,0,257,7],[828,16,258,9,"ExpoCalendar"],[828,38,258,22,"getSourcesAsync"],[828,53,257,7],[829,0,257,7],[830,0,257,7],[831,0,257,7],[833,0,257,7],[833,18,259,14],[833,22,259,18,"UnavailabilityError"],[833,47,259,14],[833,48,259,38],[833,58,259,14],[833,60,259,50],[833,77,259,14],[833,78,257,7],[835,0,257,7],[836,0,257,7],[836,47,261,11,"ExpoCalendar"],[836,69,261,24,"getSourcesAsync"],[836,84,261,11],[836,86,257,7],[838,0,257,7],[839,0,257,7],[840,0,257,7],[841,0,257,7],[842,0,257,7],[843,0,257,7],[844,0,257,7],[846,0,263,7],[846,11,263,22,"getSourceAsync"],[846,25,263,7],[846,26,263,37,"id"],[846,28,263,7],[847,0,263,7],[848,0,263,7],[849,0,263,7],[850,0,263,7],[851,0,263,7],[851,16,264,9,"ExpoCalendar"],[851,38,264,22,"getSourceByIdAsync"],[851,56,263,7],[852,0,263,7],[853,0,263,7],[854,0,263,7],[856,0,263,7],[856,18,265,14],[856,22,265,18,"UnavailabilityError"],[856,47,265,14],[856,48,265,38],[856,58,265,14],[856,60,265,50],[856,76,265,14],[856,77,263,7],[858,0,263,7],[859,0,263,7],[859,16,267,9,"id"],[859,18,263,7],[860,0,263,7],[861,0,263,7],[862,0,263,7],[864,0,263,7],[864,18,268,14],[864,22,268,18,"Error"],[864,27,268,14],[864,28,268,24],[864,100,268,14],[864,101,263,7],[866,0,263,7],[867,0,263,7],[867,47,270,11,"ExpoCalendar"],[867,69,270,24,"getSourceByIdAsync"],[867,87,270,11],[867,88,270,43,"id"],[867,90,270,11],[867,91,263,7],[869,0,263,7],[870,0,263,7],[871,0,263,7],[872,0,263,7],[873,0,263,7],[874,0,263,7],[875,0,263,7],[877,0,272,7],[877,11,272,16,"openEventInCalendar"],[877,30,272,7],[877,31,272,36,"id"],[877,33,272,7],[877,35,272,40],[878,0,273,4],[878,8,273,8],[878,9,273,9,"ExpoCalendar"],[878,31,273,22,"openEventInCalendar"],[878,50,273,4],[878,52,273,43],[879,0,274,8,"console"],[879,6,274,8,"console"],[879,13,274,15],[879,14,274,16,"warn"],[879,18,274,8],[879,74,274,74,"Platform"],[879,96,274,83,"OS"],[879,98,274,8],[880,0,275,8],[881,0,276,5],[883,0,277,4],[883,8,277,8],[883,9,277,9,"id"],[883,11,277,4],[883,13,277,13],[884,0,278,8],[884,12,278,14],[884,16,278,18,"Error"],[884,21,278,14],[884,22,278,24],[884,98,278,14],[884,99,278,8],[885,0,279,5],[887,0,280,4],[887,11,280,11,"ExpoCalendar"],[887,33,280,24,"openEventInCalendar"],[887,52,280,11],[887,53,280,44,"parseInt"],[887,61,280,52],[887,62,280,53,"id"],[887,64,280,52],[887,66,280,57],[887,68,280,52],[887,69,280,11],[887,70,280,4],[888,0,281,1],[890,0,282,7],[890,11,282,22,"requestPermissionsAsync"],[890,34,282,7],[891,0,282,7],[892,0,282,7],[893,0,282,7],[894,0,282,7],[895,0,282,7],[895,16,283,9,"ExpoCalendar"],[895,38,283,22,"requestPermissionsAsync"],[895,61,282,7],[896,0,282,7],[897,0,282,7],[898,0,282,7],[900,0,282,7],[900,18,284,14],[900,22,284,18,"UnavailabilityError"],[900,47,284,14],[900,48,284,38],[900,58,284,14],[900,60,284,50],[900,85,284,14],[900,86,282,7],[902,0,282,7],[903,0,282,7],[904,0,282,7],[904,46,286,17,"ExpoCalendar"],[904,68,286,30,"requestPermissionsAsync"],[904,91,286,17],[904,93,282,7],[906,0,282,7],[907,0,282,7],[909,0,282,7],[910,0,282,7],[911,0,282,7],[912,0,282,7],[913,0,282,7],[914,0,282,7],[915,0,282,7],[917,0,288,7],[917,11,288,22,"requestRemindersPermissionsAsync"],[917,43,288,7],[918,0,288,7],[919,0,288,7],[920,0,288,7],[921,0,288,7],[922,0,288,7],[922,16,289,9,"ExpoCalendar"],[922,38,289,22,"requestRemindersPermissionsAsync"],[922,70,288,7],[923,0,288,7],[924,0,288,7],[925,0,288,7],[927,0,288,7],[927,18,290,14],[927,22,290,18,"UnavailabilityError"],[927,47,290,14],[927,48,290,38],[927,58,290,14],[927,60,290,50],[927,94,290,14],[927,95,288,7],[929,0,288,7],[930,0,288,7],[931,0,288,7],[931,46,292,17,"ExpoCalendar"],[931,68,292,30,"requestRemindersPermissionsAsync"],[931,100,292,17],[931,102,288,7],[933,0,288,7],[934,0,288,7],[936,0,288,7],[937,0,288,7],[938,0,288,7],[939,0,288,7],[940,0,288,7],[941,0,288,7],[942,0,288,7],[944,0,294,7],[944,6,294,13,"EntityTypes"],[944,17,294,24],[944,20,294,27],[945,0,295,4,"EVENT"],[945,4,295,4,"EVENT"],[945,9,295,9],[945,11,295,11],[945,18,294,27],[946,0,296,4,"REMINDER"],[946,4,296,4,"REMINDER"],[946,12,296,12],[946,14,296,14],[947,0,294,27],[947,3,294,7],[949,0,298,7],[949,6,298,13,"Frequency"],[949,15,298,22],[949,18,298,25],[950,0,299,4,"DAILY"],[950,4,299,4,"DAILY"],[950,9,299,9],[950,11,299,11],[950,18,298,25],[951,0,300,4,"WEEKLY"],[951,4,300,4,"WEEKLY"],[951,10,300,10],[951,12,300,12],[951,20,298,25],[952,0,301,4,"MONTHLY"],[952,4,301,4,"MONTHLY"],[952,11,301,11],[952,13,301,13],[952,22,298,25],[953,0,302,4,"YEARLY"],[953,4,302,4,"YEARLY"],[953,10,302,10],[953,12,302,12],[954,0,298,25],[954,3,298,7],[956,0,304,7],[956,6,304,13,"Availability"],[956,18,304,25],[956,21,304,28],[957,0,305,4,"NOT_SUPPORTED"],[957,4,305,4,"NOT_SUPPORTED"],[957,17,305,17],[957,19,305,19],[957,33,304,28],[958,0,306,4,"BUSY"],[958,4,306,4,"BUSY"],[958,8,306,8],[958,10,306,10],[958,16,304,28],[959,0,307,4,"FREE"],[959,4,307,4,"FREE"],[959,8,307,8],[959,10,307,10],[959,16,304,28],[960,0,308,4,"TENTATIVE"],[960,4,308,4,"TENTATIVE"],[960,13,308,13],[960,15,308,15],[960,26,304,28],[961,0,309,4,"UNAVAILABLE"],[961,4,309,4,"UNAVAILABLE"],[961,15,309,15],[961,17,309,17],[962,0,304,28],[962,3,304,7],[964,0,311,7],[964,6,311,13,"CalendarType"],[964,18,311,25],[964,21,311,28],[965,0,312,4,"LOCAL"],[965,4,312,4,"LOCAL"],[965,9,312,9],[965,11,312,11],[965,18,311,28],[966,0,313,4,"CALDAV"],[966,4,313,4,"CALDAV"],[966,10,313,10],[966,12,313,12],[966,20,311,28],[967,0,314,4,"EXCHANGE"],[967,4,314,4,"EXCHANGE"],[967,12,314,12],[967,14,314,14],[967,24,311,28],[968,0,315,4,"SUBSCRIBED"],[968,4,315,4,"SUBSCRIBED"],[968,14,315,14],[968,16,315,16],[968,28,311,28],[969,0,316,4,"BIRTHDAYS"],[969,4,316,4,"BIRTHDAYS"],[969,13,316,13],[969,15,316,15],[970,0,311,28],[970,3,311,7],[972,0,318,7],[972,6,318,13,"EventStatus"],[972,17,318,24],[972,20,318,27],[973,0,319,4,"NONE"],[973,4,319,4,"NONE"],[973,8,319,8],[973,10,319,10],[973,16,318,27],[974,0,320,4,"CONFIRMED"],[974,4,320,4,"CONFIRMED"],[974,13,320,13],[974,15,320,15],[974,26,318,27],[975,0,321,4,"TENTATIVE"],[975,4,321,4,"TENTATIVE"],[975,13,321,13],[975,15,321,15],[975,26,318,27],[976,0,322,4,"CANCELED"],[976,4,322,4,"CANCELED"],[976,12,322,12],[976,14,322,14],[977,0,318,27],[977,3,318,7],[979,0,324,7],[979,6,324,13,"SourceType"],[979,16,324,23],[979,19,324,26],[980,0,325,4,"LOCAL"],[980,4,325,4,"LOCAL"],[980,9,325,9],[980,11,325,11],[980,18,324,26],[981,0,326,4,"EXCHANGE"],[981,4,326,4,"EXCHANGE"],[981,12,326,12],[981,14,326,14],[981,24,324,26],[982,0,327,4,"CALDAV"],[982,4,327,4,"CALDAV"],[982,10,327,10],[982,12,327,12],[982,20,324,26],[983,0,328,4,"MOBILEME"],[983,4,328,4,"MOBILEME"],[983,12,328,12],[983,14,328,14],[983,24,324,26],[984,0,329,4,"SUBSCRIBED"],[984,4,329,4,"SUBSCRIBED"],[984,14,329,14],[984,16,329,16],[984,28,324,26],[985,0,330,4,"BIRTHDAYS"],[985,4,330,4,"BIRTHDAYS"],[985,13,330,13],[985,15,330,15],[986,0,324,26],[986,3,324,7],[988,0,332,7],[988,6,332,13,"AttendeeRole"],[988,18,332,25],[988,21,332,28],[989,0,333,4,"UNKNOWN"],[989,4,333,4,"UNKNOWN"],[989,11,333,11],[989,13,333,13],[989,22,332,28],[990,0,334,4,"REQUIRED"],[990,4,334,4,"REQUIRED"],[990,12,334,12],[990,14,334,14],[990,24,332,28],[991,0,335,4,"OPTIONAL"],[991,4,335,4,"OPTIONAL"],[991,12,335,12],[991,14,335,14],[991,24,332,28],[992,0,336,4,"CHAIR"],[992,4,336,4,"CHAIR"],[992,9,336,9],[992,11,336,11],[992,18,332,28],[993,0,337,4,"NON_PARTICIPANT"],[993,4,337,4,"NON_PARTICIPANT"],[993,19,337,19],[993,21,337,21],[993,37,332,28],[994,0,338,4,"ATTENDEE"],[994,4,338,4,"ATTENDEE"],[994,12,338,12],[994,14,338,14],[994,24,332,28],[995,0,339,4,"ORGANIZER"],[995,4,339,4,"ORGANIZER"],[995,13,339,13],[995,15,339,15],[995,26,332,28],[996,0,340,4,"PERFORMER"],[996,4,340,4,"PERFORMER"],[996,13,340,13],[996,15,340,15],[996,26,332,28],[997,0,341,4,"SPEAKER"],[997,4,341,4,"SPEAKER"],[997,11,341,11],[997,13,341,13],[997,22,332,28],[998,0,342,4,"NONE"],[998,4,342,4,"NONE"],[998,8,342,8],[998,10,342,10],[999,0,332,28],[999,3,332,7],[1001,0,344,7],[1001,6,344,13,"AttendeeStatus"],[1001,20,344,27],[1001,23,344,30],[1002,0,345,4,"UNKNOWN"],[1002,4,345,4,"UNKNOWN"],[1002,11,345,11],[1002,13,345,13],[1002,22,344,30],[1003,0,346,4,"PENDING"],[1003,4,346,4,"PENDING"],[1003,11,346,11],[1003,13,346,13],[1003,22,344,30],[1004,0,347,4,"ACCEPTED"],[1004,4,347,4,"ACCEPTED"],[1004,12,347,12],[1004,14,347,14],[1004,24,344,30],[1005,0,348,4,"DECLINED"],[1005,4,348,4,"DECLINED"],[1005,12,348,12],[1005,14,348,14],[1005,24,344,30],[1006,0,349,4,"TENTATIVE"],[1006,4,349,4,"TENTATIVE"],[1006,13,349,13],[1006,15,349,15],[1006,26,344,30],[1007,0,350,4,"DELEGATED"],[1007,4,350,4,"DELEGATED"],[1007,13,350,13],[1007,15,350,15],[1007,26,344,30],[1008,0,351,4,"COMPLETED"],[1008,4,351,4,"COMPLETED"],[1008,13,351,13],[1008,15,351,15],[1008,26,344,30],[1009,0,352,4,"IN_PROCESS"],[1009,4,352,4,"IN_PROCESS"],[1009,14,352,14],[1009,16,352,16],[1009,27,344,30],[1010,0,353,4,"INVITED"],[1010,4,353,4,"INVITED"],[1010,11,353,11],[1010,13,353,13],[1010,22,344,30],[1011,0,354,4,"NONE"],[1011,4,354,4,"NONE"],[1011,8,354,8],[1011,10,354,10],[1012,0,344,30],[1012,3,344,7],[1014,0,356,7],[1014,6,356,13,"AttendeeType"],[1014,18,356,25],[1014,21,356,28],[1015,0,357,4,"UNKNOWN"],[1015,4,357,4,"UNKNOWN"],[1015,11,357,11],[1015,13,357,13],[1015,22,356,28],[1016,0,358,4,"PERSON"],[1016,4,358,4,"PERSON"],[1016,10,358,10],[1016,12,358,12],[1016,20,356,28],[1017,0,359,4,"ROOM"],[1017,4,359,4,"ROOM"],[1017,8,359,8],[1017,10,359,10],[1017,16,356,28],[1018,0,360,4,"GROUP"],[1018,4,360,4,"GROUP"],[1018,9,360,9],[1018,11,360,11],[1018,18,356,28],[1019,0,361,4,"RESOURCE"],[1019,4,361,4,"RESOURCE"],[1019,12,361,12],[1019,14,361,14],[1019,24,356,28],[1020,0,362,4,"OPTIONAL"],[1020,4,362,4,"OPTIONAL"],[1020,12,362,12],[1020,14,362,14],[1020,24,356,28],[1021,0,363,4,"REQUIRED"],[1021,4,363,4,"REQUIRED"],[1021,12,363,12],[1021,14,363,14],[1021,24,356,28],[1022,0,364,4,"NONE"],[1022,4,364,4,"NONE"],[1022,8,364,8],[1022,10,364,10],[1023,0,356,28],[1023,3,356,7],[1025,0,366,7],[1025,6,366,13,"AlarmMethod"],[1025,17,366,24],[1025,20,366,27],[1026,0,367,4,"ALARM"],[1026,4,367,4,"ALARM"],[1026,9,367,9],[1026,11,367,11],[1026,18,366,27],[1027,0,368,4,"ALERT"],[1027,4,368,4,"ALERT"],[1027,9,368,9],[1027,11,368,11],[1027,18,366,27],[1028,0,369,4,"EMAIL"],[1028,4,369,4,"EMAIL"],[1028,9,369,9],[1028,11,369,11],[1028,18,366,27],[1029,0,370,4,"SMS"],[1029,4,370,4,"SMS"],[1029,7,370,7],[1029,9,370,9],[1029,14,366,27],[1030,0,371,4,"DEFAULT"],[1030,4,371,4,"DEFAULT"],[1030,11,371,11],[1030,13,371,13],[1031,0,366,27],[1031,3,366,7],[1033,0,373,7],[1033,6,373,13,"EventAccessLevel"],[1033,22,373,29],[1033,25,373,32],[1034,0,374,4,"CONFIDENTIAL"],[1034,4,374,4,"CONFIDENTIAL"],[1034,16,374,16],[1034,18,374,18],[1034,32,373,32],[1035,0,375,4,"PRIVATE"],[1035,4,375,4,"PRIVATE"],[1035,11,375,11],[1035,13,375,13],[1035,22,373,32],[1036,0,376,4,"PUBLIC"],[1036,4,376,4,"PUBLIC"],[1036,10,376,10],[1036,12,376,12],[1036,20,373,32],[1037,0,377,4,"DEFAULT"],[1037,4,377,4,"DEFAULT"],[1037,11,377,11],[1037,13,377,13],[1038,0,373,32],[1038,3,373,7],[1040,0,379,7],[1040,6,379,13,"CalendarAccessLevel"],[1040,25,379,32],[1040,28,379,35],[1041,0,380,4,"CONTRIBUTOR"],[1041,4,380,4,"CONTRIBUTOR"],[1041,15,380,15],[1041,17,380,17],[1041,30,379,35],[1042,0,381,4,"EDITOR"],[1042,4,381,4,"EDITOR"],[1042,10,381,10],[1042,12,381,12],[1042,20,379,35],[1043,0,382,4,"FREEBUSY"],[1043,4,382,4,"FREEBUSY"],[1043,12,382,12],[1043,14,382,14],[1043,24,379,35],[1044,0,383,4,"OVERRIDE"],[1044,4,383,4,"OVERRIDE"],[1044,12,383,12],[1044,14,383,14],[1044,24,379,35],[1045,0,384,4,"OWNER"],[1045,4,384,4,"OWNER"],[1045,9,384,9],[1045,11,384,11],[1045,18,379,35],[1046,0,385,4,"READ"],[1046,4,385,4,"READ"],[1046,8,385,8],[1046,10,385,10],[1046,16,379,35],[1047,0,386,4,"RESPOND"],[1047,4,386,4,"RESPOND"],[1047,11,386,11],[1047,13,386,13],[1047,22,379,35],[1048,0,387,4,"ROOT"],[1048,4,387,4,"ROOT"],[1048,8,387,8],[1048,10,387,10],[1048,16,379,35],[1049,0,388,4,"NONE"],[1049,4,388,4,"NONE"],[1049,8,388,8],[1049,10,388,10],[1050,0,379,35],[1050,3,379,7],[1052,0,390,7],[1052,6,390,13,"ReminderStatus"],[1052,20,390,27],[1052,23,390,30],[1053,0,391,4,"COMPLETED"],[1053,4,391,4,"COMPLETED"],[1053,13,391,13],[1053,15,391,15],[1053,26,390,30],[1054,0,392,4,"INCOMPLETE"],[1054,4,392,4,"INCOMPLETE"],[1054,14,392,14],[1054,16,392,16],[1055,0,390,30],[1055,3,390,7],[1057,0,394,7],[1057,6,394,13,"DEFAULT"],[1057,13,394,20],[1057,16,394,23],[1057,25,394,7],[1060,0,395,0],[1060,11,395,9,"stringifyIfDate"],[1060,26,395,0],[1060,27,395,25,"date"],[1060,31,395,0],[1060,33,395,31],[1061,0,396,4],[1061,11,396,11,"date"],[1061,15,396,15],[1061,27,396,27,"Date"],[1061,31,396,11],[1061,34,396,34,"date"],[1061,38,396,38],[1061,39,396,39,"toISOString"],[1061,50,396,34],[1061,52,396,11],[1061,55,396,55,"date"],[1061,59,396,4],[1062,0,397,1],[1064,0,398,0],[1064,11,398,9,"stringifyDateValues"],[1064,30,398,0],[1064,31,398,29,"obj"],[1064,34,398,0],[1064,36,398,34],[1065,0,399,4],[1065,11,399,11,"Object"],[1065,17,399,17],[1065,18,399,18,"keys"],[1065,22,399,11],[1065,23,399,23,"obj"],[1065,26,399,11],[1065,28,399,28,"reduce"],[1065,34,399,11],[1065,35,399,35],[1065,45,399,36,"acc"],[1065,48,399,35],[1065,50,399,41,"key"],[1065,53,399,35],[1065,55,399,49],[1066,0,400,8,"acc"],[1066,6,400,8,"acc"],[1066,9,400,11],[1066,10,400,12,"key"],[1066,13,400,11],[1066,14,400,8],[1066,17,400,19,"stringifyIfDate"],[1066,32,400,34],[1066,33,400,35,"obj"],[1066,36,400,38],[1066,37,400,39,"key"],[1066,40,400,38],[1066,41,400,34],[1066,42,400,8],[1067,0,401,8],[1067,13,401,15,"acc"],[1067,16,401,8],[1068,0,402,5],[1068,5,399,11],[1068,7,402,7],[1068,9,399,11],[1068,10,399,4],[1069,0,403,1]]},"type":"js/module"}]}