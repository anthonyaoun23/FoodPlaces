{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.setTSpan = setTSpan;\n  exports.default = extractText;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var _util = _$$_REQUIRE(_dependencyMap[5], \"../util\");\n\n  var _jsxFileName = \"/home/cedric/School/Labs/SEG3525/Lab1/FoodPlaces/native/node_modules/react-native-svg/lib/extract/extractText.js\";\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?[ptexm%])*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      cachedFontObjectsFromString[font] = null;\n      return null;\n    }\n\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    cachedFontObjectsFromString[font] = {\n      fontSize: match[2] || 12,\n      fontWeight: isBold ? 'bold' : 'normal',\n      fontStyle: isItalic ? 'italic' : 'normal',\n      fontFamily: extractSingleFontFamily(match[3])\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(props) {\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontFeatureSettings = props.fontFeatureSettings,\n        font = props.font;\n    var ownedFont = (0, _util.pickNotNil)({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: extractSingleFontFamily(fontFamily),\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontVariantLigatures: fontVariantLigatures,\n      fontFeatureSettings: fontFeatureSettings\n    });\n    var baseFont = typeof font === 'string' ? parseFontString(font) : font;\n    return (0, _objectSpread2.default)({}, baseFont, ownedFont);\n  }\n\n  var TSpan;\n\n  function setTSpan(TSpanImplementation) {\n    TSpan = TSpanImplementation;\n  }\n\n  function getChild(child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(TSpan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, String(child));\n    } else {\n      return child;\n    }\n  }\n\n  function extractText(props, container) {\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        children = props.children,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }\n    }, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;\n    return {\n      content: textChildren === null ? String(children) : null,\n      children: textChildren,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[22,0,5,0],[22,6,5,6,"fontRegExp"],[22,16,5,16],[22,19,5,19],[22,115,5,0],[23,0,6,0],[23,6,6,6,"fontFamilyPrefix"],[23,22,6,22],[23,25,6,25],[23,35,6,0],[24,0,7,0],[24,6,7,6,"fontFamilySuffix"],[24,22,7,22],[24,25,7,25],[24,35,7,0],[25,0,8,0],[25,6,8,6,"commaReg"],[25,14,8,14],[25,17,8,17],[25,27,8,0],[26,0,10,0],[26,6,10,6,"cachedFontObjectsFromString"],[26,33,10,33],[26,36,10,36],[26,38,10,0],[28,0,12,0],[28,11,12,9,"extractSingleFontFamily"],[28,34,12,0],[28,35,12,33,"fontFamilyString"],[28,51,12,0],[28,53,12,51],[29,0,16,2],[29,11,16,9,"fontFamilyString"],[29,27,16,25],[29,30,17,6,"fontFamilyString"],[29,46,17,22],[29,47,18,9,"split"],[29,52,17,6],[29,53,18,15,"commaReg"],[29,61,17,6],[29,63,18,25],[29,64,17,6],[29,66,19,9,"replace"],[29,73,17,6],[29,74,19,17,"fontFamilyPrefix"],[29,90,17,6],[29,92,19,35],[29,94,17,6],[29,96,20,9,"replace"],[29,103,17,6],[29,104,20,17,"fontFamilySuffix"],[29,120,17,6],[29,122,20,35],[29,124,17,6],[29,125,16,25],[29,128,21,6],[29,132,16,2],[30,0,22,1],[32,0,24,0],[32,11,24,9,"parseFontString"],[32,26,24,0],[32,27,24,25,"font"],[32,31,24,0],[32,33,24,31],[33,0,25,2],[33,8,25,6,"cachedFontObjectsFromString"],[33,35,25,33],[33,36,25,34,"hasOwnProperty"],[33,50,25,6],[33,51,25,49,"font"],[33,55,25,6],[33,56,25,2],[33,58,25,56],[34,0,26,4],[34,13,26,11,"cachedFontObjectsFromString"],[34,40,26,38],[34,41,26,39,"font"],[34,45,26,38],[34,46,26,4],[35,0,27,3],[37,0,28,2],[37,8,28,8,"match"],[37,13,28,13],[37,16,28,16,"fontRegExp"],[37,26,28,26],[37,27,28,27,"exec"],[37,31,28,16],[37,32,28,32,"font"],[37,36,28,16],[37,37,28,2],[39,0,29,2],[39,8,29,6],[39,9,29,7,"match"],[39,14,29,2],[39,16,29,14],[40,0,30,4,"cachedFontObjectsFromString"],[40,6,30,4,"cachedFontObjectsFromString"],[40,33,30,31],[40,34,30,32,"font"],[40,38,30,31],[40,39,30,4],[40,42,30,40],[40,46,30,4],[41,0,31,4],[41,13,31,11],[41,17,31,4],[42,0,32,3],[44,0,33,2],[44,8,33,8,"isBold"],[44,14,33,14],[44,17,33,17],[44,24,33,24,"exec"],[44,28,33,17],[44,29,33,29,"match"],[44,34,33,34],[44,35,33,35],[44,36,33,34],[44,37,33,17],[44,38,33,2],[45,0,34,2],[45,8,34,8,"isItalic"],[45,16,34,16],[45,19,34,19],[45,28,34,28,"exec"],[45,32,34,19],[45,33,34,33,"match"],[45,38,34,38],[45,39,34,39],[45,40,34,38],[45,41,34,19],[45,42,34,2],[46,0,35,2,"cachedFontObjectsFromString"],[46,4,35,2,"cachedFontObjectsFromString"],[46,31,35,29],[46,32,35,30,"font"],[46,36,35,29],[46,37,35,2],[46,40,35,38],[47,0,36,4,"fontSize"],[47,6,36,4,"fontSize"],[47,14,36,12],[47,16,36,14,"match"],[47,21,36,19],[47,22,36,20],[47,23,36,19],[47,24,36,14],[47,28,36,26],[47,30,35,38],[48,0,37,4,"fontWeight"],[48,6,37,4,"fontWeight"],[48,16,37,14],[48,18,37,16,"isBold"],[48,24,37,22],[48,27,37,25],[48,33,37,22],[48,36,37,34],[48,44,35,38],[49,0,38,4,"fontStyle"],[49,6,38,4,"fontStyle"],[49,15,38,13],[49,17,38,15,"isItalic"],[49,25,38,23],[49,28,38,26],[49,36,38,23],[49,39,38,37],[49,47,35,38],[50,0,39,4,"fontFamily"],[50,6,39,4,"fontFamily"],[50,16,39,14],[50,18,39,16,"extractSingleFontFamily"],[50,41,39,39],[50,42,39,40,"match"],[50,47,39,45],[50,48,39,46],[50,49,39,45],[50,50,39,39],[51,0,35,38],[51,5,35,2],[52,0,41,2],[52,11,41,9,"cachedFontObjectsFromString"],[52,38,41,36],[52,39,41,37,"font"],[52,43,41,36],[52,44,41,2],[53,0,42,1],[55,0,44,7],[55,11,44,16,"extractFont"],[55,22,44,7],[55,23,44,28,"props"],[55,28,44,7],[55,30,44,35],[56,0,44,35],[56,8,46,4,"fontData"],[56,16,44,35],[56,19,61,6,"props"],[56,24,44,35],[56,25,46,4,"fontData"],[56,33,44,35],[57,0,44,35],[57,8,47,4,"fontStyle"],[57,17,44,35],[57,20,61,6,"props"],[57,25,44,35],[57,26,47,4,"fontStyle"],[57,35,44,35],[58,0,44,35],[58,8,48,4,"fontVariant"],[58,19,44,35],[58,22,61,6,"props"],[58,27,44,35],[58,28,48,4,"fontVariant"],[58,39,44,35],[59,0,44,35],[59,8,49,4,"fontWeight"],[59,18,44,35],[59,21,61,6,"props"],[59,26,44,35],[59,27,49,4,"fontWeight"],[59,37,44,35],[60,0,44,35],[60,8,50,4,"fontStretch"],[60,19,44,35],[60,22,61,6,"props"],[60,27,44,35],[60,28,50,4,"fontStretch"],[60,39,44,35],[61,0,44,35],[61,8,51,4,"fontSize"],[61,16,44,35],[61,19,61,6,"props"],[61,24,44,35],[61,25,51,4,"fontSize"],[61,33,44,35],[62,0,44,35],[62,8,52,4,"fontFamily"],[62,18,44,35],[62,21,61,6,"props"],[62,26,44,35],[62,27,52,4,"fontFamily"],[62,37,44,35],[63,0,44,35],[63,8,53,4,"textAnchor"],[63,18,44,35],[63,21,61,6,"props"],[63,26,44,35],[63,27,53,4,"textAnchor"],[63,37,44,35],[64,0,44,35],[64,8,54,4,"textDecoration"],[64,22,44,35],[64,25,61,6,"props"],[64,30,44,35],[64,31,54,4,"textDecoration"],[64,45,44,35],[65,0,44,35],[65,8,55,4,"letterSpacing"],[65,21,44,35],[65,24,61,6,"props"],[65,29,44,35],[65,30,55,4,"letterSpacing"],[65,43,44,35],[66,0,44,35],[66,8,56,4,"wordSpacing"],[66,19,44,35],[66,22,61,6,"props"],[66,27,44,35],[66,28,56,4,"wordSpacing"],[66,39,44,35],[67,0,44,35],[67,8,57,4,"kerning"],[67,15,44,35],[67,18,61,6,"props"],[67,23,44,35],[67,24,57,4,"kerning"],[67,31,44,35],[68,0,44,35],[68,8,58,4,"fontVariantLigatures"],[68,28,44,35],[68,31,61,6,"props"],[68,36,44,35],[68,37,58,4,"fontVariantLigatures"],[68,57,44,35],[69,0,44,35],[69,8,59,4,"fontFeatureSettings"],[69,27,44,35],[69,30,61,6,"props"],[69,35,44,35],[69,36,59,4,"fontFeatureSettings"],[69,55,44,35],[70,0,44,35],[70,8,60,4,"font"],[70,12,44,35],[70,15,61,6,"props"],[70,20,44,35],[70,21,60,4,"font"],[70,25,44,35],[71,0,63,2],[71,8,63,8,"ownedFont"],[71,17,63,17],[71,20,63,20],[71,42,63,31],[72,0,64,4,"fontData"],[72,6,64,4,"fontData"],[72,14,64,12],[72,16,64,4,"fontData"],[72,24,63,31],[73,0,65,4,"fontStyle"],[73,6,65,4,"fontStyle"],[73,15,65,13],[73,17,65,4,"fontStyle"],[73,26,63,31],[74,0,66,4,"fontVariant"],[74,6,66,4,"fontVariant"],[74,17,66,15],[74,19,66,4,"fontVariant"],[74,30,63,31],[75,0,67,4,"fontWeight"],[75,6,67,4,"fontWeight"],[75,16,67,14],[75,18,67,4,"fontWeight"],[75,28,63,31],[76,0,68,4,"fontStretch"],[76,6,68,4,"fontStretch"],[76,17,68,15],[76,19,68,4,"fontStretch"],[76,30,63,31],[77,0,69,4,"fontSize"],[77,6,69,4,"fontSize"],[77,14,69,12],[77,16,69,4,"fontSize"],[77,24,63,31],[78,0,70,4,"fontFamily"],[78,6,70,4,"fontFamily"],[78,16,70,14],[78,18,70,16,"extractSingleFontFamily"],[78,41,70,39],[78,42,70,40,"fontFamily"],[78,52,70,39],[78,53,63,31],[79,0,71,4,"textAnchor"],[79,6,71,4,"textAnchor"],[79,16,71,14],[79,18,71,4,"textAnchor"],[79,28,63,31],[80,0,72,4,"textDecoration"],[80,6,72,4,"textDecoration"],[80,20,72,18],[80,22,72,4,"textDecoration"],[80,36,63,31],[81,0,73,4,"letterSpacing"],[81,6,73,4,"letterSpacing"],[81,19,73,17],[81,21,73,4,"letterSpacing"],[81,34,63,31],[82,0,74,4,"wordSpacing"],[82,6,74,4,"wordSpacing"],[82,17,74,15],[82,19,74,4,"wordSpacing"],[82,30,63,31],[83,0,75,4,"kerning"],[83,6,75,4,"kerning"],[83,13,75,11],[83,15,75,4,"kerning"],[83,22,63,31],[84,0,76,4,"fontVariantLigatures"],[84,6,76,4,"fontVariantLigatures"],[84,26,76,24],[84,28,76,4,"fontVariantLigatures"],[84,48,63,31],[85,0,77,4,"fontFeatureSettings"],[85,6,77,4,"fontFeatureSettings"],[85,25,77,23],[85,27,77,4,"fontFeatureSettings"],[86,0,63,31],[86,5,63,20],[86,6,63,2],[87,0,80,2],[87,8,80,8,"baseFont"],[87,16,80,16],[87,19,80,19],[87,26,80,26,"font"],[87,30,80,19],[87,35,80,35],[87,43,80,19],[87,46,80,46,"parseFontString"],[87,61,80,61],[87,62,80,62,"font"],[87,66,80,61],[87,67,80,19],[87,70,80,70,"font"],[87,74,80,2],[88,0,82,2],[88,43,82,14,"baseFont"],[88,51,82,2],[88,53,82,27,"ownedFont"],[88,62,82,2],[89,0,83,1],[91,0,85,0],[91,6,85,4,"TSpan"],[91,11,85,0],[93,0,87,7],[93,11,87,16,"setTSpan"],[93,19,87,7],[93,20,87,25,"TSpanImplementation"],[93,39,87,7],[93,41,87,46],[94,0,88,2,"TSpan"],[94,4,88,2,"TSpan"],[94,9,88,7],[94,12,88,10,"TSpanImplementation"],[94,31,88,2],[95,0,89,1],[97,0,91,0],[97,11,91,9,"getChild"],[97,19,91,0],[97,20,91,18,"child"],[97,25,91,0],[97,27,91,25],[98,0,92,2],[98,8,92,6],[98,15,92,13,"child"],[98,20,92,6],[98,25,92,23],[98,33,92,6],[98,37,92,35],[98,44,92,42,"child"],[98,49,92,35],[98,54,92,52],[98,62,92,2],[98,64,92,62],[99,0,93,4],[99,13,93,11],[99,42,93,12],[99,47,93,11],[100,0,93,11],[101,0,93,11],[102,0,93,11],[103,0,93,11],[104,0,93,11],[104,9,93,19,"String"],[104,15,93,25],[104,16,93,26,"child"],[104,21,93,25],[104,22,93,11],[104,23,93,4],[105,0,94,3],[105,5,92,2],[105,11,94,9],[106,0,95,4],[106,13,95,11,"child"],[106,18,95,4],[107,0,96,3],[108,0,97,1],[110,0,99,15],[110,11,99,24,"extractText"],[110,22,99,15],[110,23,99,36,"props"],[110,28,99,15],[110,30,99,43,"container"],[110,39,99,15],[110,41,99,54],[111,0,99,54],[111,8,101,4,"x"],[111,9,99,54],[111,12,110,6,"props"],[111,17,99,54],[111,18,101,4,"x"],[111,19,99,54],[112,0,99,54],[112,8,102,4,"y"],[112,9,99,54],[112,12,110,6,"props"],[112,17,99,54],[112,18,102,4,"y"],[112,19,99,54],[113,0,99,54],[113,8,103,4,"dx"],[113,10,99,54],[113,13,110,6,"props"],[113,18,99,54],[113,19,103,4,"dx"],[113,21,99,54],[114,0,99,54],[114,8,104,4,"dy"],[114,10,99,54],[114,13,110,6,"props"],[114,18,99,54],[114,19,104,4,"dy"],[114,21,99,54],[115,0,99,54],[115,8,105,4,"rotate"],[115,14,99,54],[115,17,110,6,"props"],[115,22,99,54],[115,23,105,4,"rotate"],[115,29,99,54],[116,0,99,54],[116,8,106,4,"children"],[116,16,99,54],[116,19,110,6,"props"],[116,24,99,54],[116,25,106,4,"children"],[116,33,99,54],[117,0,99,54],[117,8,107,4,"baselineShift"],[117,21,99,54],[117,24,110,6,"props"],[117,29,99,54],[117,30,107,4,"baselineShift"],[117,43,99,54],[118,0,99,54],[118,8,108,4,"verticalAlign"],[118,21,99,54],[118,24,110,6,"props"],[118,29,99,54],[118,30,108,4,"verticalAlign"],[118,43,99,54],[119,0,99,54],[119,8,109,4,"alignmentBaseline"],[119,25,99,54],[119,28,110,6,"props"],[119,33,99,54],[119,34,109,4,"alignmentBaseline"],[119,51,99,54],[120,0,112,2],[120,8,112,8,"textChildren"],[120,20,112,20],[120,23,113,4],[120,30,113,11,"children"],[120,38,113,4],[120,43,113,24],[120,51,113,4],[120,55,113,36],[120,62,113,43,"children"],[120,70,113,36],[120,75,113,56],[120,83,113,4],[120,86,114,6,"container"],[120,95,114,15],[120,98,115,8],[120,127,115,9],[120,132,115,8],[121,0,115,8],[122,0,115,8],[123,0,115,8],[124,0,115,8],[125,0,115,8],[125,7,115,16,"String"],[125,13,115,22],[125,14,115,23,"children"],[125,22,115,22],[125,23,115,8],[125,24,114,15],[125,27,116,10],[125,31,113,4],[125,34,117,8,"Children"],[125,50,117,17,"count"],[125,55,117,8],[125,56,117,23,"children"],[125,64,117,8],[125,68,117,35],[125,69,117,8],[125,73,117,40,"Array"],[125,78,117,45],[125,79,117,46,"isArray"],[125,86,117,40],[125,87,117,54,"children"],[125,95,117,40],[125,96,117,8],[125,99,118,6,"Children"],[125,115,118,15,"map"],[125,118,118,6],[125,119,118,19,"children"],[125,127,118,6],[125,129,118,29,"getChild"],[125,137,118,6],[125,138,117,8],[125,141,120,6,"children"],[125,149,112,2],[126,0,123,2],[126,11,123,9],[127,0,124,4,"content"],[127,6,124,4,"content"],[127,13,124,11],[127,15,124,13,"textChildren"],[127,27,124,25],[127,32,124,30],[127,36,124,13],[127,39,124,37,"String"],[127,45,124,43],[127,46,124,44,"children"],[127,54,124,43],[127,55,124,13],[127,58,124,56],[127,62,123,9],[128,0,125,4,"children"],[128,6,125,4,"children"],[128,14,125,12],[128,16,125,14,"textChildren"],[128,28,123,9],[129,0,126,4,"baselineShift"],[129,6,126,4,"baselineShift"],[129,19,126,17],[129,21,126,4,"baselineShift"],[129,34,123,9],[130,0,127,4,"verticalAlign"],[130,6,127,4,"verticalAlign"],[130,19,127,17],[130,21,127,4,"verticalAlign"],[130,34,123,9],[131,0,128,4,"alignmentBaseline"],[131,6,128,4,"alignmentBaseline"],[131,23,128,21],[131,25,128,4,"alignmentBaseline"],[131,42,123,9],[132,0,129,4,"font"],[132,6,129,4,"font"],[132,10,129,8],[132,12,129,10,"extractFont"],[132,23,129,21],[132,24,129,22,"props"],[132,29,129,21],[132,30,123,9],[133,0,130,4,"x"],[133,6,130,4,"x"],[133,7,130,5],[133,9,130,7],[133,41,130,25,"x"],[133,42,130,7],[133,43,123,9],[134,0,131,4,"y"],[134,6,131,4,"y"],[134,7,131,5],[134,9,131,7],[134,41,131,25,"y"],[134,42,131,7],[134,43,123,9],[135,0,132,4,"dx"],[135,6,132,4,"dx"],[135,8,132,6],[135,10,132,8],[135,42,132,26,"dx"],[135,44,132,8],[135,45,123,9],[136,0,133,4,"dy"],[136,6,133,4,"dy"],[136,8,133,6],[136,10,133,8],[136,42,133,26,"dy"],[136,44,133,8],[136,45,123,9],[137,0,134,4,"rotate"],[137,6,134,4,"rotate"],[137,12,134,10],[137,14,134,12],[137,46,134,30,"rotate"],[137,52,134,12],[138,0,123,9],[138,5,123,2],[139,0,136,1]]},"type":"js/module"}]}