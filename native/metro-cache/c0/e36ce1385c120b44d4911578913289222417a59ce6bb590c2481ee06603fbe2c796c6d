{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[4], \"@unimodules/core\");\n\n  var DeviceSensor = function () {\n    function DeviceSensor(nativeSensorModule, nativeEventName) {\n      (0, _classCallCheck2.default)(this, DeviceSensor);\n      this._nativeModule = nativeSensorModule;\n      this._nativeEmitter = new _core.EventEmitter(nativeSensorModule);\n      this._nativeEventName = nativeEventName;\n      this._listenerCount = 0;\n    }\n\n    (0, _createClass2.default)(DeviceSensor, [{\n      key: \"addListener\",\n      value: function addListener(listener) {\n        var _this = this;\n\n        var subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n\n        subscription.remove = function () {\n          return _this.removeSubscription(subscription);\n        };\n\n        this._listenerCount++;\n        return subscription;\n      }\n    }, {\n      key: \"hasListeners\",\n      value: function hasListeners() {\n        return this._listenerCount > 0;\n      }\n    }, {\n      key: \"getListenerCount\",\n      value: function getListenerCount() {\n        return this._listenerCount;\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        this._listenerCount = 0;\n\n        this._nativeEmitter.removeAllListeners(this._nativeEventName);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        this._listenerCount--;\n\n        this._nativeEmitter.removeSubscription(subscription);\n      }\n    }, {\n      key: \"setUpdateInterval\",\n      value: function setUpdateInterval(intervalMs) {\n        if (!this._nativeModule.setUpdateInterval) {\n          console.warn(\"expo-sensors: setUpdateInterval() is not supported on \" + _core.Platform.OS);\n        } else {\n          this._nativeModule.setUpdateInterval(intervalMs);\n        }\n      }\n    }, {\n      key: \"isAvailableAsync\",\n      value: function isAvailableAsync() {\n        return _regenerator.default.async(function isAvailableAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._nativeModule.isAvailableAsync) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 4:\n                _context.next = 6;\n                return _regenerator.default.awrap(this._nativeModule.isAvailableAsync());\n\n              case 6:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return DeviceSensor;\n  }();\n\n  exports.default = DeviceSensor;\n});","map":[[15,0,1,0],[17,6,6,21,"DeviceSensor"],[17,18],[18,0,7,4],[18,26,7,16,"nativeSensorModule"],[18,44,7,4],[18,46,7,36,"nativeEventName"],[18,61,7,4],[18,63,7,53],[19,0,7,53],[20,0,8,8],[20,11,8,13,"_nativeModule"],[20,24,8,8],[20,27,8,29,"nativeSensorModule"],[20,45,8,8],[21,0,9,8],[21,11,9,13,"_nativeEmitter"],[21,25,9,8],[21,28,9,30],[21,32,9,34,"EventEmitter"],[21,50,9,30],[21,51,9,47,"nativeSensorModule"],[21,69,9,30],[21,70,9,8],[22,0,10,8],[22,11,10,13,"_nativeEventName"],[22,27,10,8],[22,30,10,32,"nativeEventName"],[22,45,10,8],[23,0,11,8],[23,11,11,13,"_listenerCount"],[23,25,11,8],[23,28,11,30],[23,29,11,8],[24,0,12,5],[28,34,13,16,"listener"],[28,42],[28,44,13,26],[29,0,13,26],[31,0,14,8],[31,12,14,12,"subscription"],[31,24,14,24],[31,27,14,27],[31,32,14,32,"_nativeEmitter"],[31,46,14,27],[31,47,14,47,"addListener"],[31,58,14,27],[31,59,14,59],[31,64,14,64,"_nativeEventName"],[31,80,14,27],[31,82,14,82,"listener"],[31,90,14,27],[31,91,14,8],[33,0,15,8,"subscription"],[33,8,15,8,"subscription"],[33,20,15,20],[33,21,15,21,"remove"],[33,27,15,8],[33,30,15,30],[34,0,15,30],[34,17,15,36],[34,22,15,40],[34,23,15,41,"removeSubscription"],[34,41,15,36],[34,42,15,60,"subscription"],[34,54,15,36],[34,55,15,30],[35,0,15,30],[35,9,15,8],[37,0,16,8],[37,13,16,13,"_listenerCount"],[37,27,16,8],[38,0,17,8],[38,15,17,15,"subscription"],[38,27,17,8],[39,0,18,5],[42,37,19,19],[43,0,20,8],[43,15,20,15],[43,20,20,20,"_listenerCount"],[43,34,20,15],[43,37,20,37],[43,38,20,8],[44,0,21,5],[47,41,22,23],[48,0,23,8],[48,15,23,15],[48,20,23,20,"_listenerCount"],[48,34,23,8],[49,0,24,5],[52,43,25,25],[53,0,26,8],[53,13,26,13,"_listenerCount"],[53,27,26,8],[53,30,26,30],[53,31,26,8],[55,0,27,8],[55,13,27,13,"_nativeEmitter"],[55,27,27,8],[55,28,27,28,"removeAllListeners"],[55,46,27,8],[55,47,27,47],[55,52,27,52,"_nativeEventName"],[55,68,27,8],[56,0,28,5],[59,41,29,23,"subscription"],[59,53],[59,55,29,37],[60,0,30,8],[60,13,30,13,"_listenerCount"],[60,27,30,8],[62,0,31,8],[62,13,31,13,"_nativeEmitter"],[62,27,31,8],[62,28,31,28,"removeSubscription"],[62,46,31,8],[62,47,31,47,"subscription"],[62,59,31,8],[63,0,32,5],[66,40,33,22,"intervalMs"],[66,50],[66,52,33,34],[67,0,34,8],[67,12,34,12],[67,13,34,13],[67,18,34,18,"_nativeModule"],[67,31,34,13],[67,32,34,32,"setUpdateInterval"],[67,49,34,8],[67,51,34,51],[68,0,35,12,"console"],[68,10,35,12,"console"],[68,17,35,19],[68,18,35,20,"warn"],[68,22,35,12],[68,82,35,82,"Platform"],[68,97,35,91,"OS"],[68,99,35,12],[69,0,36,9],[69,9,34,8],[69,15,37,13],[70,0,38,12],[70,15,38,17,"_nativeModule"],[70,28,38,12],[70,29,38,31,"setUpdateInterval"],[70,46,38,12],[70,47,38,49,"intervalMs"],[70,57,38,12],[71,0,39,9],[72,0,40,5],[80,20,42,13],[80,25,42,18,"_nativeModule"],[80,38,42,13],[80,39,42,32,"isAvailableAsync"],[80,55],[85,49,43,19],[85,54],[89,50,46,25],[89,55,46,30,"_nativeModule"],[89,68,46,25],[89,69,46,44,"isAvailableAsync"],[89,85,46,25],[89,87]]},"type":"js/module"}]}