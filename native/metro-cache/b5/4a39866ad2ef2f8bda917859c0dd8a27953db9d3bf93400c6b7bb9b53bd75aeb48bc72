{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractColor","data":{"isAsync":false}},{"name":"./extractOpacity","data":{"isAsync":false}},{"name":"./extractTransform","data":{"isAsync":false}},{"name":"../units","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractGradient;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"react\"));\n\n  var _extractColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./extractColor\"));\n\n  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractOpacity\"));\n\n  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./extractTransform\"));\n\n  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../units\"));\n\n  var percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\n\n  function percentToFloat(percent) {\n    if (typeof percent === 'number') {\n      return percent;\n    }\n\n    if (typeof percent === 'object' && typeof percent.__getAnimatedValue === 'function') {\n      return percent.__getAnimatedValue();\n    }\n\n    var matched = typeof percent === 'string' && percent.match(percentReg);\n\n    if (!matched) {\n      console.warn(\"\\\"\" + percent + \"\\\" is not a valid number or percentage string.\");\n      return 0;\n    }\n\n    return matched[2] ? matched[1] / 100 : +matched[1];\n  }\n\n  var offsetComparator = function offsetComparator(object, other) {\n    return object[0] - other[0];\n  };\n\n  function extractGradient(props, parent) {\n    var id = props.id,\n        children = props.children,\n        gradientTransform = props.gradientTransform,\n        transform = props.transform,\n        gradientUnits = props.gradientUnits;\n\n    if (!id) {\n      return null;\n    }\n\n    var stops = [];\n\n    var childArray = _react.Children.map(children, function (child) {\n      return _react.default.cloneElement(child, {\n        parent: parent\n      });\n    });\n\n    var l = childArray.length;\n\n    for (var i = 0; i < l; i++) {\n      var _childArray$i$props = childArray[i].props,\n          offset = _childArray$i$props.offset,\n          stopColor = _childArray$i$props.stopColor,\n          stopOpacity = _childArray$i$props.stopOpacity;\n      var offsetNumber = percentToFloat(offset);\n      var color = stopColor && (0, _extractColor.default)(stopColor);\n\n      if (typeof color !== 'number' || isNaN(offsetNumber)) {\n        console.warn(\"\\\"\" + stopColor + \"\\\" is not a valid color or \\\"\" + offset + \"\\\" is not a valid offset\");\n        continue;\n      }\n\n      var alpha = Math.round((0, _extractOpacity.default)(stopOpacity) * 255);\n      stops.push([offsetNumber, color & 0x00ffffff | alpha << 24]);\n    }\n\n    stops.sort(offsetComparator);\n    var gradient = [];\n    var k = stops.length;\n\n    for (var j = 0; j < k; j++) {\n      var s = stops[j];\n      gradient.push(s[0], s[1]);\n    }\n\n    return {\n      name: id,\n      gradient: gradient,\n      children: childArray,\n      gradientUnits: _units.default[gradientUnits] || 0,\n      gradientTransform: (0, _extractTransform.default)(gradientTransform || transform || props)\n    };\n  }\n});","map":[[11,0,1,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[19,0,6,0],[21,0,8,0],[21,6,8,6,"percentReg"],[21,16,8,16],[21,19,8,19],[21,66,8,0],[23,0,10,0],[23,11,10,9,"percentToFloat"],[23,25,10,0],[23,26,10,24,"percent"],[23,33,10,0],[23,35,10,33],[24,0,11,2],[24,8,11,6],[24,15,11,13,"percent"],[24,22,11,6],[24,27,11,25],[24,35,11,2],[24,37,11,35],[25,0,12,4],[25,13,12,11,"percent"],[25,20,12,4],[26,0,13,3],[28,0,14,2],[28,8,15,4],[28,15,15,11,"percent"],[28,22,15,4],[28,27,15,23],[28,35,15,4],[28,39,16,4],[28,46,16,11,"percent"],[28,53,16,18],[28,54,16,19,"__getAnimatedValue"],[28,72,16,4],[28,77,16,42],[28,87,14,2],[28,89,17,4],[29,0,18,4],[29,13,18,11,"percent"],[29,20,18,18],[29,21,18,19,"__getAnimatedValue"],[29,39,18,11],[29,41,18,4],[30,0,19,3],[32,0,20,2],[32,8,20,8,"matched"],[32,15,20,15],[32,18,20,18],[32,25,20,25,"percent"],[32,32,20,18],[32,37,20,37],[32,45,20,18],[32,49,20,49,"percent"],[32,56,20,56],[32,57,20,57,"match"],[32,62,20,49],[32,63,20,63,"percentReg"],[32,73,20,49],[32,74,20,2],[34,0,21,2],[34,8,21,6],[34,9,21,7,"matched"],[34,16,21,2],[34,18,21,16],[35,0,22,4,"console"],[35,6,22,4,"console"],[35,13,22,11],[35,14,22,12,"warn"],[35,18,22,4],[35,26,22,21,"percent"],[35,33,22,4],[36,0,23,4],[36,13,23,11],[36,14,23,4],[37,0,24,3],[39,0,26,2],[39,11,26,9,"matched"],[39,18,26,16],[39,19,26,17],[39,20,26,16],[39,21,26,9],[39,24,26,22,"matched"],[39,31,26,29],[39,32,26,30],[39,33,26,29],[39,34,26,22],[39,37,26,35],[39,40,26,9],[39,43,26,41],[39,44,26,42,"matched"],[39,51,26,49],[39,52,26,50],[39,53,26,49],[39,54,26,2],[40,0,27,1],[42,0,29,0],[42,6,29,6,"offsetComparator"],[42,22,29,22],[42,25,29,25],[42,34,29,6,"offsetComparator"],[42,50,29,25],[42,51,29,26,"object"],[42,57,29,25],[42,59,29,34,"other"],[42,64,29,25],[43,0,29,25],[43,11,29,44,"object"],[43,17,29,50],[43,18,29,51],[43,19,29,50],[43,20,29,44],[43,23,29,56,"other"],[43,28,29,61],[43,29,29,62],[43,30,29,61],[43,31,29,25],[44,0,29,25],[44,3,29,0],[46,0,31,15],[46,11,31,24,"extractGradient"],[46,26,31,15],[46,27,31,40,"props"],[46,32,31,15],[46,34,31,47,"parent"],[46,40,31,15],[46,42,31,55],[47,0,31,55],[47,8,32,10,"id"],[47,10,31,55],[47,13,32,72,"props"],[47,18,31,55],[47,19,32,10,"id"],[47,21,31,55],[48,0,31,55],[48,8,32,14,"children"],[48,16,31,55],[48,19,32,72,"props"],[48,24,31,55],[48,25,32,14,"children"],[48,33,31,55],[49,0,31,55],[49,8,32,24,"gradientTransform"],[49,25,31,55],[49,28,32,72,"props"],[49,33,31,55],[49,34,32,24,"gradientTransform"],[49,51,31,55],[50,0,31,55],[50,8,32,43,"transform"],[50,17,31,55],[50,20,32,72,"props"],[50,25,31,55],[50,26,32,43,"transform"],[50,35,31,55],[51,0,31,55],[51,8,32,54,"gradientUnits"],[51,21,31,55],[51,24,32,72,"props"],[51,29,31,55],[51,30,32,54,"gradientUnits"],[51,43,31,55],[53,0,33,2],[53,8,33,6],[53,9,33,7,"id"],[53,11,33,2],[53,13,33,11],[54,0,34,4],[54,13,34,11],[54,17,34,4],[55,0,35,3],[57,0,37,2],[57,8,37,8,"stops"],[57,13,37,13],[57,16,37,16],[57,18,37,2],[59,0,38,2],[59,8,38,8,"childArray"],[59,18,38,18],[59,21,38,21,"Children"],[59,37,38,30,"map"],[59,40,38,21],[59,41,38,34,"children"],[59,49,38,21],[59,51,38,44],[59,61,38,44,"child"],[59,66,38,49],[60,0,38,49],[60,13,39,4,"React"],[60,28,39,10,"cloneElement"],[60,40,39,4],[60,41,39,23,"child"],[60,46,39,4],[60,48,39,30],[61,0,40,6,"parent"],[61,8,40,6,"parent"],[61,14,40,12],[61,16,40,6,"parent"],[62,0,39,30],[62,7,39,4],[62,8,38,49],[63,0,38,49],[63,5,38,21],[63,6,38,2],[65,0,43,2],[65,8,43,8,"l"],[65,9,43,9],[65,12,43,12,"childArray"],[65,22,43,22],[65,23,43,23,"length"],[65,29,43,2],[67,0,44,2],[67,9,44,7],[67,13,44,11,"i"],[67,14,44,12],[67,17,44,15],[67,18,44,2],[67,20,44,18,"i"],[67,21,44,19],[67,24,44,22,"l"],[67,25,44,2],[67,27,44,25,"i"],[67,28,44,26],[67,30,44,2],[67,32,44,30],[68,0,44,30],[68,32,47,8,"childArray"],[68,42,47,18],[68,43,47,19,"i"],[68,44,47,18],[68,45,44,30],[68,46,46,6,"props"],[68,51,44,30],[69,0,44,30],[69,10,46,15,"offset"],[69,16,44,30],[69,39,46,15,"offset"],[69,45,44,30],[70,0,44,30],[70,10,46,23,"stopColor"],[70,19,44,30],[70,42,46,23,"stopColor"],[70,51,44,30],[71,0,44,30],[71,10,46,34,"stopOpacity"],[71,21,44,30],[71,44,46,34,"stopOpacity"],[71,55,44,30],[72,0,48,4],[72,10,48,10,"offsetNumber"],[72,22,48,22],[72,25,48,25,"percentToFloat"],[72,39,48,39],[72,40,48,40,"offset"],[72,46,48,39],[72,47,48,4],[73,0,49,4],[73,10,49,10,"color"],[73,15,49,15],[73,18,49,18,"stopColor"],[73,27,49,27],[73,31,49,31],[73,58,49,44,"stopColor"],[73,67,49,31],[73,68,49,4],[75,0,50,4],[75,10,50,8],[75,17,50,15,"color"],[75,22,50,8],[75,27,50,25],[75,35,50,8],[75,39,50,37,"isNaN"],[75,44,50,42],[75,45,50,43,"offsetNumber"],[75,57,50,42],[75,58,50,4],[75,60,50,58],[76,0,51,6,"console"],[76,8,51,6,"console"],[76,15,51,13],[76,16,51,14,"warn"],[76,20,51,6],[76,28,52,12,"stopColor"],[76,37,51,6],[76,74,52,51,"offset"],[76,80,51,6],[77,0,54,6],[78,0,55,5],[80,0,56,4],[80,10,56,10,"alpha"],[80,15,56,15],[80,18,56,18,"Math"],[80,22,56,22],[80,23,56,23,"round"],[80,28,56,18],[80,29,56,29],[80,58,56,44,"stopOpacity"],[80,69,56,29],[80,73,56,59],[80,76,56,18],[80,77,56,4],[81,0,57,4,"stops"],[81,6,57,4,"stops"],[81,11,57,9],[81,12,57,10,"push"],[81,16,57,4],[81,17,57,15],[81,18,57,16,"offsetNumber"],[81,30,57,15],[81,32,57,31,"color"],[81,37,57,36],[81,40,57,39],[81,50,57,30],[81,53,57,54,"alpha"],[81,58,57,59],[81,62,57,63],[81,64,57,15],[81,65,57,4],[82,0,58,3],[84,0,59,2,"stops"],[84,4,59,2,"stops"],[84,9,59,7],[84,10,59,8,"sort"],[84,14,59,2],[84,15,59,13,"offsetComparator"],[84,31,59,2],[85,0,61,2],[85,8,61,8,"gradient"],[85,16,61,16],[85,19,61,19],[85,21,61,2],[86,0,62,2],[86,8,62,8,"k"],[86,9,62,9],[86,12,62,12,"stops"],[86,17,62,17],[86,18,62,18,"length"],[86,24,62,2],[88,0,63,2],[88,9,63,7],[88,13,63,11,"j"],[88,14,63,12],[88,17,63,15],[88,18,63,2],[88,20,63,18,"j"],[88,21,63,19],[88,24,63,22,"k"],[88,25,63,2],[88,27,63,25,"j"],[88,28,63,26],[88,30,63,2],[88,32,63,30],[89,0,64,4],[89,10,64,10,"s"],[89,11,64,11],[89,14,64,14,"stops"],[89,19,64,19],[89,20,64,20,"j"],[89,21,64,19],[89,22,64,4],[90,0,65,4,"gradient"],[90,6,65,4,"gradient"],[90,14,65,12],[90,15,65,13,"push"],[90,19,65,4],[90,20,65,18,"s"],[90,21,65,19],[90,22,65,20],[90,23,65,19],[90,24,65,4],[90,26,65,24,"s"],[90,27,65,25],[90,28,65,26],[90,29,65,25],[90,30,65,4],[91,0,66,3],[93,0,68,2],[93,11,68,9],[94,0,69,4,"name"],[94,6,69,4,"name"],[94,10,69,8],[94,12,69,10,"id"],[94,14,68,9],[95,0,70,4,"gradient"],[95,6,70,4,"gradient"],[95,14,70,12],[95,16,70,4,"gradient"],[95,24,68,9],[96,0,71,4,"children"],[96,6,71,4,"children"],[96,14,71,12],[96,16,71,14,"childArray"],[96,26,68,9],[97,0,72,4,"gradientUnits"],[97,6,72,4,"gradientUnits"],[97,19,72,17],[97,21,72,19,"units"],[97,36,72,25,"gradientUnits"],[97,49,72,19],[97,54,72,43],[97,55,68,9],[98,0,73,4,"gradientTransform"],[98,6,73,4,"gradientTransform"],[98,23,73,21],[98,25,73,23],[98,56,74,6,"gradientTransform"],[98,73,74,23],[98,77,74,27,"transform"],[98,86,74,6],[98,90,74,40,"props"],[98,95,73,23],[99,0,68,9],[99,5,68,2],[100,0,77,1]]},"type":"js/module"}]}