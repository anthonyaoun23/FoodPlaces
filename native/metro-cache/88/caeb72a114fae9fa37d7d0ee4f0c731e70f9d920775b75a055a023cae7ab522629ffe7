{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-task-manager","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getStatusAsync = getStatusAsync;\n  exports.setMinimumIntervalAsync = setMinimumIntervalAsync;\n  exports.registerTaskAsync = registerTaskAsync;\n  exports.unregisterTaskAsync = unregisterTaskAsync;\n  exports.Status = exports.Result = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var TaskManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"expo-task-manager\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[4], \"@unimodules/core\");\n\n  var ExpoBackgroundFetch = _core.NativeModulesProxy.ExpoBackgroundFetch;\n  var BackgroundFetchResult;\n  exports.Result = BackgroundFetchResult;\n\n  (function (BackgroundFetchResult) {\n    BackgroundFetchResult[BackgroundFetchResult[\"NoData\"] = 1] = \"NoData\";\n    BackgroundFetchResult[BackgroundFetchResult[\"NewData\"] = 2] = \"NewData\";\n    BackgroundFetchResult[BackgroundFetchResult[\"Failed\"] = 3] = \"Failed\";\n  })(BackgroundFetchResult || (exports.Result = BackgroundFetchResult = {}));\n\n  var BackgroundFetchStatus;\n  exports.Status = BackgroundFetchStatus;\n\n  (function (BackgroundFetchStatus) {\n    BackgroundFetchStatus[BackgroundFetchStatus[\"Denied\"] = 1] = \"Denied\";\n    BackgroundFetchStatus[BackgroundFetchStatus[\"Restricted\"] = 2] = \"Restricted\";\n    BackgroundFetchStatus[BackgroundFetchStatus[\"Available\"] = 3] = \"Available\";\n  })(BackgroundFetchStatus || (exports.Status = BackgroundFetchStatus = {}));\n\n  function getStatusAsync() {\n    return _regenerator.default.async(function getStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(_core.Platform.OS !== 'ios')) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", BackgroundFetchStatus.Available);\n\n          case 2:\n            return _context.abrupt(\"return\", ExpoBackgroundFetch.getStatusAsync());\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function setMinimumIntervalAsync(minimumInterval) {\n    return _regenerator.default.async(function setMinimumIntervalAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_core.Platform.OS !== 'ios')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return _regenerator.default.awrap(ExpoBackgroundFetch.setMinimumIntervalAsync(minimumInterval));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function registerTaskAsync(taskName) {\n    var options,\n        _args3 = arguments;\n    return _regenerator.default.async(function registerTaskAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n            if (ExpoBackgroundFetch.registerTaskAsync) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('BackgroundFetch', 'registerTaskAsync');\n\n          case 3:\n            if (TaskManager.isTaskDefined(taskName)) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error(\"Task '\" + taskName + \"' is not defined. You must define a task using TaskManager.defineTask before registering.\");\n\n          case 5:\n            _context3.next = 7;\n            return _regenerator.default.awrap(ExpoBackgroundFetch.registerTaskAsync(taskName, options));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function unregisterTaskAsync(taskName) {\n    return _regenerator.default.async(function unregisterTaskAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (ExpoBackgroundFetch.unregisterTaskAsync) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('BackgroundFetch', 'unregisterTaskAsync');\n\n          case 2:\n            _context4.next = 4;\n            return _regenerator.default.awrap(ExpoBackgroundFetch.unregisterTaskAsync(taskName));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n});","map":[[17,0,1,0],[19,0,2,0],[21,6,4,8,"ExpoBackgroundFetch"],[21,25],[21,28,4,32,"NativeModulesProxy"],[21,52],[21,53,4,8,"ExpoBackgroundFetch"],[21,72],[22,0,5,0],[22,6,5,4,"BackgroundFetchResult"],[22,27,5,0],[25,0,6,0],[25,3,6,1],[25,13,6,11,"BackgroundFetchResult"],[25,34,6,1],[25,36,6,34],[26,0,7,4,"BackgroundFetchResult"],[26,4,7,4,"BackgroundFetchResult"],[26,25,7,25],[26,26,7,26,"BackgroundFetchResult"],[26,47,7,47],[26,48,7,48],[26,56,7,47],[26,57,7,26],[26,60,7,60],[26,61,7,25],[26,62,7,4],[26,65,7,65],[26,73,7,4],[27,0,8,4,"BackgroundFetchResult"],[27,4,8,4,"BackgroundFetchResult"],[27,25,8,25],[27,26,8,26,"BackgroundFetchResult"],[27,47,8,47],[27,48,8,48],[27,57,8,47],[27,58,8,26],[27,61,8,61],[27,62,8,25],[27,63,8,4],[27,66,8,66],[27,75,8,4],[28,0,9,4,"BackgroundFetchResult"],[28,4,9,4,"BackgroundFetchResult"],[28,25,9,25],[28,26,9,26,"BackgroundFetchResult"],[28,47,9,47],[28,48,9,48],[28,56,9,47],[28,57,9,26],[28,60,9,60],[28,61,9,25],[28,62,9,4],[28,65,9,65],[28,73,9,4],[29,0,10,1],[29,3,6,0],[29,5,10,3,"BackgroundFetchResult"],[29,26,10,24],[29,48,10,29,"BackgroundFetchResult"],[29,69,10,50],[29,72,10,53],[29,74,10,24],[29,75,6,0],[31,0,11,0],[31,6,11,4,"BackgroundFetchStatus"],[31,27,11,0],[34,0,12,0],[34,3,12,1],[34,13,12,11,"BackgroundFetchStatus"],[34,34,12,1],[34,36,12,34],[35,0,13,4,"BackgroundFetchStatus"],[35,4,13,4,"BackgroundFetchStatus"],[35,25,13,25],[35,26,13,26,"BackgroundFetchStatus"],[35,47,13,47],[35,48,13,48],[35,56,13,47],[35,57,13,26],[35,60,13,60],[35,61,13,25],[35,62,13,4],[35,65,13,65],[35,73,13,4],[36,0,14,4,"BackgroundFetchStatus"],[36,4,14,4,"BackgroundFetchStatus"],[36,25,14,25],[36,26,14,26,"BackgroundFetchStatus"],[36,47,14,47],[36,48,14,48],[36,60,14,47],[36,61,14,26],[36,64,14,64],[36,65,14,25],[36,66,14,4],[36,69,14,69],[36,81,14,4],[37,0,15,4,"BackgroundFetchStatus"],[37,4,15,4,"BackgroundFetchStatus"],[37,25,15,25],[37,26,15,26,"BackgroundFetchStatus"],[37,47,15,47],[37,48,15,48],[37,59,15,47],[37,60,15,26],[37,63,15,63],[37,64,15,25],[37,65,15,4],[37,68,15,68],[37,79,15,4],[38,0,16,1],[38,3,12,0],[38,5,16,3,"BackgroundFetchStatus"],[38,26,16,24],[38,48,16,29,"BackgroundFetchStatus"],[38,69,16,50],[38,72,16,53],[38,74,16,24],[38,75,12,0],[40,0,17,7],[40,11,17,22,"getStatusAsync"],[40,25,17,7],[41,0,17,7],[42,0,17,7],[43,0,17,7],[44,0,17,7],[45,0,17,7],[45,18,18,8,"Platform"],[45,33,18,17,"OS"],[45,35,18,8],[45,40,18,24],[45,45,17,7],[46,0,17,7],[47,0,17,7],[48,0,17,7],[50,0,17,7],[50,45,19,15,"BackgroundFetchStatus"],[50,66,19,36],[50,67,19,37,"Available"],[50,76,17,7],[52,0,17,7],[53,0,17,7],[53,45,21,11,"ExpoBackgroundFetch"],[53,64,21,30],[53,65,21,31,"getStatusAsync"],[53,79,21,11],[53,81,17,7],[55,0,17,7],[56,0,17,7],[57,0,17,7],[58,0,17,7],[59,0,17,7],[60,0,17,7],[61,0,17,7],[63,0,23,7],[63,11,23,22,"setMinimumIntervalAsync"],[63,34,23,7],[63,35,23,46,"minimumInterval"],[63,50,23,7],[64,0,23,7],[65,0,23,7],[66,0,23,7],[67,0,23,7],[68,0,23,7],[68,18,24,8,"Platform"],[68,33,24,17,"OS"],[68,35,24,8],[68,40,24,24],[68,45,23,7],[69,0,23,7],[70,0,23,7],[71,0,23,7],[73,0,23,7],[75,0,23,7],[76,0,23,7],[77,0,23,7],[77,46,27,10,"ExpoBackgroundFetch"],[77,65,27,29],[77,66,27,30,"setMinimumIntervalAsync"],[77,89,27,10],[77,90,27,54,"minimumInterval"],[77,105,27,10],[77,106,23,7],[79,0,23,7],[80,0,23,7],[81,0,23,7],[82,0,23,7],[83,0,23,7],[84,0,23,7],[85,0,23,7],[87,0,29,7],[87,11,29,22,"registerTaskAsync"],[87,28,29,7],[87,29,29,40,"taskName"],[87,37,29,7],[88,0,29,7],[89,0,29,7],[90,0,29,7],[91,0,29,7],[92,0,29,7],[93,0,29,7],[94,0,29,50,"options"],[94,12,29,50,"options"],[94,19,29,7],[94,81,29,60],[94,83,29,7],[96,0,29,7],[96,16,30,9,"ExpoBackgroundFetch"],[96,35,30,28],[96,36,30,29,"registerTaskAsync"],[96,53,29,7],[97,0,29,7],[98,0,29,7],[99,0,29,7],[101,0,29,7],[101,18,31,14],[101,22,31,18,"UnavailabilityError"],[101,47,31,14],[101,48,31,38],[101,65,31,14],[101,67,31,57],[101,86,31,14],[101,87,29,7],[103,0,29,7],[104,0,29,7],[104,16,33,9,"TaskManager"],[104,27,33,20],[104,28,33,21,"isTaskDefined"],[104,41,33,9],[104,42,33,35,"taskName"],[104,50,33,9],[104,51,29,7],[105,0,29,7],[106,0,29,7],[107,0,29,7],[109,0,29,7],[109,18,34,14],[109,22,34,18,"Error"],[109,27,34,14],[109,39,34,33,"taskName"],[109,47,34,14],[109,142,29,7],[111,0,29,7],[112,0,29,7],[113,0,29,7],[113,46,36,10,"ExpoBackgroundFetch"],[113,65,36,29],[113,66,36,30,"registerTaskAsync"],[113,83,36,10],[113,84,36,48,"taskName"],[113,92,36,10],[113,94,36,58,"options"],[113,101,36,10],[113,102,29,7],[115,0,29,7],[116,0,29,7],[117,0,29,7],[118,0,29,7],[119,0,29,7],[120,0,29,7],[121,0,29,7],[123,0,38,7],[123,11,38,22,"unregisterTaskAsync"],[123,30,38,7],[123,31,38,42,"taskName"],[123,39,38,7],[124,0,38,7],[125,0,38,7],[126,0,38,7],[127,0,38,7],[128,0,38,7],[128,16,39,9,"ExpoBackgroundFetch"],[128,35,39,28],[128,36,39,29,"unregisterTaskAsync"],[128,55,38,7],[129,0,38,7],[130,0,38,7],[131,0,38,7],[133,0,38,7],[133,18,40,14],[133,22,40,18,"UnavailabilityError"],[133,47,40,14],[133,48,40,38],[133,65,40,14],[133,67,40,57],[133,88,40,14],[133,89,38,7],[135,0,38,7],[136,0,38,7],[137,0,38,7],[137,46,42,10,"ExpoBackgroundFetch"],[137,65,42,29],[137,66,42,30,"unregisterTaskAsync"],[137,85,42,10],[137,86,42,50,"taskName"],[137,94,42,10],[137,95,38,7],[139,0,38,7],[140,0,38,7],[141,0,38,7],[142,0,38,7],[143,0,38,7],[144,0,38,7],[145,0,38,7]]},"type":"js/module"}]}