{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"./ExponentAV","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  exports.PlaybackMixin = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports.PitchCorrectionQuality = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./ExponentAV\"));\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[4], \"expo-asset\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@unimodules/core\");\n\n  var PitchCorrectionQuality;\n  exports.PitchCorrectionQuality = PitchCorrectionQuality;\n\n  (function (PitchCorrectionQuality) {\n    PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.Low] = \"Low\";\n    PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.Medium] = \"Medium\";\n    PitchCorrectionQuality[PitchCorrectionQuality[\"High\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.High] = \"High\";\n  })(PitchCorrectionQuality || (exports.PitchCorrectionQuality = PitchCorrectionQuality = {}));\n\n  var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n  var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    isMuted: false,\n    isLooping: false\n  };\n  exports._DEFAULT_INITIAL_PLAYBACK_STATUS = _DEFAULT_INITIAL_PLAYBACK_STATUS;\n\n  function getNativeSourceFromSource(source) {\n    var uri = null;\n    var overridingExtension = null;\n    var headers;\n\n    if (typeof source === 'string' && _core.Platform.OS === 'web') {\n      return {\n        uri: source,\n        overridingExtension: overridingExtension,\n        headers: headers\n      };\n    }\n\n    var asset = _getAssetFromPlaybackSource(source);\n\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n\n    if (uri == null) {\n      return null;\n    }\n\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n\n    return {\n      uri: uri,\n      overridingExtension: overridingExtension,\n      headers: headers\n    };\n  }\n\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n\n    var asset = null;\n\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n\n    return asset;\n  }\n\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n  }\n\n  function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n    var fullInitialStatus, asset, nativeSource;\n    return _regenerator.default.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : (0, _objectSpread2.default)({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, initialStatus);\n            assertStatusValuesInBounds(fullInitialStatus);\n\n            if (!(typeof source === 'string' && _core.Platform.OS === 'web')) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              nativeSource: {\n                uri: source,\n                overridingExtension: null\n              },\n              fullInitialStatus: fullInitialStatus\n            });\n\n          case 4:\n            asset = _getAssetFromPlaybackSource(source);\n\n            if (!(downloadFirst && asset)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 8;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 8:\n            nativeSource = getNativeSourceFromSource(source);\n\n            if (!(nativeSource === null)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"Cannot load an AV asset from a null playback source\");\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              nativeSource: nativeSource,\n              fullInitialStatus: fullInitialStatus\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getUnloadedStatus() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (0, _objectSpread2.default)({\n      isLoaded: false\n    }, error ? {\n      error: error\n    } : null);\n  }\n\n  var PlaybackMixin = {\n    playAsync: function playAsync() {\n      return _regenerator.default.async(function playAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: true\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    },\n    playFromPositionAsync: function playFromPositionAsync(positionMillis) {\n      var tolerances,\n          _args3 = arguments;\n      return _regenerator.default.async(function playFromPositionAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tolerances = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              return _context3.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                shouldPlay: true,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    },\n    pauseAsync: function pauseAsync() {\n      return _regenerator.default.async(function pauseAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    },\n    stopAsync: function stopAsync() {\n      return _regenerator.default.async(function stopAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: 0,\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    },\n    setPositionAsync: function setPositionAsync(positionMillis) {\n      var tolerances,\n          _args6 = arguments;\n      return _regenerator.default.async(function setPositionAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              tolerances = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              return _context6.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this);\n    },\n    setRateAsync: function setRateAsync(rate) {\n      var shouldCorrectPitch,\n          pitchCorrectionQuality,\n          _args7 = arguments;\n      return _regenerator.default.async(function setRateAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              shouldCorrectPitch = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : false;\n              pitchCorrectionQuality = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : PitchCorrectionQuality.Low;\n              return _context7.abrupt(\"return\", this.setStatusAsync({\n                rate: rate,\n                shouldCorrectPitch: shouldCorrectPitch,\n                pitchCorrectionQuality: pitchCorrectionQuality\n              }));\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this);\n    },\n    setVolumeAsync: function setVolumeAsync(volume) {\n      return _regenerator.default.async(function setVolumeAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this.setStatusAsync({\n                volume: volume\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this);\n    },\n    setIsMutedAsync: function setIsMutedAsync(isMuted) {\n      return _regenerator.default.async(function setIsMutedAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", this.setStatusAsync({\n                isMuted: isMuted\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this);\n    },\n    setIsLoopingAsync: function setIsLoopingAsync(isLooping) {\n      return _regenerator.default.async(function setIsLoopingAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", this.setStatusAsync({\n                isLooping: isLooping\n              }));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this);\n    },\n    setProgressUpdateIntervalAsync: function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      return _regenerator.default.async(function setProgressUpdateIntervalAsync$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", this.setStatusAsync({\n                progressUpdateIntervalMillis: progressUpdateIntervalMillis\n              }));\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this);\n    }\n  };\n  exports.PlaybackMixin = PlaybackMixin;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,12,7],[23,6,12,11,"PitchCorrectionQuality"],[23,28,12,7],[26,0,13,0],[26,3,13,1],[26,13,13,11,"PitchCorrectionQuality"],[26,35,13,1],[26,37,13,35],[27,0,14,4,"PitchCorrectionQuality"],[27,4,14,4,"PitchCorrectionQuality"],[27,26,14,26],[27,27,14,27,"PitchCorrectionQuality"],[27,49,14,49],[27,50,14,50],[27,55,14,49],[27,56,14,27],[27,59,14,59,"ExponentAV"],[27,82,14,73,"ExponentAV"],[27,102,14,84,"Qualities"],[27,111,14,59],[27,115,14,97,"ExponentAV"],[27,135,14,108,"Qualities"],[27,144,14,97],[27,145,14,118,"Low"],[27,148,14,26],[27,149,14,4],[27,152,14,125],[27,157,14,4],[28,0,15,4,"PitchCorrectionQuality"],[28,4,15,4,"PitchCorrectionQuality"],[28,26,15,26],[28,27,15,27,"PitchCorrectionQuality"],[28,49,15,49],[28,50,15,50],[28,58,15,49],[28,59,15,27],[28,62,15,62,"ExponentAV"],[28,85,15,76,"ExponentAV"],[28,105,15,87,"Qualities"],[28,114,15,62],[28,118,15,100,"ExponentAV"],[28,138,15,111,"Qualities"],[28,147,15,100],[28,148,15,121,"Medium"],[28,154,15,26],[28,155,15,4],[28,158,15,131],[28,166,15,4],[29,0,16,4,"PitchCorrectionQuality"],[29,4,16,4,"PitchCorrectionQuality"],[29,26,16,26],[29,27,16,27,"PitchCorrectionQuality"],[29,49,16,49],[29,50,16,50],[29,56,16,49],[29,57,16,27],[29,60,16,60,"ExponentAV"],[29,83,16,74,"ExponentAV"],[29,103,16,85,"Qualities"],[29,112,16,60],[29,116,16,98,"ExponentAV"],[29,136,16,109,"Qualities"],[29,145,16,98],[29,146,16,119,"High"],[29,150,16,26],[29,151,16,4],[29,154,16,127],[29,160,16,4],[30,0,17,1],[30,3,13,0],[30,5,17,3,"PitchCorrectionQuality"],[30,27,17,25],[30,65,17,30,"PitchCorrectionQuality"],[30,87,17,52],[30,90,17,55],[30,92,17,25],[30,93,13,0],[32,0,18,7],[32,6,18,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[32,46,18,53],[32,49,18,56],[32,52,18,7],[34,0,19,7],[34,6,19,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[34,38,19,45],[34,41,19,48],[35,0,20,4,"positionMillis"],[35,4,20,4,"positionMillis"],[35,18,20,18],[35,20,20,20],[35,21,19,48],[36,0,21,4,"progressUpdateIntervalMillis"],[36,4,21,4,"progressUpdateIntervalMillis"],[36,32,21,32],[36,34,21,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[36,74,19,48],[37,0,22,4,"shouldPlay"],[37,4,22,4,"shouldPlay"],[37,14,22,14],[37,16,22,16],[37,21,19,48],[38,0,23,4,"rate"],[38,4,23,4,"rate"],[38,8,23,8],[38,10,23,10],[38,13,19,48],[39,0,24,4,"shouldCorrectPitch"],[39,4,24,4,"shouldCorrectPitch"],[39,22,24,22],[39,24,24,24],[39,29,19,48],[40,0,25,4,"volume"],[40,4,25,4,"volume"],[40,10,25,10],[40,12,25,12],[40,15,19,48],[41,0,26,4,"isMuted"],[41,4,26,4,"isMuted"],[41,11,26,11],[41,13,26,13],[41,18,19,48],[42,0,27,4,"isLooping"],[42,4,27,4,"isLooping"],[42,13,27,13],[42,15,27,15],[43,0,19,48],[43,3,19,7],[46,0,29,7],[46,11,29,16,"getNativeSourceFromSource"],[46,36,29,7],[46,37,29,42,"source"],[46,43,29,7],[46,45,29,50],[47,0,30,4],[47,8,30,8,"uri"],[47,11,30,11],[47,14,30,14],[47,18,30,4],[48,0,31,4],[48,8,31,8,"overridingExtension"],[48,27,31,27],[48,30,31,30],[48,34,31,4],[49,0,32,4],[49,8,32,8,"headers"],[49,15,32,4],[51,0,33,4],[51,8,33,8],[51,15,33,15,"source"],[51,21,33,8],[51,26,33,26],[51,34,33,8],[51,38,33,38,"Platform"],[51,53,33,47,"OS"],[51,55,33,38],[51,60,33,54],[51,65,33,4],[51,67,33,61],[52,0,34,8],[52,13,34,15],[53,0,35,12,"uri"],[53,8,35,12,"uri"],[53,11,35,15],[53,13,35,17,"source"],[53,19,34,15],[54,0,36,12,"overridingExtension"],[54,8,36,12,"overridingExtension"],[54,27,36,31],[54,29,36,12,"overridingExtension"],[54,48,34,15],[55,0,37,12,"headers"],[55,8,37,12,"headers"],[55,15,37,19],[55,17,37,12,"headers"],[56,0,34,15],[56,7,34,8],[57,0,39,5],[59,0,40,4],[59,8,40,8,"asset"],[59,13,40,13],[59,16,40,16,"_getAssetFromPlaybackSource"],[59,43,40,43],[59,44,40,44,"source"],[59,50,40,43],[59,51,40,4],[61,0,41,4],[61,8,41,8,"asset"],[61,13,41,13],[61,17,41,17],[61,21,41,4],[61,23,41,23],[62,0,42,8,"uri"],[62,6,42,8,"uri"],[62,9,42,11],[62,12,42,14,"asset"],[62,17,42,19],[62,18,42,20,"localUri"],[62,26,42,14],[62,30,42,32,"asset"],[62,35,42,37],[62,36,42,38,"uri"],[62,39,42,8],[63,0,43,5],[63,5,41,4],[63,11,44,9],[63,15,44,13,"source"],[63,21,44,19],[63,25,44,23],[63,29,44,13],[63,33,45,8],[63,40,45,15,"source"],[63,46,45,8],[63,51,45,26],[63,59,44,13],[63,63,46,8],[63,72,46,17,"source"],[63,78,44,13],[63,82,47,8],[63,89,47,15,"source"],[63,95,47,21],[63,96,47,22,"uri"],[63,99,47,8],[63,104,47,30],[63,112,44,9],[63,114,47,40],[64,0,48,8,"uri"],[64,6,48,8,"uri"],[64,9,48,11],[64,12,48,14,"source"],[64,18,48,20],[64,19,48,21,"uri"],[64,22,48,8],[65,0,49,5],[67,0,50,4],[67,8,50,8,"uri"],[67,11,50,11],[67,15,50,15],[67,19,50,4],[67,21,50,21],[68,0,51,8],[68,13,51,15],[68,17,51,8],[69,0,52,5],[71,0,53,4],[71,8,53,8,"source"],[71,14,53,14],[71,18,53,18],[71,22,53,8],[71,26,54,8],[71,33,54,15,"source"],[71,39,54,8],[71,44,54,26],[71,52,53,8],[71,56,55,8],[71,90,55,42,"source"],[71,96,53,8],[71,100,56,8],[71,107,56,15,"source"],[71,113,56,21],[71,114,56,22,"overrideFileExtensionAndroid"],[71,142,56,8],[71,147,56,55],[71,155,53,4],[71,157,56,65],[72,0,57,8,"overridingExtension"],[72,6,57,8,"overridingExtension"],[72,25,57,27],[72,28,57,30,"source"],[72,34,57,36],[72,35,57,37,"overrideFileExtensionAndroid"],[72,63,57,8],[73,0,58,5],[75,0,59,4],[75,8,59,8,"source"],[75,14,59,14],[75,18,59,18],[75,22,59,8],[75,26,60,8],[75,33,60,15,"source"],[75,39,60,8],[75,44,60,26],[75,52,59,8],[75,56,61,8],[75,69,61,21,"source"],[75,75,59,8],[75,79,62,8],[75,86,62,15,"source"],[75,92,62,21],[75,93,62,22,"headers"],[75,100,62,8],[75,105,62,34],[75,113,59,4],[75,115,62,44],[76,0,63,8,"headers"],[76,6,63,8,"headers"],[76,13,63,15],[76,16,63,18,"source"],[76,22,63,24],[76,23,63,25,"headers"],[76,30,63,8],[77,0,64,5],[79,0,65,4],[79,11,65,11],[80,0,65,13,"uri"],[80,6,65,13,"uri"],[80,9,65,16],[80,11,65,13,"uri"],[80,14,65,11],[81,0,65,18,"overridingExtension"],[81,6,65,18,"overridingExtension"],[81,25,65,37],[81,27,65,18,"overridingExtension"],[81,46,65,11],[82,0,65,39,"headers"],[82,6,65,39,"headers"],[82,13,65,46],[82,15,65,39,"headers"],[83,0,65,11],[83,5,65,4],[84,0,66,1],[86,0,67,0],[86,11,67,9,"_getAssetFromPlaybackSource"],[86,38,67,0],[86,39,67,37,"source"],[86,45,67,0],[86,47,67,45],[87,0,68,4],[87,8,68,8,"source"],[87,14,68,14],[87,18,68,18],[87,22,68,4],[87,24,68,24],[88,0,69,8],[88,13,69,15],[88,17,69,8],[89,0,70,5],[91,0,71,4],[91,8,71,8,"asset"],[91,13,71,13],[91,16,71,16],[91,20,71,4],[93,0,72,4],[93,8,72,8],[93,15,72,15,"source"],[93,21,72,8],[93,26,72,26],[93,34,72,4],[93,36,72,36],[94,0,73,8,"asset"],[94,6,73,8,"asset"],[94,11,73,13],[94,14,73,16,"Asset"],[94,31,73,22,"fromModule"],[94,41,73,16],[94,42,73,33,"source"],[94,48,73,16],[94,49,73,8],[95,0,74,5],[95,5,72,4],[95,11,75,9],[95,15,75,13,"source"],[95,21,75,19],[95,33,75,31,"Asset"],[95,49,75,9],[95,51,75,38],[96,0,76,8,"asset"],[96,6,76,8,"asset"],[96,11,76,13],[96,14,76,16,"source"],[96,20,76,8],[97,0,77,5],[99,0,78,4],[99,11,78,11,"asset"],[99,16,78,4],[100,0,79,1],[102,0,80,7],[102,11,80,16,"assertStatusValuesInBounds"],[102,37,80,7],[102,38,80,43,"status"],[102,44,80,7],[102,46,80,51],[103,0,81,4],[103,8,81,8],[103,15,81,15,"status"],[103,21,81,21],[103,22,81,22,"rate"],[103,26,81,8],[103,31,81,31],[103,39,81,8],[103,44,81,44,"status"],[103,50,81,50],[103,51,81,51,"rate"],[103,55,81,44],[103,58,81,58],[103,59,81,44],[103,63,81,63,"status"],[103,69,81,69],[103,70,81,70,"rate"],[103,74,81,63],[103,77,81,77],[103,79,81,8],[103,80,81,4],[103,82,81,82],[104,0,82,8],[104,12,82,14],[104,16,82,18,"RangeError"],[104,26,82,14],[104,27,82,29],[104,68,82,14],[104,69,82,8],[105,0,83,5],[107,0,84,4],[107,8,84,8],[107,15,84,15,"status"],[107,21,84,21],[107,22,84,22,"volume"],[107,28,84,8],[107,33,84,33],[107,41,84,8],[107,46,84,46,"status"],[107,52,84,52],[107,53,84,53,"volume"],[107,59,84,46],[107,62,84,62],[107,63,84,46],[107,67,84,67,"status"],[107,73,84,73],[107,74,84,74,"volume"],[107,80,84,67],[107,83,84,83],[107,84,84,8],[107,85,84,4],[107,87,84,87],[108,0,85,8],[108,12,85,14],[108,16,85,18,"RangeError"],[108,26,85,14],[108,27,85,29],[108,69,85,14],[108,70,85,8],[109,0,86,5],[110,0,87,1],[112,0,88,7],[112,11,88,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[112,58,88,7],[112,59,88,70,"source"],[112,65,88,7],[112,67,88,78,"initialStatus"],[112,80,88,7],[112,82,88,93,"downloadFirst"],[112,95,88,7],[113,0,88,7],[114,0,88,7],[115,0,88,7],[116,0,88,7],[117,0,88,7],[118,0,90,10,"fullInitialStatus"],[118,12,90,10,"fullInitialStatus"],[118,29,88,7],[118,32,90,30,"initialStatus"],[118,45,90,43],[118,49,90,47],[118,53,90,30],[118,56,91,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[118,88,90,30],[118,123,93,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[118,155,90,30],[118,157,94,15,"initialStatus"],[118,170,90,30],[118,171,88,7],[119,0,96,4,"assertStatusValuesInBounds"],[119,12,96,4,"assertStatusValuesInBounds"],[119,38,96,30],[119,39,96,31,"fullInitialStatus"],[119,56,96,30],[119,57,96,4],[121,0,88,7],[121,18,97,8],[121,25,97,15,"source"],[121,31,97,8],[121,36,97,26],[121,44,97,8],[121,48,97,38,"Platform"],[121,63,97,47,"OS"],[121,65,97,38],[121,70,97,54],[121,75,88,7],[122,0,88,7],[123,0,88,7],[124,0,88,7],[126,0,88,7],[126,45,98,15],[127,0,99,12,"nativeSource"],[127,14,99,12,"nativeSource"],[127,26,99,24],[127,28,99,26],[128,0,100,16,"uri"],[128,16,100,16,"uri"],[128,19,100,19],[128,21,100,21,"source"],[128,27,99,26],[129,0,101,16,"overridingExtension"],[129,16,101,16,"overridingExtension"],[129,35,101,35],[129,37,101,37],[130,0,99,26],[130,15,98,15],[131,0,103,12,"fullInitialStatus"],[131,14,103,12,"fullInitialStatus"],[131,31,103,29],[131,33,103,12,"fullInitialStatus"],[132,0,98,15],[132,13,88,7],[134,0,88,7],[135,0,107,8,"asset"],[135,12,107,8,"asset"],[135,17,88,7],[135,20,107,16,"_getAssetFromPlaybackSource"],[135,47,107,43],[135,48,107,44,"source"],[135,54,107,43],[135,55,88,7],[137,0,88,7],[137,18,108,8,"downloadFirst"],[137,31,108,21],[137,35,108,25,"asset"],[137,40,88,7],[138,0,88,7],[139,0,88,7],[140,0,88,7],[142,0,88,7],[143,0,88,7],[143,46,110,14,"asset"],[143,51,110,19],[143,52,110,20,"downloadAsync"],[143,65,110,14],[143,67,88,7],[145,0,88,7],[146,0,113,10,"nativeSource"],[146,12,113,10,"nativeSource"],[146,24,88,7],[146,27,113,25,"getNativeSourceFromSource"],[146,52,113,50],[146,53,113,51,"source"],[146,59,113,50],[146,60,88,7],[148,0,88,7],[148,18,114,8,"nativeSource"],[148,30,114,20],[148,35,114,25],[148,39,88,7],[149,0,88,7],[150,0,88,7],[151,0,88,7],[153,0,88,7],[153,18,115,14],[153,22,115,18,"Error"],[153,27,115,14],[153,82,88,7],[155,0,88,7],[156,0,88,7],[156,45,117,11],[157,0,117,13,"nativeSource"],[157,14,117,13,"nativeSource"],[157,26,117,25],[157,28,117,13,"nativeSource"],[157,40,117,11],[158,0,117,27,"fullInitialStatus"],[158,14,117,27,"fullInitialStatus"],[158,31,117,44],[158,33,117,27,"fullInitialStatus"],[159,0,117,11],[159,13,88,7],[161,0,88,7],[162,0,88,7],[163,0,88,7],[164,0,88,7],[165,0,88,7],[166,0,88,7],[167,0,88,7],[169,0,119,7],[169,11,119,16,"getUnloadedStatus"],[169,28,119,7],[169,31,119,48],[170,0,119,48],[170,8,119,34,"error"],[170,13,119,48],[170,84,119,42],[170,88,119,48],[171,0,120,4],[172,0,121,8,"isLoaded"],[172,6,121,8,"isLoaded"],[172,14,121,16],[172,16,121,18],[173,0,120,4],[173,7,122,12,"error"],[173,12,122,17],[173,15,122,20],[174,0,122,22,"error"],[174,6,122,22,"error"],[174,11,122,27],[174,13,122,22,"error"],[175,0,122,20],[175,5,122,17],[175,8,122,32],[175,12,120,4],[176,0,124,1],[178,0,129,7],[178,6,129,13,"PlaybackMixin"],[178,19,129,26],[178,22,129,29],[179,0,130,10,"playAsync"],[179,4,130,10,"playAsync"],[179,13,129,29],[180,0,129,29],[181,0,129,29],[182,0,129,29],[183,0,129,29],[184,0,129,29],[184,48,131,15],[184,53,131,20,"setStatusAsync"],[184,67,131,15],[184,68,131,35],[185,0,131,37,"shouldPlay"],[185,16,131,37,"shouldPlay"],[185,26,131,47],[185,28,131,49],[186,0,131,35],[186,15,131,15],[186,16,129,29],[188,0,129,29],[189,0,129,29],[190,0,129,29],[191,0,129,29],[192,0,129,29],[193,0,129,29],[194,0,129,29],[195,0,133,10,"playFromPositionAsync"],[195,4,133,10,"playFromPositionAsync"],[195,25,129,29],[195,58,133,32,"positionMillis"],[195,72,129,29],[196,0,129,29],[197,0,129,29],[198,0,129,29],[199,0,129,29],[200,0,129,29],[201,0,129,29],[202,0,133,48,"tolerances"],[202,14,133,48,"tolerances"],[202,24,129,29],[202,86,133,61],[202,88,129,29],[203,0,129,29],[203,48,134,15],[203,53,134,20,"setStatusAsync"],[203,67,134,15],[203,68,134,35],[204,0,135,12,"positionMillis"],[204,16,135,12,"positionMillis"],[204,30,135,26],[204,32,135,12,"positionMillis"],[204,46,134,35],[205,0,136,12,"shouldPlay"],[205,16,136,12,"shouldPlay"],[205,26,136,22],[205,28,136,24],[205,32,134,35],[206,0,137,12,"seekMillisToleranceAfter"],[206,16,137,12,"seekMillisToleranceAfter"],[206,40,137,36],[206,42,137,38,"tolerances"],[206,52,137,48],[206,53,137,49,"toleranceMillisAfter"],[206,73,134,35],[207,0,138,12,"seekMillisToleranceBefore"],[207,16,138,12,"seekMillisToleranceBefore"],[207,41,138,37],[207,43,138,39,"tolerances"],[207,53,138,49],[207,54,138,50,"toleranceMillisBefore"],[208,0,134,35],[208,15,134,15],[208,16,129,29],[210,0,129,29],[211,0,129,29],[212,0,129,29],[213,0,129,29],[214,0,129,29],[215,0,129,29],[216,0,129,29],[217,0,141,10,"pauseAsync"],[217,4,141,10,"pauseAsync"],[217,14,129,29],[218,0,129,29],[219,0,129,29],[220,0,129,29],[221,0,129,29],[222,0,129,29],[222,48,142,15],[222,53,142,20,"setStatusAsync"],[222,67,142,15],[222,68,142,35],[223,0,142,37,"shouldPlay"],[223,16,142,37,"shouldPlay"],[223,26,142,47],[223,28,142,49],[224,0,142,35],[224,15,142,15],[224,16,129,29],[226,0,129,29],[227,0,129,29],[228,0,129,29],[229,0,129,29],[230,0,129,29],[231,0,129,29],[232,0,129,29],[233,0,144,10,"stopAsync"],[233,4,144,10,"stopAsync"],[233,13,129,29],[234,0,129,29],[235,0,129,29],[236,0,129,29],[237,0,129,29],[238,0,129,29],[238,48,145,15],[238,53,145,20,"setStatusAsync"],[238,67,145,15],[238,68,145,35],[239,0,145,37,"positionMillis"],[239,16,145,37,"positionMillis"],[239,30,145,51],[239,32,145,53],[239,33,145,35],[240,0,145,56,"shouldPlay"],[240,16,145,56,"shouldPlay"],[240,26,145,66],[240,28,145,68],[241,0,145,35],[241,15,145,15],[241,16,129,29],[243,0,129,29],[244,0,129,29],[245,0,129,29],[246,0,129,29],[247,0,129,29],[248,0,129,29],[249,0,129,29],[250,0,147,10,"setPositionAsync"],[250,4,147,10,"setPositionAsync"],[250,20,129,29],[250,48,147,27,"positionMillis"],[250,62,129,29],[251,0,129,29],[252,0,129,29],[253,0,129,29],[254,0,129,29],[255,0,129,29],[256,0,129,29],[257,0,147,43,"tolerances"],[257,14,147,43,"tolerances"],[257,24,129,29],[257,86,147,56],[257,88,129,29],[258,0,129,29],[258,48,148,15],[258,53,148,20,"setStatusAsync"],[258,67,148,15],[258,68,148,35],[259,0,149,12,"positionMillis"],[259,16,149,12,"positionMillis"],[259,30,149,26],[259,32,149,12,"positionMillis"],[259,46,148,35],[260,0,150,12,"seekMillisToleranceAfter"],[260,16,150,12,"seekMillisToleranceAfter"],[260,40,150,36],[260,42,150,38,"tolerances"],[260,52,150,48],[260,53,150,49,"toleranceMillisAfter"],[260,73,148,35],[261,0,151,12,"seekMillisToleranceBefore"],[261,16,151,12,"seekMillisToleranceBefore"],[261,41,151,37],[261,43,151,39,"tolerances"],[261,53,151,49],[261,54,151,50,"toleranceMillisBefore"],[262,0,148,35],[262,15,148,15],[262,16,129,29],[264,0,129,29],[265,0,129,29],[266,0,129,29],[267,0,129,29],[268,0,129,29],[269,0,129,29],[270,0,129,29],[271,0,154,10,"setRateAsync"],[271,4,154,10,"setRateAsync"],[271,16,129,29],[271,40,154,23,"rate"],[271,44,129,29],[272,0,129,29],[273,0,129,29],[274,0,129,29],[275,0,129,29],[276,0,129,29],[277,0,129,29],[278,0,129,29],[279,0,154,29,"shouldCorrectPitch"],[279,14,154,29,"shouldCorrectPitch"],[279,32,129,29],[279,94,154,50],[279,99,129,29],[280,0,154,57,"pitchCorrectionQuality"],[280,14,154,57,"pitchCorrectionQuality"],[280,36,129,29],[280,98,154,82,"PitchCorrectionQuality"],[280,120,154,104],[280,121,154,105,"Low"],[280,124,129,29],[281,0,129,29],[281,48,155,15],[281,53,155,20,"setStatusAsync"],[281,67,155,15],[281,68,155,35],[282,0,156,12,"rate"],[282,16,156,12,"rate"],[282,20,156,16],[282,22,156,12,"rate"],[282,26,155,35],[283,0,157,12,"shouldCorrectPitch"],[283,16,157,12,"shouldCorrectPitch"],[283,34,157,30],[283,36,157,12,"shouldCorrectPitch"],[283,54,155,35],[284,0,158,12,"pitchCorrectionQuality"],[284,16,158,12,"pitchCorrectionQuality"],[284,38,158,34],[284,40,158,12,"pitchCorrectionQuality"],[285,0,155,35],[285,15,155,15],[285,16,129,29],[287,0,129,29],[288,0,129,29],[289,0,129,29],[290,0,129,29],[291,0,129,29],[292,0,129,29],[293,0,129,29],[294,0,161,10,"setVolumeAsync"],[294,4,161,10,"setVolumeAsync"],[294,18,129,29],[294,44,161,25,"volume"],[294,50,129,29],[295,0,129,29],[296,0,129,29],[297,0,129,29],[298,0,129,29],[299,0,129,29],[299,48,162,15],[299,53,162,20,"setStatusAsync"],[299,67,162,15],[299,68,162,35],[300,0,162,37,"volume"],[300,16,162,37,"volume"],[300,22,162,43],[300,24,162,37,"volume"],[301,0,162,35],[301,15,162,15],[301,16,129,29],[303,0,129,29],[304,0,129,29],[305,0,129,29],[306,0,129,29],[307,0,129,29],[308,0,129,29],[309,0,129,29],[310,0,164,10,"setIsMutedAsync"],[310,4,164,10,"setIsMutedAsync"],[310,19,129,29],[310,46,164,26,"isMuted"],[310,53,129,29],[311,0,129,29],[312,0,129,29],[313,0,129,29],[314,0,129,29],[315,0,129,29],[315,48,165,15],[315,53,165,20,"setStatusAsync"],[315,67,165,15],[315,68,165,35],[316,0,165,37,"isMuted"],[316,16,165,37,"isMuted"],[316,23,165,44],[316,25,165,37,"isMuted"],[317,0,165,35],[317,15,165,15],[317,16,129,29],[319,0,129,29],[320,0,129,29],[321,0,129,29],[322,0,129,29],[323,0,129,29],[324,0,129,29],[325,0,129,29],[326,0,167,10,"setIsLoopingAsync"],[326,4,167,10,"setIsLoopingAsync"],[326,21,129,29],[326,50,167,28,"isLooping"],[326,59,129,29],[327,0,129,29],[328,0,129,29],[329,0,129,29],[330,0,129,29],[331,0,129,29],[331,49,168,15],[331,54,168,20,"setStatusAsync"],[331,68,168,15],[331,69,168,35],[332,0,168,37,"isLooping"],[332,16,168,37,"isLooping"],[332,25,168,46],[332,27,168,37,"isLooping"],[333,0,168,35],[333,15,168,15],[333,16,129,29],[335,0,129,29],[336,0,129,29],[337,0,129,29],[338,0,129,29],[339,0,129,29],[340,0,129,29],[341,0,129,29],[342,0,170,10,"setProgressUpdateIntervalAsync"],[342,4,170,10,"setProgressUpdateIntervalAsync"],[342,34,129,29],[342,76,170,41,"progressUpdateIntervalMillis"],[342,104,129,29],[343,0,129,29],[344,0,129,29],[345,0,129,29],[346,0,129,29],[347,0,129,29],[347,49,171,15],[347,54,171,20,"setStatusAsync"],[347,68,171,15],[347,69,171,35],[348,0,171,37,"progressUpdateIntervalMillis"],[348,16,171,37,"progressUpdateIntervalMillis"],[348,44,171,65],[348,46,171,37,"progressUpdateIntervalMillis"],[349,0,171,35],[349,15,171,15],[349,16,129,29],[351,0,129,29],[352,0,129,29],[353,0,129,29],[354,0,129,29],[355,0,129,29],[356,0,129,29],[357,0,129,29],[358,0,129,29],[358,3,129,7]]},"type":"js/module"}]}