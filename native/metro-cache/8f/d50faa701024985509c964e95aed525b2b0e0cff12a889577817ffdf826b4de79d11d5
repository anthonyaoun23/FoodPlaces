{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./State\"));\n\n  var _stateToPropMappings;\n\n  var _components = {\n    Handler: {\n      displayName: \"Handler\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/createHandler.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var UIManager = _reactNative.NativeModules.UIManager;\n  var oldSetJSResponder = UIManager.setJSResponder,\n      oldClearJSResponder = UIManager.clearJSResponder;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  UIManager.genericDirectEventTypes = (0, _objectSpread2.default)({}, UIManager.genericDirectEventTypes, {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  });\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var res = (0, _objectSpread2.default)({}, defaults);\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._dropGestureHandler = function () {\n          _RNGestureHandlerModule.default.dropGestureHandler(_this._handlerTag);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config));\n\n          this._attachGestureHandler((0, _reactNative.findNodeHandle)(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _reactNative.findNodeHandle)(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = (0, _objectSpread2.default)({}, this.props, updates);\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    Handler = _wrapComponent(\"Handler\")(Handler);\n    return Handler;\n  }\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,6,0],[57,6,8,8,"UIManager"],[57,15],[57,18,8,22,"NativeModules"],[57,44],[57,45,8,8,"UIManager"],[57,54],[58,6,12,18,"oldSetJSResponder"],[58,23],[58,26,14,4,"UIManager"],[58,35],[58,36,12,2,"setJSResponder"],[58,50],[59,6,13,20,"oldClearJSResponder"],[59,25],[59,28,14,4,"UIManager"],[59,37],[59,38,13,2,"clearJSResponder"],[59,54],[61,0,15,0,"UIManager"],[61,2,15,0,"UIManager"],[61,11,15,9],[61,12,15,10,"setJSResponder"],[61,26,15,0],[61,29,15,27],[61,39,15,28,"tag"],[61,42,15,27],[61,44,15,33,"blockNativeResponder"],[61,64,15,27],[61,66,15,58],[62,0,16,2,"RNGestureHandlerModule"],[62,36,16,25,"handleSetJSResponder"],[62,56,16,2],[62,57,16,46,"tag"],[62,60,16,2],[62,62,16,51,"blockNativeResponder"],[62,82,16,2],[64,0,17,2,"oldSetJSResponder"],[64,4,17,2,"oldSetJSResponder"],[64,21,17,19],[64,22,17,20,"tag"],[64,25,17,19],[64,27,17,25,"blockNativeResponder"],[64,47,17,19],[64,48,17,2],[65,0,18,1],[65,3,15,0],[67,0,19,0,"UIManager"],[67,2,19,0,"UIManager"],[67,11,19,9],[67,12,19,10,"clearJSResponder"],[67,28,19,0],[67,31,19,29],[67,43,19,35],[68,0,20,2,"RNGestureHandlerModule"],[68,36,20,25,"handleClearJSResponder"],[68,58,20,2],[70,0,21,2,"oldClearJSResponder"],[70,4,21,2,"oldClearJSResponder"],[70,23,21,21],[71,0,22,1],[71,3,19,0],[73,0,28,0,"UIManager"],[73,2,28,0,"UIManager"],[73,11,28,9],[73,12,28,10,"genericDirectEventTypes"],[73,35,28,0],[73,70,29,5,"UIManager"],[73,79,29,14],[73,80,29,15,"genericDirectEventTypes"],[73,103,28,0],[74,0,30,2,"onGestureHandlerEvent"],[74,4,30,2,"onGestureHandlerEvent"],[74,25,30,23],[74,27,30,25],[75,0,30,27,"registrationName"],[75,6,30,27,"registrationName"],[75,22,30,43],[75,24,30,45],[76,0,30,25],[76,5,28,0],[77,0,31,2,"onGestureHandlerStateChange"],[77,4,31,2,"onGestureHandlerStateChange"],[77,31,31,29],[77,33,31,31],[78,0,32,4,"registrationName"],[78,6,32,4,"registrationName"],[78,22,32,20],[78,24,32,22],[79,0,31,31],[80,0,28,0],[81,0,36,0],[81,6,36,4,"handlerTag"],[81,16,36,14],[81,19,36,17],[81,20,36,0],[82,0,37,0],[82,6,37,6,"handlerIDToTag"],[82,20,37,20],[82,23,37,23],[82,25,37,0],[84,0,39,0],[84,11,39,9,"isConfigParam"],[84,24,39,0],[84,25,39,23,"param"],[84,30,39,0],[84,32,39,30,"name"],[84,36,39,0],[84,38,39,36],[85,0,42,2],[85,11,43,4,"param"],[85,16,43,9],[85,21,43,14,"undefined"],[85,30,43,4],[85,35,44,5,"param"],[85,40,44,10],[85,45,44,15,"Object"],[85,51,44,21],[85,52,44,22,"param"],[85,57,44,21],[85,58,44,5],[85,62,44,32],[85,64,44,34],[85,80,44,50,"param"],[85,85,44,32],[85,86,43,4],[85,91,45,4,"name"],[85,95,45,8],[85,100,45,13],[85,122,43,4],[85,126,46,4,"name"],[85,130,46,8],[85,135,46,13],[85,151,42,2],[86,0,48,1],[88,0,50,0],[88,11,50,9,"filterConfig"],[88,23,50,0],[88,24,50,22,"props"],[88,29,50,0],[88,31,50,29,"validProps"],[88,41,50,0],[88,43,50,56],[89,0,50,56],[89,8,50,41,"defaults"],[89,16,50,56],[89,87,50,52],[89,89,50,56],[90,0,51,2],[90,8,51,8,"res"],[90,11,51,11],[90,46,51,19,"defaults"],[90,54,51,11],[90,55,51,2],[91,0,52,2,"Object"],[91,4,52,2,"Object"],[91,10,52,8],[91,11,52,9,"keys"],[91,15,52,2],[91,16,52,14,"validProps"],[91,26,52,2],[91,28,52,26,"forEach"],[91,35,52,2],[91,36,52,34],[91,46,52,34,"key"],[91,49,52,37],[91,51,52,41],[92,0,53,4],[92,10,53,10,"value"],[92,15,53,15],[92,18,53,18,"props"],[92,23,53,23],[92,24,53,24,"key"],[92,27,53,23],[92,28,53,4],[94,0,54,4],[94,10,54,8,"isConfigParam"],[94,23,54,21],[94,24,54,22,"value"],[94,29,54,21],[94,31,54,29,"key"],[94,34,54,21],[94,35,54,4],[94,37,54,35],[95,0,55,6],[95,12,55,10,"value"],[95,18,55,15],[95,21,55,18,"props"],[95,26,55,23],[95,27,55,24,"key"],[95,30,55,23],[95,31,55,6],[97,0,56,6],[97,12,56,10,"key"],[97,15,56,13],[97,20,56,18],[97,42,56,10],[97,46,56,44,"key"],[97,49,56,47],[97,54,56,52],[97,63,56,6],[97,65,56,63],[98,0,57,8,"value"],[98,10,57,8,"value"],[98,16,57,13],[98,19,57,16,"transformIntoHandlerTags"],[98,43,57,40],[98,44,57,41,"props"],[98,49,57,46],[98,50,57,47,"key"],[98,53,57,46],[98,54,57,40],[98,55,57,8],[99,0,58,7],[99,9,56,6],[99,15,58,13],[99,19,58,17,"key"],[99,22,58,20],[99,27,58,25],[99,36,58,13],[99,38,58,36],[100,0,59,8],[100,14,59,12],[100,21,59,19,"value"],[100,27,59,12],[100,32,59,29],[100,40,59,8],[100,42,59,39],[101,0,60,10,"value"],[101,12,60,10,"value"],[101,18,60,15],[101,21,60,18],[102,0,60,20,"top"],[102,14,60,20,"top"],[102,17,60,23],[102,19,60,25,"value"],[102,25,60,18],[103,0,60,32,"left"],[103,14,60,32,"left"],[103,18,60,36],[103,20,60,38,"value"],[103,26,60,18],[104,0,60,45,"bottom"],[104,14,60,45,"bottom"],[104,20,60,51],[104,22,60,53,"value"],[104,28,60,18],[105,0,60,60,"right"],[105,14,60,60,"right"],[105,19,60,65],[105,21,60,67,"value"],[106,0,60,18],[106,13,60,10],[107,0,61,9],[108,0,62,7],[110,0,63,6,"res"],[110,8,63,6,"res"],[110,11,63,9],[110,12,63,10,"key"],[110,15,63,9],[110,16,63,6],[110,19,63,17,"value"],[110,25,63,6],[111,0,64,5],[112,0,65,3],[112,5,52,2],[113,0,66,2],[113,11,66,9,"res"],[113,14,66,2],[114,0,67,1],[116,0,69,0],[116,11,69,9,"transformIntoHandlerTags"],[116,35,69,0],[116,36,69,34,"handlerIDs"],[116,46,69,0],[116,48,69,46],[117,0,70,2],[117,8,70,6],[117,9,70,7,"Array"],[117,14,70,12],[117,15,70,13,"isArray"],[117,22,70,7],[117,23,70,21,"handlerIDs"],[117,33,70,7],[117,34,70,2],[117,36,70,34],[118,0,71,4,"handlerIDs"],[118,6,71,4,"handlerIDs"],[118,16,71,14],[118,19,71,17],[118,20,71,18,"handlerIDs"],[118,30,71,17],[118,31,71,4],[119,0,72,3],[121,0,75,2],[121,11,75,9,"handlerIDs"],[121,21,75,19],[121,22,76,5,"map"],[121,25,75,9],[121,26,77,6],[121,36,77,6,"handlerID"],[121,45,77,15],[122,0,77,15],[122,13,78,8,"handlerIDToTag"],[122,27,78,22],[122,28,78,23,"handlerID"],[122,37,78,22],[122,38,78,8],[122,42,79,9,"handlerID"],[122,51,79,18],[122,52,79,19,"current"],[122,59,79,9],[122,63,79,30,"handlerID"],[122,72,79,39],[122,73,79,40,"current"],[122,80,79,30],[122,81,79,48,"_handlerTag"],[122,92,78,8],[122,96,80,8],[122,97,80,9],[122,98,77,15],[123,0,77,15],[123,5,75,9],[123,7,82,5,"filter"],[123,13,75,9],[123,14,82,12],[123,24,82,12,"handlerTag"],[123,34,82,22],[124,0,82,22],[124,13,82,26,"handlerTag"],[124,23,82,36],[124,26,82,39],[124,27,82,22],[125,0,82,22],[125,5,75,9],[125,6,75,2],[126,0,83,1],[128,0,85,0],[128,11,85,9,"hasUnresolvedRefs"],[128,28,85,0],[128,29,85,27,"props"],[128,34,85,0],[128,36,85,34],[129,0,86,2],[129,8,86,8,"extract"],[129,15,86,15],[129,18,86,18],[129,27,86,8,"extract"],[129,34,86,18],[129,35,86,18,"refs"],[129,39,86,22],[129,41,86,26],[130,0,87,4],[130,10,87,8],[130,11,87,9,"Array"],[130,16,87,14],[130,17,87,15,"isArray"],[130,24,87,9],[130,25,87,23,"refs"],[130,29,87,9],[130,30,87,4],[130,32,87,30],[131,0,88,6],[131,15,88,13,"refs"],[131,19,88,17],[131,23,88,21,"refs"],[131,27,88,25],[131,28,88,26,"current"],[131,35,88,21],[131,40,88,38],[131,44,88,6],[132,0,89,5],[134,0,90,4],[134,13,90,11,"refs"],[134,17,90,15],[134,18,90,16,"some"],[134,22,90,11],[134,23,90,21],[134,33,90,21,"r"],[134,34,90,22],[135,0,90,22],[135,15,90,26,"r"],[135,16,90,27],[135,20,90,31,"r"],[135,21,90,32],[135,22,90,33,"current"],[135,29,90,31],[135,34,90,45],[135,38,90,22],[136,0,90,22],[136,7,90,11],[136,8,90,4],[137,0,91,3],[137,5,86,2],[139,0,92,2],[139,11,92,9,"extract"],[139,18,92,16],[139,19,92,17,"props"],[139,24,92,22],[139,25,92,23],[139,47,92,22],[139,48,92,16],[139,49,92,9],[139,53,92,51,"extract"],[139,60,92,58],[139,61,92,59,"props"],[139,66,92,64],[139,67,92,65],[139,76,92,64],[139,77,92,58],[139,78,92,2],[140,0,93,1],[142,0,95,0],[142,6,95,6,"stateToPropMappings"],[142,25,95,25],[142,108,96,3,"State"],[142,123,96,9,"BEGAN"],[142,128,95,25],[142,130,96,17],[142,139,95,25],[142,194,97,3,"State"],[142,209,97,9,"FAILED"],[142,215,95,25],[142,217,97,18],[142,227,95,25],[142,282,98,3,"State"],[142,297,98,9,"CANCELLED"],[142,306,95,25],[142,308,98,21],[142,321,95,25],[142,376,99,3,"State"],[142,391,99,9,"ACTIVE"],[142,397,95,25],[142,399,99,18],[142,412,95,25],[142,467,100,3,"State"],[142,482,100,9,"END"],[142,485,95,25],[142,487,100,15],[142,496,95,25],[142,520,95,0],[144,0,103,15],[144,11,103,24,"createHandler"],[144,24,103,15],[144,25,104,2,"handlerName"],[144,36,103,15],[144,38,109,2],[145,0,109,2],[145,8,105,2,"propTypes"],[145,17,109,2],[145,88,105,14],[145,90,109,2],[146,0,109,2],[146,8,106,2,"config"],[146,14,109,2],[146,85,106,11],[146,87,109,2],[147,0,109,2],[147,8,107,2,"transformProps"],[147,22,109,2],[148,0,109,2],[148,8,108,2,"customNativeProps"],[148,25,109,2],[148,96,108,22],[148,98,109,2],[150,0,109,2],[150,8,110,8,"Handler"],[150,15,109,2],[151,0,109,2],[153,0,115,4],[153,23,115,16,"props"],[153,28,115,4],[153,30,115,23],[154,0,115,23],[156,0,115,23],[157,0,116,6],[157,113,116,12,"props"],[157,118,116,6],[159,0,115,23],[159,14,127,4,"_onGestureHandlerEvent"],[159,36,115,23],[159,39,127,29],[159,49,127,29,"event"],[159,54,127,34],[159,56,127,38],[160,0,128,6],[160,14,128,10,"event"],[160,19,128,15],[160,20,128,16,"nativeEvent"],[160,31,128,10],[160,32,128,28,"handlerTag"],[160,42,128,10],[160,47,128,43],[160,53,128,48,"_handlerTag"],[160,64,128,6],[160,66,128,61],[161,0,129,8],[161,18,129,13,"props"],[161,23,129,8],[161,24,129,19,"onGestureEvent"],[161,38,129,8],[161,42,129,37],[161,48,129,42,"props"],[161,53,129,37],[161,54,129,48,"onGestureEvent"],[161,68,129,37],[161,69,129,63,"event"],[161,74,129,37],[161,75,129,8],[162,0,130,7],[162,11,128,6],[162,17,130,13],[163,0,131,8],[163,18,131,13,"props"],[163,23,131,8],[163,24,131,19,"onGestureHandlerEvent"],[163,45,131,8],[163,49,132,10],[163,55,132,15,"props"],[163,60,132,10],[163,61,132,21,"onGestureHandlerEvent"],[163,82,132,10],[163,83,132,43,"event"],[163,88,132,10],[163,89,131,8],[164,0,133,7],[165,0,134,5],[165,9,115,23],[167,0,115,23],[167,14,136,4,"_onGestureHandlerStateChange"],[167,42,115,23],[167,45,136,35],[167,55,136,35,"event"],[167,60,136,40],[167,62,136,44],[168,0,137,6],[168,14,137,10,"event"],[168,19,137,15],[168,20,137,16,"nativeEvent"],[168,31,137,10],[168,32,137,28,"handlerTag"],[168,42,137,10],[168,47,137,43],[168,53,137,48,"_handlerTag"],[168,64,137,6],[168,66,137,61],[169,0,138,8],[169,18,138,13,"props"],[169,23,138,8],[169,24,138,19,"onHandlerStateChange"],[169,44,138,8],[169,48,139,10],[169,54,139,15,"props"],[169,59,139,10],[169,60,139,21,"onHandlerStateChange"],[169,80,139,10],[169,81,139,42,"event"],[169,86,139,10],[169,87,138,8],[170,0,141,8],[170,16,141,14,"stateEventName"],[170,30,141,28],[170,33,141,31,"stateToPropMappings"],[170,52,141,50],[170,53,141,51,"event"],[170,58,141,56],[170,59,141,57,"nativeEvent"],[170,70,141,51],[170,71,141,69,"state"],[170,76,141,50],[170,77,141,8],[172,0,142,8],[172,16,142,12],[172,23,142,19],[172,29,142,24,"props"],[172,34,142,19],[172,35,142,30,"stateEventName"],[172,49,142,19],[172,50,142,12],[172,55,142,50],[172,65,142,8],[172,67,142,62],[173,0,143,10],[173,20,143,15,"props"],[173,25,143,10],[173,26,143,21,"stateEventName"],[173,40,143,10],[173,42,143,37,"event"],[173,47,143,10],[174,0,144,9],[175,0,145,7],[175,11,137,6],[175,17,145,13],[176,0,146,8],[176,18,146,13,"props"],[176,23,146,8],[176,24,146,19,"onGestureHandlerStateChange"],[176,51,146,8],[176,55,147,10],[176,61,147,15,"props"],[176,66,147,10],[176,67,147,21,"onGestureHandlerStateChange"],[176,94,147,10],[176,95,147,49,"event"],[176,100,147,10],[176,101,146,8],[177,0,148,7],[178,0,149,5],[178,9,115,23],[180,0,115,23],[180,14,151,4,"_refHandler"],[180,25,115,23],[180,28,151,18],[180,38,151,18,"node"],[180,42,151,22],[180,44,151,26],[181,0,152,6],[181,16,152,11,"_viewNode"],[181,25,152,6],[181,28,152,23,"node"],[181,32,152,6],[183,0,154,6],[183,14,154,12,"child"],[183,19,154,17],[183,22,154,20,"React"],[183,37,154,26,"Children"],[183,45,154,20],[183,46,154,35,"only"],[183,50,154,20],[183,51,154,40],[183,57,154,45,"props"],[183,62,154,40],[183,63,154,51,"children"],[183,71,154,20],[183,72,154,6],[185,0,151,26],[185,14,155,14,"ref"],[185,17,151,26],[185,20,155,22,"child"],[185,25,151,26],[185,26,155,14,"ref"],[185,29,151,26],[187,0,156,6],[187,14,156,10,"ref"],[187,17,156,13],[187,22,156,18],[187,26,156,6],[187,28,156,24],[188,0,157,8],[188,16,157,12],[188,23,157,19,"ref"],[188,26,157,12],[188,31,157,27],[188,41,157,8],[188,43,157,39],[189,0,158,10,"ref"],[189,14,158,10,"ref"],[189,17,158,13],[189,18,158,14,"node"],[189,22,158,13],[189,23,158,10],[190,0,159,9],[190,13,157,8],[190,19,159,15],[191,0,160,10,"ref"],[191,14,160,10,"ref"],[191,17,160,13],[191,18,160,14,"current"],[191,25,160,10],[191,28,160,24,"node"],[191,32,160,10],[192,0,161,9],[193,0,162,7],[194,0,163,5],[194,9,115,23],[196,0,115,23],[196,14,165,4,"_createGestureHandler"],[196,35,115,23],[196,38,165,28],[196,48,165,28,"newConfig"],[196,57,165,37],[196,59,165,41],[197,0,166,6],[197,16,166,11,"_config"],[197,23,166,6],[197,26,166,21,"newConfig"],[197,35,166,6],[199,0,168,6,"RNGestureHandlerModule"],[199,42,168,29,"createGestureHandler"],[199,62,168,6],[199,63,169,8,"handlerName"],[199,74,168,6],[199,76,170,8],[199,82,170,13,"_handlerTag"],[199,93,168,6],[199,95,171,8,"newConfig"],[199,104,168,6],[200,0,173,5],[200,9,115,23],[202,0,115,23],[202,14,175,4,"_attachGestureHandler"],[202,35,115,23],[202,38,175,28],[202,48,175,28,"newViewTag"],[202,58,175,38],[202,60,175,42],[203,0,176,6],[203,16,176,11,"_viewTag"],[203,24,176,6],[203,27,176,22,"newViewTag"],[203,37,176,6],[205,0,178,6,"RNGestureHandlerModule"],[205,42,178,29,"attachGestureHandler"],[205,62,178,6],[205,63,178,50],[205,69,178,55,"_handlerTag"],[205,80,178,6],[205,82,178,68,"newViewTag"],[205,92,178,6],[206,0,179,5],[206,9,115,23],[208,0,115,23],[208,14,181,4,"_updateGestureHandler"],[208,35,115,23],[208,38,181,28],[208,48,181,28,"newConfig"],[208,57,181,37],[208,59,181,41],[209,0,182,6],[209,16,182,11,"_config"],[209,23,182,6],[209,26,182,21,"newConfig"],[209,35,182,6],[211,0,184,6,"RNGestureHandlerModule"],[211,42,184,29,"updateGestureHandler"],[211,62,184,6],[211,63,184,50],[211,69,184,55,"_handlerTag"],[211,80,184,6],[211,82,184,68,"newConfig"],[211,91,184,6],[212,0,185,5],[212,9,115,23],[214,0,115,23],[214,14,187,4,"_dropGestureHandler"],[214,33,115,23],[214,36,187,26],[214,48,187,32],[215,0,188,6,"RNGestureHandlerModule"],[215,42,188,29,"dropGestureHandler"],[215,60,188,6],[215,61,188,48],[215,67,188,53,"_handlerTag"],[215,78,188,6],[216,0,189,5],[216,9,115,23],[218,0,117,6],[218,14,117,11,"_handlerTag"],[218,25,117,6],[218,28,117,25,"handlerTag"],[218,38,117,35],[218,40,117,6],[219,0,118,6],[219,14,118,11,"_config"],[219,21,118,6],[219,24,118,21],[219,26,118,6],[221,0,119,6],[221,12,119,10,"props"],[221,17,119,15],[221,18,119,16,"id"],[221,20,119,6],[221,22,119,20],[222,0,120,8],[222,14,120,12,"handlerIDToTag"],[222,28,120,26],[222,29,120,27,"props"],[222,34,120,32],[222,35,120,33,"id"],[222,37,120,26],[222,38,120,12],[222,43,120,41,"undefined"],[222,52,120,8],[222,54,120,52],[223,0,121,10],[223,18,121,16],[223,22,121,20,"Error"],[223,27,121,16],[223,51,121,46,"props"],[223,56,121,51],[223,57,121,52,"id"],[223,59,121,16],[223,86,121,10],[224,0,122,9],[226,0,123,8,"handlerIDToTag"],[226,10,123,8,"handlerIDToTag"],[226,24,123,22],[226,25,123,23,"props"],[226,30,123,28],[226,31,123,29,"id"],[226,33,123,22],[226,34,123,8],[226,37,123,35],[226,43,123,40,"_handlerTag"],[226,54,123,8],[227,0,124,7],[229,0,115,23],[230,0,125,5],[232,0,109,2],[233,0,109,2],[234,0,109,2],[234,47,191,27],[235,0,192,6],[235,14,192,10],[235,19,192,15,"_updateEnqueued"],[235,34,192,6],[235,36,192,32],[236,0,193,8,"clearImmediate"],[236,12,193,8,"clearImmediate"],[236,26,193,22],[236,27,193,23],[236,32,193,28,"_updateEnqueued"],[236,47,193,22],[236,48,193,8],[237,0,194,7],[239,0,195,6],[239,14,195,10],[239,19,195,15,"props"],[239,24,195,10],[239,25,195,21,"id"],[239,27,195,6],[239,29,195,25],[240,0,196,8],[240,19,196,15,"handlerIDToTag"],[240,33,196,29],[240,34,196,30],[240,39,196,35,"props"],[240,44,196,30],[240,45,196,41,"id"],[240,47,196,29],[240,48,196,8],[241,0,197,7],[242,0,198,5],[243,0,109,2],[244,0,109,2],[245,0,109,2],[245,44,200,24],[246,0,200,24],[248,0,201,6],[248,14,201,10,"hasUnresolvedRefs"],[248,31,201,27],[248,32,201,28],[248,37,201,33,"props"],[248,42,201,27],[248,43,201,6],[248,45,201,41],[249,0,208,8],[249,17,208,13,"_updateEnqueued"],[249,32,208,8],[249,35,208,31,"setImmediate"],[249,47,208,43],[249,48,208,44],[249,60,208,50],[250,0,209,10],[250,14,209,10],[250,20,209,14],[250,21,209,15,"_updateEnqueued"],[250,36,209,10],[250,39,209,33],[250,43,209,10],[252,0,210,10],[252,14,210,10],[252,20,210,14],[252,21,210,15,"_update"],[252,28,210,10],[253,0,211,9],[253,13,208,43],[253,14,208,8],[254,0,212,7],[256,0,214,6],[256,15,214,11,"_createGestureHandler"],[256,36,214,6],[256,37,215,8,"filterConfig"],[256,49,215,20],[256,50,216,10,"transformProps"],[256,64,216,24],[256,67,216,27,"transformProps"],[256,81,216,41],[256,82,216,42],[256,87,216,47,"props"],[256,92,216,41],[256,93,216,24],[256,96,216,56],[256,101,216,61,"props"],[256,106,215,20],[256,140,217,15],[256,145,217,20,"constructor"],[256,156,217,15],[256,157,217,32,"propTypes"],[256,166,215,20],[256,168,217,46,"customNativeProps"],[256,185,215,20],[256,188,218,10,"config"],[256,194,215,20],[256,195,214,6],[258,0,221,6],[258,15,221,11,"_attachGestureHandler"],[258,36,221,6],[258,37,221,33],[258,70,221,48],[258,75,221,53,"_viewNode"],[258,84,221,33],[258,85,221,6],[259,0,222,5],[260,0,109,2],[261,0,109,2],[262,0,109,2],[262,45,224,25],[263,0,225,6],[263,14,225,12,"viewTag"],[263,21,225,19],[263,24,225,22],[263,57,225,37],[263,62,225,42,"_viewNode"],[263,71,225,22],[263,72,225,6],[265,0,226,6],[265,14,226,10],[265,19,226,15,"_viewTag"],[265,27,226,10],[265,32,226,28,"viewTag"],[265,39,226,6],[265,41,226,37],[266,0,227,8],[266,17,227,13,"_attachGestureHandler"],[266,38,227,8],[266,39,227,35,"viewTag"],[266,46,227,8],[267,0,228,7],[269,0,229,6],[269,15,229,11,"_update"],[269,22,229,6],[270,0,230,5],[271,0,109,2],[272,0,109,2],[273,0,109,2],[273,34,232,14],[274,0,233,6],[274,14,233,12,"newConfig"],[274,23,233,21],[274,26,233,24,"filterConfig"],[274,38,233,36],[274,39,234,8,"transformProps"],[274,53,234,22],[274,56,234,25,"transformProps"],[274,70,234,39],[274,71,234,40],[274,76,234,45,"props"],[274,81,234,39],[274,82,234,22],[274,85,234,54],[274,90,234,59,"props"],[274,95,233,36],[274,129,235,13],[274,134,235,18,"constructor"],[274,145,235,13],[274,146,235,30,"propTypes"],[274,155,233,36],[274,157,235,44,"customNativeProps"],[274,174,233,36],[274,177,236,8,"config"],[274,183,233,36],[274,184,233,6],[276,0,238,6],[276,14,238,10],[276,15,238,11],[276,38,238,21],[276,43,238,26,"_config"],[276,50,238,11],[276,52,238,35,"newConfig"],[276,61,238,11],[276,62,238,6],[276,64,238,47],[277,0,239,8],[277,17,239,13,"_updateGestureHandler"],[277,38,239,8],[277,39,239,35,"newConfig"],[277,48,239,8],[278,0,240,7],[279,0,241,5],[280,0,109,2],[281,0,109,2],[282,0,109,2],[282,39,243,19,"updates"],[282,46,109,2],[282,48,243,28],[283,0,244,6],[283,14,244,12,"mergedProps"],[283,25,244,23],[283,60,244,31],[283,65,244,36,"props"],[283,70,244,23],[283,72,244,46,"updates"],[283,79,244,23],[283,80,244,6],[284,0,245,6],[284,14,245,12,"newConfig"],[284,23,245,21],[284,26,245,24,"filterConfig"],[284,38,245,36],[284,39,246,8,"transformProps"],[284,53,246,22],[284,56,246,25,"transformProps"],[284,70,246,39],[284,71,246,40,"mergedProps"],[284,82,246,39],[284,83,246,22],[284,86,246,55,"mergedProps"],[284,97,245,36],[284,131,247,13],[284,136,247,18,"constructor"],[284,147,247,13],[284,148,247,30,"propTypes"],[284,157,245,36],[284,159,247,44,"customNativeProps"],[284,176,245,36],[284,179,248,8,"config"],[284,185,245,36],[284,186,245,6],[286,0,250,6],[286,15,250,11,"_updateGestureHandler"],[286,36,250,6],[286,37,250,33,"newConfig"],[286,46,250,6],[287,0,251,5],[288,0,109,2],[289,0,109,2],[290,0,109,2],[290,33,253,13],[291,0,254,6],[291,14,254,10,"gestureEventHandler"],[291,33,254,29],[291,36,254,32],[291,41,254,37,"_onGestureHandlerEvent"],[291,63,254,6],[292,0,253,13],[292,28,255,56],[292,33,255,61,"props"],[292,38,253,13],[293,0,253,13],[293,14,255,14,"onGestureEvent"],[293,28,253,13],[293,43,255,14,"onGestureEvent"],[293,57,253,13],[294,0,253,13],[294,14,255,30,"onGestureHandlerEvent"],[294,35,253,13],[294,50,255,30,"onGestureHandlerEvent"],[294,71,253,13],[296,0,256,6],[296,14,256,10,"onGestureEvent"],[296,28,256,24],[296,32,256,28],[296,39,256,35,"onGestureEvent"],[296,53,256,28],[296,58,256,54],[296,68,256,6],[296,70,256,66],[297,0,260,8],[297,16,260,12,"onGestureHandlerEvent"],[297,37,260,8],[297,39,260,35],[298,0,261,10],[298,20,261,16],[298,24,261,20,"Error"],[298,29,261,16],[298,30,262,12],[298,103,261,16],[298,104,261,10],[299,0,264,9],[301,0,265,8,"gestureEventHandler"],[301,12,265,8,"gestureEventHandler"],[301,31,265,27],[301,34,265,30],[301,39,265,35,"props"],[301,44,265,30],[301,45,265,41,"onGestureEvent"],[301,59,265,8],[302,0,266,7],[302,11,256,6],[302,17,266,13],[303,0,267,8],[303,16,268,10,"onGestureHandlerEvent"],[303,37,268,31],[303,41,269,10],[303,48,269,17,"onGestureHandlerEvent"],[303,69,269,10],[303,74,269,43],[303,84,267,8],[303,86,270,10],[304,0,271,10],[304,20,271,16],[304,24,271,20,"Error"],[304,29,271,16],[304,30,272,12],[304,103,271,16],[304,104,271,10],[305,0,274,9],[306,0,275,7],[308,0,277,6],[308,14,277,10,"gestureStateEventHandler"],[308,38,277,34],[308,41,277,37],[308,46,277,42,"_onGestureHandlerStateChange"],[308,74,277,6],[309,0,253,13],[309,29,278,68],[309,34,278,73,"props"],[309,39,253,13],[310,0,253,13],[310,14,278,14,"onHandlerStateChange"],[310,34,253,13],[310,50,278,14,"onHandlerStateChange"],[310,70,253,13],[311,0,253,13],[311,14,278,36,"onGestureHandlerStateChange"],[311,41,253,13],[311,57,278,36,"onGestureHandlerStateChange"],[311,84,253,13],[313,0,279,6],[313,14,279,10,"onHandlerStateChange"],[313,34,279,30],[313,38,279,34],[313,45,279,41,"onHandlerStateChange"],[313,65,279,34],[313,70,279,66],[313,80,279,6],[313,82,279,78],[314,0,283,8],[314,16,283,12,"onGestureHandlerStateChange"],[314,43,283,8],[314,45,283,41],[315,0,284,10],[315,20,284,16],[315,24,284,20,"Error"],[315,29,284,16],[315,30,285,12],[315,103,284,16],[315,104,284,10],[316,0,287,9],[318,0,288,8,"gestureStateEventHandler"],[318,12,288,8,"gestureStateEventHandler"],[318,36,288,32],[318,39,288,35],[318,44,288,40,"props"],[318,49,288,35],[318,50,288,46,"onHandlerStateChange"],[318,70,288,8],[319,0,289,7],[319,11,279,6],[319,17,289,13],[320,0,290,8],[320,16,291,10,"onGestureHandlerStateChange"],[320,43,291,37],[320,47,292,10],[320,54,292,17,"onGestureHandlerStateChange"],[320,81,292,10],[320,86,292,49],[320,96,290,8],[320,98,293,10],[321,0,294,10],[321,20,294,16],[321,24,294,20,"Error"],[321,29,294,16],[321,30,295,12],[321,103,294,16],[321,104,294,10],[322,0,297,9],[323,0,298,7],[325,0,300,6],[325,14,300,12,"child"],[325,19,300,17],[325,22,300,20,"React"],[325,37,300,26,"Children"],[325,45,300,20],[325,46,300,35,"only"],[325,50,300,20],[325,51,300,40],[325,56,300,45,"props"],[325,61,300,40],[325,62,300,51,"children"],[325,70,300,20],[325,71,300,6],[327,0,301,6],[327,14,301,10,"grandChildren"],[327,27,301,23],[327,30,301,26,"child"],[327,35,301,31],[327,36,301,32,"props"],[327,41,301,26],[327,42,301,38,"children"],[327,50,301,6],[329,0,302,6],[329,14,303,8,"Touchable"],[329,37,303,18,"TOUCH_TARGET_DEBUG"],[329,55,303,8],[329,59,304,8,"child"],[329,64,304,13],[329,65,304,14,"type"],[329,69,303,8],[329,74,305,9,"child"],[329,79,305,14],[329,80,305,15,"type"],[329,84,305,9],[329,89,305,24],[329,113,305,9],[329,117,306,10,"child"],[329,122,306,15],[329,123,306,16,"type"],[329,127,306,10],[329,128,306,21,"name"],[329,132,306,10],[329,137,306,30],[329,143,305,9],[329,147,307,10,"child"],[329,152,307,15],[329,153,307,16,"type"],[329,157,307,10],[329,158,307,21,"displayName"],[329,169,307,10],[329,174,307,37],[329,180,303,8],[329,181,302,6],[329,183,308,8],[330,0,309,8,"grandChildren"],[330,12,309,8,"grandChildren"],[330,25,309,21],[330,28,309,24,"React"],[330,43,309,30,"Children"],[330,51,309,24],[330,52,309,39,"toArray"],[330,59,309,24],[330,60,309,47,"grandChildren"],[330,73,309,24],[330,74,309,8],[331,0,310,8,"grandChildren"],[331,12,310,8,"grandChildren"],[331,25,310,21],[331,26,310,22,"push"],[331,30,310,8],[331,31,311,10,"Touchable"],[331,54,311,20,"renderDebugView"],[331,69,311,10],[331,70,311,36],[332,0,312,12,"color"],[332,14,312,12,"color"],[332,19,312,17],[332,21,312,19],[332,40,311,36],[333,0,313,12,"hitSlop"],[333,14,313,12,"hitSlop"],[333,21,313,19],[333,23,313,21,"child"],[333,28,313,26],[333,29,313,27,"props"],[333,34,313,21],[333,35,313,33,"hitSlop"],[334,0,311,36],[334,13,311,10],[334,14,310,8],[335,0,316,7],[337,0,317,6],[337,17,317,13,"React"],[337,32,317,19,"cloneElement"],[337,44,317,13],[337,45,318,8,"child"],[337,50,317,13],[337,52,319,8],[338,0,320,10,"ref"],[338,12,320,10,"ref"],[338,15,320,13],[338,17,320,15],[338,22,320,20,"_refHandler"],[338,33,319,8],[339,0,321,10,"collapsable"],[339,12,321,10,"collapsable"],[339,23,321,21],[339,25,321,23],[339,30,319,8],[340,0,322,10,"onGestureHandlerEvent"],[340,12,322,10,"onGestureHandlerEvent"],[340,33,322,31],[340,35,322,33,"gestureEventHandler"],[340,54,319,8],[341,0,323,10,"onGestureHandlerStateChange"],[341,12,323,10,"onGestureHandlerStateChange"],[341,39,323,37],[341,41,323,39,"gestureStateEventHandler"],[342,0,319,8],[342,11,317,13],[342,13,325,8,"grandChildren"],[342,26,317,13],[342,27,317,6],[343,0,327,5],[344,0,109,2],[345,0,109,2],[346,0,109,2],[346,6,110,24,"React"],[346,21,110,30,"Component"],[346,30,109,2],[348,0,110,8,"Handler"],[348,4,110,8,"Handler"],[348,11,109,2],[348,12,111,11,"displayName"],[348,23,109,2],[348,26,111,25,"handlerName"],[348,37,109,2],[349,0,110,8,"Handler"],[349,4,110,8,"Handler"],[349,11,109,2],[349,12,113,11,"propTypes"],[349,21,109,2],[349,24,113,23,"propTypes"],[349,33,109,2],[350,0,109,2],[351,0,329,2],[351,11,329,9,"Handler"],[351,18,329,2],[352,0,330,1]]},"type":"js/module"}]}