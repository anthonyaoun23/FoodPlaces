{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./core/AnimatedCond","data":{"isAsync":false}},{"name":"./core/AnimatedSet","data":{"isAsync":false}},{"name":"./core/AnimatedOperator","data":{"isAsync":false}},{"name":"./core/AnimatedStartClock","data":{"isAsync":false}},{"name":"./core/AnimatedStopClock","data":{"isAsync":false}},{"name":"./core/AnimatedClockTest","data":{"isAsync":false}},{"name":"./core/AnimatedDebug","data":{"isAsync":false}},{"name":"./core/AnimatedCall","data":{"isAsync":false}},{"name":"./core/AnimatedEvent","data":{"isAsync":false}},{"name":"./core/AnimatedAlways","data":{"isAsync":false}},{"name":"./core/AnimatedConcat","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.event = exports.clockRunning = exports.stopClock = exports.concat = exports.always = exports.startClock = exports.debug = exports.call = exports.block = exports.cond = exports.set = exports.not = exports.defined = exports.or = exports.and = exports.neq = exports.greaterOrEq = exports.lessOrEq = exports.greaterThan = exports.eq = exports.lessThan = exports.round = exports.exp = exports.atan = exports.asin = exports.acos = exports.tan = exports.cos = exports.sin = exports.sqrt = exports.modulo = exports.pow = exports.divide = exports.multiply = exports.sub = exports.add = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _AnimatedCond = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./core/AnimatedCond\"));\n\n  var _AnimatedSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./core/AnimatedSet\"));\n\n  var _AnimatedOperator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./core/AnimatedOperator\"));\n\n  var _AnimatedStartClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./core/AnimatedStartClock\"));\n\n  var _AnimatedStopClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./core/AnimatedStopClock\"));\n\n  var _AnimatedClockTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./core/AnimatedClockTest\"));\n\n  var _AnimatedDebug = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./core/AnimatedDebug\"));\n\n  var _AnimatedCall = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./core/AnimatedCall\"));\n\n  var _AnimatedEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./core/AnimatedEvent\"));\n\n  var _AnimatedAlways = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./core/AnimatedAlways\"));\n\n  var _AnimatedConcat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./core/AnimatedConcat\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[13], \"./utils\");\n\n  function operator(name) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new _AnimatedOperator.default(name, args.map(_utils.adapt));\n    };\n  }\n\n  var add = operator('add');\n  exports.add = add;\n  var sub = operator('sub');\n  exports.sub = sub;\n  var multiply = operator('multiply');\n  exports.multiply = multiply;\n  var divide = operator('divide');\n  exports.divide = divide;\n  var pow = operator('pow');\n  exports.pow = pow;\n  var modulo = operator('modulo');\n  exports.modulo = modulo;\n  var sqrt = operator('sqrt');\n  exports.sqrt = sqrt;\n  var sin = operator('sin');\n  exports.sin = sin;\n  var cos = operator('cos');\n  exports.cos = cos;\n  var tan = operator('tan');\n  exports.tan = tan;\n  var acos = operator('acos');\n  exports.acos = acos;\n  var asin = operator('asin');\n  exports.asin = asin;\n  var atan = operator('atan');\n  exports.atan = atan;\n  var exp = operator('exp');\n  exports.exp = exp;\n  var round = operator('round');\n  exports.round = round;\n  var lessThan = operator('lessThan');\n  exports.lessThan = lessThan;\n  var eq = operator('eq');\n  exports.eq = eq;\n  var greaterThan = operator('greaterThan');\n  exports.greaterThan = greaterThan;\n  var lessOrEq = operator('lessOrEq');\n  exports.lessOrEq = lessOrEq;\n  var greaterOrEq = operator('greaterOrEq');\n  exports.greaterOrEq = greaterOrEq;\n  var neq = operator('neq');\n  exports.neq = neq;\n  var and = operator('and');\n  exports.and = and;\n  var or = operator('or');\n  exports.or = or;\n  var defined = operator('defined');\n  exports.defined = defined;\n  var not = operator('not');\n  exports.not = not;\n\n  var set = function set(what, value) {\n    return new _AnimatedSet.default(what, (0, _utils.adapt)(value));\n  };\n\n  exports.set = set;\n\n  var cond = function cond(_cond, ifBlock, elseBlock) {\n    return new _AnimatedCond.default((0, _utils.adapt)(_cond), (0, _utils.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _utils.adapt)(elseBlock));\n  };\n\n  exports.cond = cond;\n\n  var block = function block(items) {\n    return (0, _utils.adapt)(items);\n  };\n\n  exports.block = block;\n\n  var call = function call(args, func) {\n    return new _AnimatedCall.default(args, func);\n  };\n\n  exports.call = call;\n\n  var debug = function debug(message, value) {\n    if (__DEV__) {\n      var runningInRemoteDebugger = typeof atob !== 'undefined';\n      var runningInExpoShell = global.Expo && global.Expo.Constants.appOwnership !== 'standalone';\n\n      if (runningInRemoteDebugger || runningInExpoShell) {\n        return block([call([value], function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 1),\n              a = _ref2[0];\n\n          return console.log(message + \" \" + a);\n        }), value]);\n      } else {\n        return new _AnimatedDebug.default(message, (0, _utils.adapt)(value));\n      }\n    }\n\n    return value;\n  };\n\n  exports.debug = debug;\n\n  var startClock = function startClock(clock) {\n    return new _AnimatedStartClock.default(clock);\n  };\n\n  exports.startClock = startClock;\n\n  var always = function always(item) {\n    return new _AnimatedAlways.default(item);\n  };\n\n  exports.always = always;\n\n  var concat = function concat() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return new _AnimatedConcat.default(args.map(_utils.adapt));\n  };\n\n  exports.concat = concat;\n\n  var stopClock = function stopClock(clock) {\n    return new _AnimatedStopClock.default(clock);\n  };\n\n  exports.stopClock = stopClock;\n\n  var clockRunning = function clockRunning(clock) {\n    return new _AnimatedClockTest.default(clock);\n  };\n\n  exports.clockRunning = clockRunning;\n\n  var event = function event(argMapping, config) {\n    return new _AnimatedEvent.default(argMapping, config);\n  };\n\n  exports.event = event;\n});","map":[[11,0,1,0],[13,0,2,0],[15,0,3,0],[17,0,4,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[31,0,11,0],[33,0,13,0],[35,0,15,0],[35,11,15,9,"operator"],[35,19,15,0],[35,20,15,18,"name"],[35,24,15,0],[35,26,15,24],[36,0,16,2],[36,11,16,9],[37,0,16,9],[37,40,16,13,"args"],[37,44,16,9],[38,0,16,13,"args"],[38,8,16,13,"args"],[38,12,16,9],[39,0,16,9],[41,0,16,9],[41,13,16,22],[41,17,16,26,"AnimatedOperator"],[41,42,16,22],[41,43,16,43,"name"],[41,47,16,22],[41,49,16,49,"args"],[41,53,16,53],[41,54,16,54,"map"],[41,57,16,49],[41,58,16,58,"adapt"],[41,70,16,49],[41,71,16,22],[41,72,16,9],[42,0,16,9],[42,5,16,2],[43,0,17,1],[45,0,19,7],[45,6,19,13,"add"],[45,9,19,16],[45,12,19,19,"operator"],[45,20,19,27],[45,21,19,28],[45,26,19,27],[45,27,19,7],[47,0,20,7],[47,6,20,13,"sub"],[47,9,20,16],[47,12,20,19,"operator"],[47,20,20,27],[47,21,20,28],[47,26,20,27],[47,27,20,7],[49,0,21,7],[49,6,21,13,"multiply"],[49,14,21,21],[49,17,21,24,"operator"],[49,25,21,32],[49,26,21,33],[49,36,21,32],[49,37,21,7],[51,0,22,7],[51,6,22,13,"divide"],[51,12,22,19],[51,15,22,22,"operator"],[51,23,22,30],[51,24,22,31],[51,32,22,30],[51,33,22,7],[53,0,23,7],[53,6,23,13,"pow"],[53,9,23,16],[53,12,23,19,"operator"],[53,20,23,27],[53,21,23,28],[53,26,23,27],[53,27,23,7],[55,0,24,7],[55,6,24,13,"modulo"],[55,12,24,19],[55,15,24,22,"operator"],[55,23,24,30],[55,24,24,31],[55,32,24,30],[55,33,24,7],[57,0,25,7],[57,6,25,13,"sqrt"],[57,10,25,17],[57,13,25,20,"operator"],[57,21,25,28],[57,22,25,29],[57,28,25,28],[57,29,25,7],[59,0,26,7],[59,6,26,13,"sin"],[59,9,26,16],[59,12,26,19,"operator"],[59,20,26,27],[59,21,26,28],[59,26,26,27],[59,27,26,7],[61,0,27,7],[61,6,27,13,"cos"],[61,9,27,16],[61,12,27,19,"operator"],[61,20,27,27],[61,21,27,28],[61,26,27,27],[61,27,27,7],[63,0,28,7],[63,6,28,13,"tan"],[63,9,28,16],[63,12,28,19,"operator"],[63,20,28,27],[63,21,28,28],[63,26,28,27],[63,27,28,7],[65,0,29,7],[65,6,29,13,"acos"],[65,10,29,17],[65,13,29,20,"operator"],[65,21,29,28],[65,22,29,29],[65,28,29,28],[65,29,29,7],[67,0,30,7],[67,6,30,13,"asin"],[67,10,30,17],[67,13,30,20,"operator"],[67,21,30,28],[67,22,30,29],[67,28,30,28],[67,29,30,7],[69,0,31,7],[69,6,31,13,"atan"],[69,10,31,17],[69,13,31,20,"operator"],[69,21,31,28],[69,22,31,29],[69,28,31,28],[69,29,31,7],[71,0,32,7],[71,6,32,13,"exp"],[71,9,32,16],[71,12,32,19,"operator"],[71,20,32,27],[71,21,32,28],[71,26,32,27],[71,27,32,7],[73,0,33,7],[73,6,33,13,"round"],[73,11,33,18],[73,14,33,21,"operator"],[73,22,33,29],[73,23,33,30],[73,30,33,29],[73,31,33,7],[75,0,34,7],[75,6,34,13,"lessThan"],[75,14,34,21],[75,17,34,24,"operator"],[75,25,34,32],[75,26,34,33],[75,36,34,32],[75,37,34,7],[77,0,35,7],[77,6,35,13,"eq"],[77,8,35,15],[77,11,35,18,"operator"],[77,19,35,26],[77,20,35,27],[77,24,35,26],[77,25,35,7],[79,0,36,7],[79,6,36,13,"greaterThan"],[79,17,36,24],[79,20,36,27,"operator"],[79,28,36,35],[79,29,36,36],[79,42,36,35],[79,43,36,7],[81,0,37,7],[81,6,37,13,"lessOrEq"],[81,14,37,21],[81,17,37,24,"operator"],[81,25,37,32],[81,26,37,33],[81,36,37,32],[81,37,37,7],[83,0,38,7],[83,6,38,13,"greaterOrEq"],[83,17,38,24],[83,20,38,27,"operator"],[83,28,38,35],[83,29,38,36],[83,42,38,35],[83,43,38,7],[85,0,39,7],[85,6,39,13,"neq"],[85,9,39,16],[85,12,39,19,"operator"],[85,20,39,27],[85,21,39,28],[85,26,39,27],[85,27,39,7],[87,0,40,7],[87,6,40,13,"and"],[87,9,40,16],[87,12,40,19,"operator"],[87,20,40,27],[87,21,40,28],[87,26,40,27],[87,27,40,7],[89,0,41,7],[89,6,41,13,"or"],[89,8,41,15],[89,11,41,18,"operator"],[89,19,41,26],[89,20,41,27],[89,24,41,26],[89,25,41,7],[91,0,42,7],[91,6,42,13,"defined"],[91,13,42,20],[91,16,42,23,"operator"],[91,24,42,31],[91,25,42,32],[91,34,42,31],[91,35,42,7],[93,0,43,7],[93,6,43,13,"not"],[93,9,43,16],[93,12,43,19,"operator"],[93,20,43,27],[93,21,43,28],[93,26,43,27],[93,27,43,7],[96,0,45,7],[96,6,45,13,"set"],[96,9,45,16],[96,12,45,19],[96,21,45,13,"set"],[96,24,45,19],[96,25,45,28,"what"],[96,29,45,19],[96,31,45,34,"value"],[96,36,45,19],[96,38,45,41],[97,0,46,2],[97,11,46,9],[97,15,46,13,"AnimatedSet"],[97,35,46,9],[97,36,46,25,"what"],[97,40,46,9],[97,42,46,31],[97,60,46,37,"value"],[97,65,46,31],[97,66,46,9],[97,67,46,2],[98,0,47,1],[98,3,45,7],[102,0,49,7],[102,6,49,13,"cond"],[102,10,49,17],[102,13,49,20],[102,27,49,29,"cond"],[102,32,49,20],[102,34,49,35,"ifBlock"],[102,41,49,20],[102,43,49,44,"elseBlock"],[102,52,49,20],[102,54,49,55],[103,0,50,2],[103,11,50,9],[103,15,50,13,"AnimatedCond"],[103,36,50,9],[103,37,51,4],[103,55,51,10,"cond"],[103,60,51,4],[103,61,50,9],[103,63,52,4],[103,81,52,10,"ifBlock"],[103,88,52,4],[103,89,50,9],[103,91,53,4,"elseBlock"],[103,100,53,13],[103,105,53,18,"undefined"],[103,114,53,4],[103,117,53,30,"undefined"],[103,126,53,4],[103,129,53,42],[103,147,53,48,"elseBlock"],[103,156,53,42],[103,157,50,9],[103,158,50,2],[104,0,55,1],[104,3,49,7],[108,0,57,7],[108,6,57,13,"block"],[108,11,57,18],[108,14,57,21],[108,23,57,13,"block"],[108,28,57,21],[108,29,57,30,"items"],[108,34,57,21],[108,36,57,37],[109,0,58,2],[109,11,58,9],[109,29,58,15,"items"],[109,34,58,9],[109,35,58,2],[110,0,59,1],[110,3,57,7],[114,0,61,7],[114,6,61,13,"call"],[114,10,61,17],[114,13,61,20],[114,22,61,13,"call"],[114,26,61,20],[114,27,61,29,"args"],[114,31,61,20],[114,33,61,35,"func"],[114,37,61,20],[114,39,61,41],[115,0,62,2],[115,11,62,9],[115,15,62,13,"AnimatedCall"],[115,36,62,9],[115,37,62,26,"args"],[115,41,62,9],[115,43,62,32,"func"],[115,47,62,9],[115,48,62,2],[116,0,63,1],[116,3,61,7],[120,0,65,7],[120,6,65,13,"debug"],[120,11,65,18],[120,14,65,21],[120,23,65,13,"debug"],[120,28,65,21],[120,29,65,30,"message"],[120,36,65,21],[120,38,65,39,"value"],[120,43,65,21],[120,45,65,46],[121,0,66,2],[121,8,66,6,"__DEV__"],[121,15,66,2],[121,17,66,15],[122,0,67,4],[122,10,67,10,"runningInRemoteDebugger"],[122,33,67,33],[122,36,67,36],[122,43,67,43,"atob"],[122,47,67,36],[122,52,67,52],[122,63,67,4],[123,0,71,4],[123,10,71,10,"runningInExpoShell"],[123,28,71,28],[123,31,72,6,"global"],[123,37,72,12],[123,38,72,13,"Expo"],[123,42,72,6],[123,46,72,21,"global"],[123,52,72,27],[123,53,72,28,"Expo"],[123,57,72,21],[123,58,72,33,"Constants"],[123,67,72,21],[123,68,72,43,"appOwnership"],[123,80,72,21],[123,85,72,60],[123,97,71,4],[125,0,74,4],[125,10,74,8,"runningInRemoteDebugger"],[125,33,74,31],[125,37,74,35,"runningInExpoShell"],[125,55,74,4],[125,57,74,55],[126,0,77,6],[126,15,77,13,"block"],[126,20,77,18],[126,21,77,19],[126,22,78,8,"call"],[126,26,78,12],[126,27,78,13],[126,28,78,14,"value"],[126,33,78,13],[126,34,78,12],[126,36,78,22],[127,0,78,22],[128,0,78,22],[128,14,78,24,"a"],[128,15,78,22],[130,0,78,22],[130,17,78,31,"console"],[130,24,78,38],[130,25,78,39,"log"],[130,28,78,31],[130,29,78,46,"message"],[130,36,78,31],[130,45,78,57,"a"],[130,46,78,31],[130,47,78,22],[131,0,78,22],[131,9,78,12],[131,10,77,19],[131,12,79,8,"value"],[131,17,77,19],[131,18,77,18],[131,19,77,6],[132,0,81,5],[132,7,74,4],[132,13,81,11],[133,0,82,6],[133,15,82,13],[133,19,82,17,"AnimatedDebug"],[133,41,82,13],[133,42,82,31,"message"],[133,49,82,13],[133,51,82,40],[133,69,82,46,"value"],[133,74,82,40],[133,75,82,13],[133,76,82,6],[134,0,83,5],[135,0,84,3],[137,0,86,2],[137,11,86,9,"value"],[137,16,86,2],[138,0,87,1],[138,3,65,7],[142,0,89,7],[142,6,89,13,"startClock"],[142,16,89,23],[142,19,89,26],[142,28,89,13,"startClock"],[142,38,89,26],[142,39,89,35,"clock"],[142,44,89,26],[142,46,89,42],[143,0,90,2],[143,11,90,9],[143,15,90,13,"AnimatedStartClock"],[143,42,90,9],[143,43,90,32,"clock"],[143,48,90,9],[143,49,90,2],[144,0,91,1],[144,3,89,7],[148,0,93,7],[148,6,93,13,"always"],[148,12,93,19],[148,15,93,22],[148,24,93,13,"always"],[148,30,93,22],[148,31,93,31,"item"],[148,35,93,22],[148,37,93,37],[149,0,94,2],[149,11,94,9],[149,15,94,13,"AnimatedAlways"],[149,38,94,9],[149,39,94,28,"item"],[149,43,94,9],[149,44,94,2],[150,0,95,1],[150,3,93,7],[154,0,97,7],[154,6,97,13,"concat"],[154,12,97,19],[154,15,97,22],[154,24,97,13,"concat"],[154,30,97,22],[154,33,97,40],[155,0,97,40],[155,39,97,34,"args"],[155,43,97,40],[156,0,97,34,"args"],[156,6,97,34,"args"],[156,10,97,40],[157,0,97,40],[159,0,98,2],[159,11,98,9],[159,15,98,13,"AnimatedConcat"],[159,38,98,9],[159,39,98,28,"args"],[159,43,98,32],[159,44,98,33,"map"],[159,47,98,28],[159,48,98,37,"adapt"],[159,60,98,28],[159,61,98,9],[159,62,98,2],[160,0,99,1],[160,3,97,7],[164,0,101,7],[164,6,101,13,"stopClock"],[164,15,101,22],[164,18,101,25],[164,27,101,13,"stopClock"],[164,36,101,25],[164,37,101,34,"clock"],[164,42,101,25],[164,44,101,41],[165,0,102,2],[165,11,102,9],[165,15,102,13,"AnimatedStopClock"],[165,41,102,9],[165,42,102,31,"clock"],[165,47,102,9],[165,48,102,2],[166,0,103,1],[166,3,101,7],[170,0,105,7],[170,6,105,13,"clockRunning"],[170,18,105,25],[170,21,105,28],[170,30,105,13,"clockRunning"],[170,42,105,28],[170,43,105,37,"clock"],[170,48,105,28],[170,50,105,44],[171,0,106,2],[171,11,106,9],[171,15,106,13,"AnimatedClockTest"],[171,41,106,9],[171,42,106,31,"clock"],[171,47,106,9],[171,48,106,2],[172,0,107,1],[172,3,105,7],[176,0,109,7],[176,6,109,13,"event"],[176,11,109,18],[176,14,109,21],[176,23,109,13,"event"],[176,28,109,21],[176,29,109,30,"argMapping"],[176,39,109,21],[176,41,109,42,"config"],[176,47,109,21],[176,49,109,50],[177,0,110,2],[177,11,110,9],[177,15,110,13,"AnimatedEvent"],[177,37,110,9],[177,38,110,27,"argMapping"],[177,48,110,9],[177,50,110,39,"config"],[177,56,110,9],[177,57,110,2],[178,0,111,1],[178,3,109,7]]},"type":"js/module"}]}